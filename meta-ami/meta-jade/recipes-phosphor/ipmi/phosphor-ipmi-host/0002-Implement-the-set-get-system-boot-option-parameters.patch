From 2cb45575ada3cdb5b8ae9ed4551e2fe75227aafd Mon Sep 17 00:00:00 2001
From: Hieu Huynh <hieu.huynh@amperecomputing.com>
Date: Mon, 19 Apr 2021 11:04:53 +0000
Subject: [PATCH] Implement the set/get system boot option parameters

Implement the set/get system boot option parameters #4 (boot info
acknowledge)

Signed-off-by: Hieu Huynh <hieu.huynh@amperecomputing.com>
---
 chassishandler.cpp | 14 ++++++--------
 1 file changed, 6 insertions(+), 8 deletions(-)

diff --git a/chassishandler.cpp b/chassishandler.cpp
index 4ca981d..9873874 100644
--- a/chassishandler.cpp
+++ b/chassishandler.cpp
@@ -1673,6 +1673,7 @@ static ipmi::Cc setBootMode(const Mode::Modes& mode)
 static constexpr uint8_t setComplete = 0x0;
 static constexpr uint8_t setInProgress = 0x1;
 static uint8_t transferStatus = setComplete;
+static uint5_t bootInitiatorAckData = 0x0;
 
 /** @brief implements the Get Chassis system boot option
  *  @param bootOptionParameter   - boot option parameter selector
@@ -1719,8 +1720,7 @@ ipmi::RspType<ipmi::message::Payload>
         static_cast<uint8_t>(BootOptionParameter::bootInfo))
     {
         constexpr uint8_t writeMask = 0;
-        constexpr uint8_t bootInfoAck = 0;
-        response.pack(bootOptionParameter, writeMask, bootInfoAck);
+        response.pack(bootOptionParameter, reserved1, writeMask, bootInitiatorAckData);
         return ipmi::responseSuccess(std::move(response));
     }
 
@@ -2000,10 +2000,10 @@ ipmi::RspType<> ipmiChassisSetSysBootOptions(ipmi::Context::ptr ctx,
              static_cast<uint7_t>(BootOptionParameter::bootInfo))
     {
         uint8_t writeMak;
-        uint5_t bootInitiatorAckData;
+        uint5_t bootInfoAck;
         uint3_t rsvd;
 
-        if (data.unpack(writeMak, bootInitiatorAckData, rsvd) != 0 ||
+        if (data.unpack(writeMak, bootInfoAck, rsvd) != 0 ||
             !data.fullyUnpacked())
         {
             return ipmi::responseReqDataLenInvalid();
@@ -2012,10 +2012,8 @@ ipmi::RspType<> ipmiChassisSetSysBootOptions(ipmi::Context::ptr ctx,
         {
             return ipmi::responseInvalidFieldRequest();
         }
-        // (ccSuccess). There is no implementation in OpenBMC for this
-        // parameter. This is added to support the ipmitool command `chassis
-        // bootdev` which sends set on parameter #4, before setting the boot
-        // flags.
+        bootInitiatorAckData &= ~writeMak;
+        bootInitiatorAckData |= writeMak & bootInfoAck;
         log<level::INFO>("ipmiChassisSetSysBootOptions: bootInfo parameter set "
                          "successfully");
         data.trailingOk = true;
-- 
2.17.1

