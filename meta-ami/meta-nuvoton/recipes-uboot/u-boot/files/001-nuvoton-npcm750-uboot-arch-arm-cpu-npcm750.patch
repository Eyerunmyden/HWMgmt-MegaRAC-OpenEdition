diff -Naur k3/arch/arm/cpu/armv7/npcm750/cache.c l3/arch/arm/cpu/armv7/npcm750/cache.c
--- k3/arch/arm/cpu/armv7/npcm750/cache.c	2020-08-28 17:36:41.975633482 -0400
+++ l3/arch/arm/cpu/armv7/npcm750/cache.c	2020-08-28 17:38:42.544869877 -0400
@@ -1,5 +1,5 @@
 /*
- * SPDX-License-Identifier:    GPL-2.0+
+ * SPDX-License-Identifier:	GPL-2.0+
  */
 
 #include <common.h>
@@ -8,12 +8,12 @@
 
 void enable_caches(void)
 {
-       dcache_enable();
+	dcache_enable();
 }
 
 void disable_caches(void)
 {
-       dcache_disable();
+	dcache_disable();
 }
 
 #endif
diff -Naur k3/arch/arm/cpu/armv7/npcm750/cpu.c l3/arch/arm/cpu/armv7/npcm750/cpu.c
--- k3/arch/arm/cpu/armv7/npcm750/cpu.c	2020-08-28 17:36:41.975633482 -0400
+++ l3/arch/arm/cpu/armv7/npcm750/cpu.c	2020-08-28 17:38:44.064885837 -0400
@@ -24,22 +24,39 @@
 #include <asm/io.h>
 #include <asm/arch/cpu.h>
 #include <asm/arch/gcr.h>
+#include <asm/armv7.h>
 
 int print_cpuinfo (void)
 {
 	struct npcm750_gcr *gcr = (struct npcm750_gcr *)npcm750_get_base_gcr();
-	unsigned int id;
+	unsigned int id, mdlr;
 
-	id = readl(&gcr->pdid);
+	mdlr = readl(&gcr->mdlr);
 
 	printf("CPU: ");
 
+	switch(mdlr) {
+	case POLEG_NPCM750:
+		printf("NPCM750 ");
+		break;
+	case POLEG_NPCM730:
+		printf("NPCM730 ");
+		break;
+	case POLEG_NPCM710:
+		printf("NPCM710 ");
+		break;
+	default:
+		printf("NPCM7XX ");
+		break;
+	}
+
+	id = readl(&gcr->pdid);
 	switch(id) {
 	case POLEG_Z1:
-		printf("NPCM7XX Z1 is no supported! @ ");
+		printf("Z1 is no supported! @ ");
 		break;
 	case POLEG_A1:
-		printf("NPCM7XX A1 @ ");
+		printf("A1 @ ");
 		break;
 	default:
 		printf("Unknown\n");
@@ -49,3 +66,9 @@
 	return 0;
 }
 
+void s_init(void)
+{
+	/* Invalidate L2 cache in lowlevel_init */
+	v7_outer_cache_inval_all();
+}
+
diff -Naur k3/arch/arm/cpu/armv7/npcm750/l2_cache_pl310_init.S l3/arch/arm/cpu/armv7/npcm750/l2_cache_pl310_init.S
--- k3/arch/arm/cpu/armv7/npcm750/l2_cache_pl310_init.S	2020-08-28 17:36:41.975633482 -0400
+++ l3/arch/arm/cpu/armv7/npcm750/l2_cache_pl310_init.S	2020-08-28 17:38:46.108907322 -0400
@@ -39,12 +39,11 @@
 		@ 1 cycle RAM write access latency
 		@ 2 cycles RAM read access latency
 		@ 1 cycle RAM setup latency
-		/*LDR     r1, =0x00000010	@ Altera uses read latency 1, but 0 seems to work */
 		LDR     r1, =0x00000000
 		STR     r1, [r0,#0x10C]		@ data ram control reg at offset 0x108
 
-		@Cache maintenance - invalidate by way (0xff) - base offset 0x77C
-		LDR     r1, =0xFF
+		@Cache maintenance - invalidate 16 ways (0xffff) - base offset 0x77C
+		LDR     r1, =0xFFFF
 		STR     r1, [r0,#0x77C]		@ invalidate by way register at offset 0x77C
 	poll_invalidate:
 		LDR     r1, [r0,#0x77C]		@ invalidate by way register at offset 0x77C
