diff -Naur a/arch/arm/cpu/armv7/Makefile b/arch/arm/cpu/armv7/Makefile
--- a/arch/arm/cpu/armv7/Makefile	2019-07-22 22:57:52.000000000 -0400
+++ b/arch/arm/cpu/armv7/Makefile	2020-05-25 15:11:20.439883141 -0400
@@ -33,6 +33,10 @@
 obj-y += s5p-common/
 endif
 
+ifneq (,$(filter npcm750,$(SOC)))
+obj-y += npcm750/
+endif
+
 obj-$(if $(filter bcm235xx,$(SOC)),y) += bcm235xx/
 obj-$(if $(filter bcm281xx,$(SOC)),y) += bcm281xx/
 obj-$(if $(filter bcmcygnus,$(SOC)),y) += bcmcygnus/
diff -Naur a/arch/arm/Kconfig b/arch/arm/Kconfig
--- a/arch/arm/Kconfig	2019-07-22 22:57:52.000000000 -0400
+++ b/arch/arm/Kconfig	2020-05-25 15:11:20.367882386 -0400
@@ -1453,6 +1453,14 @@
 	select OF_CONTROL
 	imply CMD_DM
 
+config ARCH_NPCM750
+	bool "Support npcm750"
+	select CPU_V7A
+	select OF_CONTROL
+	select DM
+	help
+	  Support for Poleg BMC SoC family developed by Nuvoton Inc.
+
 endchoice
 
 config TI_SECURE_DEVICE
@@ -1563,6 +1571,8 @@
 
 source "arch/arm/mach-imx/Kconfig"
 
+source "arch/arm/mach-npcm750/Kconfig"
+
 source "board/bosch/shc/Kconfig"
 source "board/CarMediaLab/flea3/Kconfig"
 source "board/Marvell/aspenite/Kconfig"
diff -Naur a/arch/arm/cpu/armv7/npcm750/cache.c b/arch/arm/cpu/armv7/npcm750/cache.c
--- a/arch/arm/cpu/armv7/npcm750/cache.c        1969-12-31 19:00:00.000000000 -0500
+++ b/arch/arm/cpu/armv7/npcm750/cache.c        2020-05-25 15:11:20.455883310 -0400
@@ -0,0 +1,20 @@
+/*
+ * SPDX-License-Identifier:    GPL-2.0+
+ */
+
+#include <common.h>
+
+#ifndef CONFIG_SYS_DCACHE_OFF
+
+void enable_caches(void)
+{
+       dcache_enable();
+}
+
+void disable_caches(void)
+{
+       dcache_disable();
+}
+
+#endif
+
diff -Naur a/arch/arm/cpu/armv7/npcm750/cpu.c b/arch/arm/cpu/armv7/npcm750/cpu.c
--- a/arch/arm/cpu/armv7/npcm750/cpu.c	1969-12-31 19:00:00.000000000 -0500
+++ b/arch/arm/cpu/armv7/npcm750/cpu.c	2020-05-25 15:11:20.455883310 -0400
@@ -0,0 +1,51 @@
+/*
+ *  Copyright (c) 2016 Nuvoton Technology Corp.
+ *
+ * See file CREDITS for list of people who contributed to this
+ * project.
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License as
+ * published by the Free Software Foundation; either version 2 of
+ * the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ * MA 02111-1307 USA
+ */
+
+#include <common.h>
+#include <asm/io.h>
+#include <asm/arch/cpu.h>
+#include <asm/arch/gcr.h>
+
+int print_cpuinfo (void)
+{
+	struct npcm750_gcr *gcr = (struct npcm750_gcr *)npcm750_get_base_gcr();
+	unsigned int id;
+
+	id = readl(&gcr->pdid);
+
+	printf("CPU: ");
+
+	switch(id) {
+	case POLEG_Z1:
+		printf("NPCM7XX Z1 is no supported! @ ");
+		break;
+	case POLEG_A1:
+		printf("NPCM7XX A1 @ ");
+		break;
+	default:
+		printf("Unknown\n");
+		break;
+	}
+
+	return 0;
+}
+
diff -Naur a/arch/arm/cpu/armv7/npcm750/l2_cache_pl310.c b/arch/arm/cpu/armv7/npcm750/l2_cache_pl310.c
--- a/arch/arm/cpu/armv7/npcm750/l2_cache_pl310.c	1969-12-31 19:00:00.000000000 -0500
+++ b/arch/arm/cpu/armv7/npcm750/l2_cache_pl310.c	2020-05-25 15:11:20.455883310 -0400
@@ -0,0 +1,19 @@
+#include <common.h>
+
+extern  void l2_pl310_init(void);
+void set_pl310_ctrl(u32 enable);
+
+
+#ifndef CONFIG_SYS_L2CACHE_OFF
+void v7_outer_cache_enable(void)
+{
+	printf("l2_pl310_init\n");
+	l2_pl310_init();
+	set_pl310_ctrl(1);
+}
+
+void v7_outer_cache_disable(void)
+{
+	set_pl310_ctrl(0);
+}
+#endif /* !CONFIG_SYS_L2CACHE_OFF */
diff -Naur a/arch/arm/cpu/armv7/npcm750/l2_cache_pl310_init.S b/arch/arm/cpu/armv7/npcm750/l2_cache_pl310_init.S
--- a/arch/arm/cpu/armv7/npcm750/l2_cache_pl310_init.S	1969-12-31 19:00:00.000000000 -0500
+++ b/arch/arm/cpu/armv7/npcm750/l2_cache_pl310_init.S	2020-05-25 15:11:20.455883310 -0400
@@ -0,0 +1,86 @@
+
+.align 5
+
+#include <linux/linkage.h>
+
+#ifndef CONFIG_SYS_L2CACHE_OFF
+
+ENTRY(l2_pl310_init)
+
+
+	@------------------------------------------------------------------
+	@ L2CC (PL310) Initialization
+	@------------------------------------------------------------------
+		@ In this example PL310 PA = VA. The memory was marked as Device memory
+		@ in previous stages when defining CORE0 private address space
+		LDR     r0, =0xF03FC000        @ A9_BASE_ADDR
+
+		@ Disable L2 Cache controller just in case it is already on
+		LDR     r1, =0x0
+		STR     r1, [r0,#0x100]
+
+		@ Set aux cntrl
+		@ Way size = 32KB
+        @ Way = 16
+		LDR     r1, =0x02050000
+		ORR	r1, r1, #(1 << 29)	@ Instruction prefetch enable
+		ORR	r1, r1, #(1 << 28)	@ Data prefetch enable
+		ORR	r1, r1, #(1 << 22)	@ cache replacement policy
+		STR     r1, [r0,#0x104]		@ auxilary control reg at offset 0x104
+
+		@ Set tag RAM latency
+		@ 1 cycle RAM write access latency
+		@ 1 cycle RAM read access latency
+		@ 1 cycle RAM setup latency
+		LDR     r1, =0x00000000
+		STR     r1, [r0,#0x108]		@ tag ram control reg at offset 0x108
+
+		@ Set Data RAM latency
+		@ 1 cycle RAM write access latency
+		@ 2 cycles RAM read access latency
+		@ 1 cycle RAM setup latency
+		/*LDR     r1, =0x00000010	@ Altera uses read latency 1, but 0 seems to work */
+		LDR     r1, =0x00000000
+		STR     r1, [r0,#0x10C]		@ data ram control reg at offset 0x108
+
+		@Cache maintenance - invalidate by way (0xff) - base offset 0x77C
+		LDR     r1, =0xFF
+		STR     r1, [r0,#0x77C]		@ invalidate by way register at offset 0x77C
+	poll_invalidate:
+		LDR     r1, [r0,#0x77C]		@ invalidate by way register at offset 0x77C
+		TST     r1, #1
+		BNE     poll_invalidate
+
+	/*
+		@ Enable Event Counter Control Register. Reset counter 0 and 1 values
+		LDR     r1, =0x007
+		STR     r1, [r0,#0x200]
+
+		@ Counter 1. Count Drhit event
+		LDR     r1, =0x008
+		STR     r1, [r0,#0x204]
+
+		@ Counter 0. Count Dwhit event
+		LDR     r1, =0x010
+		STR     r1, [r0,#0x208]
+	*/
+
+		@ Ensure L2 remains disabled for the time being
+		LDR     r1, =0x0
+		STR     r1, [r0,#0x100]
+
+	MRC     p15, 4, r0, c15, c0, 0     @ Read periph base address
+		@ SCU offset from base of private peripheral space = 0x000
+
+		LDR     r1, [r0, #0x0]             @ Read the SCU Control Register
+		ORR     r1, r1, #0x1               @ Set bit 0 (The Enable bit)
+		STR     r1, [r0, #0x0]             @ Write back modifed value
+
+		BX	lr
+
+
+
+ENDPROC(l2_pl310_init)
+
+
+#endif
diff -Naur a/arch/arm/cpu/armv7/npcm750/Makefile b/arch/arm/cpu/armv7/npcm750/Makefile
--- a/arch/arm/cpu/armv7/npcm750/Makefile	1969-12-31 19:00:00.000000000 -0500
+++ b/arch/arm/cpu/armv7/npcm750/Makefile	2020-05-25 15:11:20.455883310 -0400
@@ -0,0 +1,25 @@
+#
+# Copyright (c) 2016 Nuvoton Technology Corp.#
+#
+# See file CREDITS for list of people who contributed to this
+# project.
+#
+# This program is free software; you can redistribute it and/or
+# modify it under the terms of the GNU General Public License as
+# published by the Free Software Foundation; either version 2 of
+# the License, or (at your option) any later version.
+#
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+# GNU General Public License for more details.
+#
+# You should have received a copy of the GNU General Public License
+# along with this program; if not, write to the Free Software
+# Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+# MA 02111-1307 USA
+#
+
+
+obj-y	= cpu.o cache.o l2_cache_pl310_init.o l2_cache_pl310.o
+
diff -Naur a/arch/arm/dts/Makefile b/arch/arm/dts/Makefile
--- a/arch/arm/dts/Makefile	2019-07-22 22:57:52.000000000 -0400
+++ b/arch/arm/dts/Makefile	2020-05-25 15:11:20.363882345 -0400
@@ -695,6 +695,9 @@
 	mt7623n-bananapi-bpi-r2.dtb \
 	mt7629-rfb.dtb
 
+dtb-$(CONFIG_ARCH_NPCM750) += \
+	nuvoton-npcm750-evb.dtb
+
 targets += $(dtb-y)
 
 # Add any required device tree compiler flags here
diff -Naur a/arch/arm/lib/cache-pl310.c b/arch/arm/lib/cache-pl310.c
--- a/arch/arm/lib/cache-pl310.c	2019-07-22 22:57:53.000000000 -0400
+++ b/arch/arm/lib/cache-pl310.c	2020-05-25 15:11:20.415882890 -0400
@@ -33,11 +33,16 @@
 	/* Invalidate all ways */
 	writel(way_mask, op_reg);
 	/* Wait for all ways to be invalidated */
-	while (readl(op_reg) & way_mask)
+	while (readl(op_reg) && way_mask)
 		;
 	pl310_cache_sync();
 }
 
+void set_pl310_ctrl(u32 enable)
+{
+	writel(enable, &pl310->pl310_ctrl);
+}
+
 void v7_outer_cache_inval_all(void)
 {
 	pl310_background_op_all_ways(&pl310->pl310_inv_way);
diff -Naur a/arch/arm/mach-npcm750/bootm_os.c b/arch/arm/mach-npcm750/bootm_os.c
--- a/arch/arm/mach-npcm750/bootm_os.c	1969-12-31 19:00:00.000000000 -0500
+++ b/arch/arm/mach-npcm750/bootm_os.c	2020-05-25 15:11:20.639885240 -0400
@@ -0,0 +1,54 @@
+// SPDX-License-Identifier: GPL-2.0+
+/*
+ * (C) Copyright 2019-2022 Nuvoton Technology Corp.
+ */
+
+#include <common.h>
+#include <asm/io.h>
+#include <asm/arch/cpu.h>
+#include <asm/arch/gcr.h>
+
+
+#define NPCM750_GCR_INTCR2_SELFTEST_PASSED		BIT(11)
+#define NPCM750_GCR_INTCR2_WDC				BIT(21)
+
+#define NPCM750_GCR_FLOCKR1_UPDATE_APPROVE		BIT(28)
+#define NPCM750_GCR_FLOCKR1_UPDATE_APPROVE_LOCK		BIT(29)
+
+static int npcm750_check_selftest (void)
+{
+	struct npcm750_gcr *gcr = (struct npcm750_gcr *)npcm750_get_base_gcr();
+	int ret = 0;
+	int val = 0;
+
+	if (readl(&gcr->intcr2) & NPCM750_GCR_INTCR2_SELFTEST_PASSED)
+	{
+		val = readl(&gcr->flockr1);
+		val |= NPCM750_GCR_FLOCKR1_UPDATE_APPROVE;
+		writel(val, &gcr->flockr1);
+
+		/* this will clear INTCR2.WDC */
+		reset_misc();
+
+		reset_cpu(0);
+	}
+	else
+	{
+		val = readl(&gcr->flockr1);
+		val &= ~NPCM750_GCR_FLOCKR1_UPDATE_APPROVE;
+		writel(val, &gcr->flockr1);
+
+		val = readl(&gcr->flockr1);
+		val |= NPCM750_GCR_FLOCKR1_UPDATE_APPROVE_LOCK;
+		writel(val, &gcr->flockr1);
+	}
+	return ret;
+}
+
+/* Allow for arch specific config before we boot */
+void arch_preboot_os(void)
+{
+	/* please define platform specific arch_preboot_os() */
+	npcm750_check_selftest();
+}
+
diff -Naur a/arch/arm/mach-npcm750/include/mach/clock.h b/arch/arm/mach-npcm750/include/mach/clock.h
--- a/arch/arm/mach-npcm750/include/mach/clock.h	1969-12-31 19:00:00.000000000 -0500
+++ b/arch/arm/mach-npcm750/include/mach/clock.h	2020-05-25 15:11:20.643885281 -0400
@@ -0,0 +1,65 @@
+/*
+ *  Copyright (c) 2017 Nuvoton Technology Corp.
+ *
+ * See file CREDITS for list of people who contributed to this
+ * project.
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License as
+ * published by the Free Software Foundation; either version 2 of
+ * the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ * MA 02111-1307 USA
+ */
+
+#ifndef __NPCMX50_CLOCK_H_
+#define __NPCMX50_CLOCK_H_
+
+#if defined (CONFIG_TARGET_POLEG)
+#include <asm/arch/poleg_clock.h>
+#else
+#error "no target board defined!"
+#endif
+
+#define EXT_CLOCK_FREQUENCY_KHZ	    25 * 1000 * 1UL
+#define EXT_CLOCK_FREQUENCY_MHZ	    25
+
+struct clk_ctl {
+	unsigned int  clken1;
+	unsigned int  clksel;
+	unsigned int  clkdiv1;
+	unsigned int  pllcon0;
+	unsigned int  pllcon1;
+	unsigned int  swrstr;
+	unsigned char res1[0x8];
+	unsigned int  ipsrst1;
+	unsigned int  ipsrst2;
+	unsigned int  clken2;
+	unsigned int  clkdiv2;
+	unsigned int  clken3;
+	unsigned int  ipsrst3;
+	unsigned int  wd0rcr;
+	unsigned int  wd1rcr;
+	unsigned int  wd2rcr;
+	unsigned int  swrstc1;
+	unsigned int  swrstc2;
+	unsigned int  swrstc3;
+	unsigned int  swrstc4;
+	unsigned int  pllcon2;
+	unsigned int  clkdiv3;
+	unsigned int  corstc;
+	unsigned char res2[0x4];
+	unsigned int  ahbckfi;
+	unsigned int  seccnt;
+	unsigned int  cntr25m;
+};
+
+#endif
diff -Naur a/arch/arm/mach-npcm750/include/mach/cpu.h b/arch/arm/mach-npcm750/include/mach/cpu.h
--- a/arch/arm/mach-npcm750/include/mach/cpu.h	1969-12-31 19:00:00.000000000 -0500
+++ b/arch/arm/mach-npcm750/include/mach/cpu.h	2020-05-25 15:11:20.643885281 -0400
@@ -0,0 +1,43 @@
+/*
+ *  Copyright (c) 2017 Nuvoton Technology Corp.
+ *
+ * See file CREDITS for list of people who contributed to this
+ * project.
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License as
+ * published by the Free Software Foundation; either version 2 of
+ * the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ * MA 02111-1307 USA
+ */
+
+#ifndef __NPCMX50_CPU_H_
+#define __NPCMX50_CPU_H_
+
+#define NPCM750_GCR_BA			0xF0800000
+#define NPCM750_CLK_BA			0xF0801000
+
+#ifndef __ASSEMBLY__
+
+#define NPCM750_BASE(device, base) \
+static inline unsigned long __attribute__((no_instrument_function)) \
+	npcm750_get_base_##device(void) \
+{ \
+	return NPCM750_##base; \
+}
+
+NPCM750_BASE(gcr, GCR_BA)
+NPCM750_BASE(clk, CLK_BA)
+
+#endif
+
+#endif
diff -Naur a/arch/arm/mach-npcm750/include/mach/fiu.h b/arch/arm/mach-npcm750/include/mach/fiu.h
--- a/arch/arm/mach-npcm750/include/mach/fiu.h	1969-12-31 19:00:00.000000000 -0500
+++ b/arch/arm/mach-npcm750/include/mach/fiu.h	2020-05-25 15:11:20.643885281 -0400
@@ -0,0 +1,76 @@
+/*
+ *  Copyright (c) 2017 Nuvoton Technology Corp.
+ *
+ * See file CREDITS for list of people who contributed to this
+ * project.
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License as
+ * published by the Free Software Foundation; either version 2 of
+ * the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ * MA 02111-1307 USA
+ */
+
+#ifndef __NPCMX50_FIU_H_
+#define __NPCMX50_FIU_H_
+#ifndef __ASSEMBLY__
+
+#if defined (CONFIG_TARGET_POLEG)
+#include <asm/arch/poleg_fiu.h>
+#else
+#error "no target board defined!"
+#endif
+
+#define FIU_DEVICES_PER_MODULE		    4
+
+enum fiu_moudle_tag {
+	FIU_MODULE_0,
+	FIU_MODULE_1,
+	FIU_MODULE_2,
+	FIU_MODULE_3,
+	FIU_MODULE_X
+};
+
+
+struct npcm750_fiu_regs {
+	unsigned int    drd_cfg;
+	unsigned int    dwr_cfg;
+	unsigned int    uma_cfg;
+	unsigned int    uma_cts;
+	unsigned int    uma_cmd;
+	unsigned int    uma_addr;
+	unsigned int    prt_cfg;
+	unsigned char	res1[4];
+	unsigned int    uma_dw0;
+	unsigned int    uma_dw1;
+	unsigned int    uma_dw2;
+	unsigned int    uma_dw3;
+	unsigned int    uma_dr0;
+	unsigned int    uma_dr1;
+	unsigned int    uma_dr2;
+	unsigned int    uma_dr3;
+	unsigned int    prt_cmd0;
+	unsigned int    prt_cmd1;
+	unsigned int    prt_cmd2;
+	unsigned int    prt_cmd3;
+	unsigned int    prt_cmd4;
+	unsigned int    prt_cmd5;
+	unsigned int    prt_cmd6;
+	unsigned int    prt_cmd7;
+	unsigned int    prt_cmd8;
+	unsigned int    prt_cmd9;
+	unsigned int    stuff[4];
+	unsigned int    fiu_cfg;
+};
+
+#endif /* __ASSEMBLY__ */
+#endif
diff -Naur a/arch/arm/mach-npcm750/include/mach/gcr.h b/arch/arm/mach-npcm750/include/mach/gcr.h
--- a/arch/arm/mach-npcm750/include/mach/gcr.h	1969-12-31 19:00:00.000000000 -0500
+++ b/arch/arm/mach-npcm750/include/mach/gcr.h	2020-05-25 15:11:20.643885281 -0400
@@ -0,0 +1,77 @@
+/*
+ *  Copyright (c) 2017 Nuvoton Technology Corp.
+ *
+ * See file CREDITS for list of people who contributed to this
+ * project.
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License as
+ * published by the Free Software Foundation; either version 2 of
+ * the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ * MA 02111-1307 USA
+ */
+
+#ifndef __NPCMX50_GCR_H_
+#define __NPCMX50_GCR_H_
+
+#if defined (CONFIG_TARGET_POLEG)
+#include <asm/arch/poleg_gcr.h>
+#else
+#error "no target board defined!"
+#endif
+
+struct npcm750_gcr {
+	unsigned int  pdid;
+	unsigned int  pwron;
+	unsigned char res1[0x4];
+	unsigned int  mfsel1;
+	unsigned int  mfsel2;
+	unsigned int  miscpe;
+	unsigned char res2[0x20];
+	unsigned int  spswc;
+	unsigned int  intcr;
+	unsigned int  intsr;
+	unsigned char res3[0xc];
+	unsigned int  hifcr;
+	unsigned char res4[0xc];
+	unsigned int  intcr2;
+	unsigned int  mfsel3;
+	unsigned int  srcnt;
+	unsigned int  ressr;
+	unsigned int  rlockr1;
+	unsigned int  flockr1;
+	unsigned int  dscnt;
+	unsigned int  mdlr;
+	unsigned char res5[0x18];
+	unsigned int  davclvlr;
+	unsigned int  intcr3;
+	unsigned char res6[0xc];
+	unsigned int  vsintr;
+	unsigned int  mfsel4;
+	unsigned char res7[0x10];
+	unsigned int  cpbpntr;
+	unsigned char res8[0x8];
+	unsigned int  cpctl;
+	unsigned int  cp2bst;
+	unsigned int  b2cpnt;
+	unsigned int  cppctl;
+	unsigned int  i2csegsel;
+	unsigned int  i2csegctl;
+	unsigned int  vsrcr;
+	unsigned int  mlockr;
+	unsigned char res9[0x4c];
+	unsigned int  scrpad;
+	unsigned int  usb1phyctl;
+	unsigned int  usb2phyctl;
+};
+
+#endif
diff -Naur a/arch/arm/mach-npcm750/include/mach/gpio.h b/arch/arm/mach-npcm750/include/mach/gpio.h
--- a/arch/arm/mach-npcm750/include/mach/gpio.h	1969-12-31 19:00:00.000000000 -0500
+++ b/arch/arm/mach-npcm750/include/mach/gpio.h	2020-05-25 15:11:20.643885281 -0400
@@ -0,0 +1,65 @@
+/*
+ *  Copyright (c) 2017 Nuvoton Technology Corp.
+ *
+ * See file CREDITS for list of people who contributed to this
+ * project.
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License as
+ * published by the Free Software Foundation; either version 2 of
+ * the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ * MA 02111-1307 USA
+ */
+#ifndef __NPCMX50_GPIO_H_
+#define __NPCMX50_GPIO_H_
+
+#if defined (CONFIG_TARGET_POLEG)
+#include <asm/arch/poleg_gpio.h>
+#else
+#error "no target board defined!"
+#endif
+
+struct npcm750_gpio_regs {
+	unsigned int  gpn_tlock1;
+	unsigned int  gpn_din;
+	unsigned int  gpn_pol;
+	unsigned int  gpn_dout;
+	unsigned int  gpn_oe;
+	unsigned int  gpn_otyp;
+	unsigned int  gpn_mp;
+	unsigned int  gpn_pu;
+	unsigned int  gpn_pd;
+	unsigned int  gpn_dbnc;
+	unsigned int  gpn_evtyp;
+	unsigned int  gpn_evbe;
+	unsigned int  gpn_obl0;
+	unsigned int  gpn_obl1;
+	unsigned int  gpn_obl2;
+	unsigned int  gpn_obl3;
+	unsigned int  gpn_even;
+	unsigned int  gpn_evens;
+	unsigned int  gpn_evenc;
+	unsigned int  gpn_evst;
+	unsigned int  gpn_splck;
+	unsigned int  gpn_mplck;
+	unsigned int  gpn_iem;
+	unsigned int  gpn_osrc;
+	unsigned int  gpn_odsc;
+	unsigned char res1[4];
+	unsigned int  gpn_dos;
+	unsigned int  gpn_doc;
+	unsigned int  gpn_oes;
+	unsigned int  gpn_oec;
+	unsigned int  gpn_tlock2;
+};
+
+#endif
diff -Naur a/arch/arm/mach-npcm750/include/mach/poleg_aes.h b/arch/arm/mach-npcm750/include/mach/poleg_aes.h
--- a/arch/arm/mach-npcm750/include/mach/poleg_aes.h	1969-12-31 19:00:00.000000000 -0500
+++ b/arch/arm/mach-npcm750/include/mach/poleg_aes.h	2020-05-25 15:11:20.643885281 -0400
@@ -0,0 +1,55 @@
+#ifndef _POLEG_AES_H_
+#define _POLEG_AES_H_
+
+#include <uboot_aes.h>
+
+#define AES_OP_ENCRYPT          0
+#define AES_OP_DECRYPT          1
+#define SIZE_AES_BLOCK          (AES_KEY_LENGTH)
+
+struct poleg_aes_regs {
+	unsigned char reserved_0[0x400];    // 0x000
+	unsigned int aes_key_0;             // 0x400
+	unsigned int aes_key_1;             // 0x404
+	unsigned int aes_key_2;             // 0x408
+	unsigned int aes_key_3;             // 0x40c
+	unsigned char reserved_1[0x30];     // 0x410
+	unsigned int aes_iv_0;              // 0x440
+	unsigned char reserved_2[0x1c];     // 0x444
+	unsigned int aes_ctr_0;             // 0x460
+	unsigned char reserved_3[0x0c];     // 0x464
+	unsigned int aes_busy;              // 0x470
+	unsigned char reserved_4[0x04];     // 0x474
+	unsigned int aes_sk;                // 0x478
+	unsigned char reserved_5[0x14];     // 0x47c
+	unsigned int aes_prev_iv_0;         // 0x490
+	unsigned char reserved_6[0x0c];     // 0x494
+	unsigned int aes_din_dout;          // 0x4a0
+	unsigned char reserved_7[0x1c];     // 0x4a4
+	unsigned int aes_control;           // 0x4c0
+	unsigned int aes_version;           // 0x4c4
+	unsigned int aes_hw_flags;          // 0x4c8
+	unsigned char reserved_8[0x28];     // 0x4cc
+	unsigned int aes_sw_reset;          // 0x4f4
+	unsigned char reserved_9[0x08];     // 0x4f8
+	unsigned int aes_fifo_data;         // 0x500
+	unsigned char reserved_10[0xfc];    // 0x504
+	unsigned int aes_fifo_status;       // 0x600
+};
+
+#define AES_BUSY_BIT            (1 << 0)
+
+#define SW_RESET_BIT            (1 << 0)
+
+#define AES_SK_BIT              (1 << 0)
+
+#define DIN_FIFO_FULL           (1 << 0)
+#define DIN_FIFO_EMPTY          (1 << 1)
+#define DOUT_FIFO_FULL          (1 << 2)
+#define DOUT_FIFO_EMPTY         (1 << 3)
+#define DIN_FIFO_OVERFLOW       (1 << 4)
+#define DOUT_FIFO_UNDERFLOW     (1 << 5)
+
+int npcm750_aes_select_key(u8 fkeyind);
+
+#endif
diff -Naur a/arch/arm/mach-npcm750/include/mach/poleg_clock.h b/arch/arm/mach-npcm750/include/mach/poleg_clock.h
--- a/arch/arm/mach-npcm750/include/mach/poleg_clock.h	1969-12-31 19:00:00.000000000 -0500
+++ b/arch/arm/mach-npcm750/include/mach/poleg_clock.h	2020-05-25 15:11:20.643885281 -0400
@@ -0,0 +1,147 @@
+/*
+ *  Copyright (c) 2017 Nuvoton Technology Corp.
+ *
+ * See file CREDITS for list of people who contributed to this
+ * project.
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License as
+ * published by the Free Software Foundation; either version 2 of
+ * the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ * MA 02111-1307 USA
+ */
+
+#ifndef __POLEG_CLOCK_H_
+#define __POLEG_CLOCK_H_
+
+enum {
+	APB1  = 1,
+	APB2  = 2,
+	APB3  = 3,
+	APB4  = 4,
+	APB5  = 5,
+	SPI0  = 10,
+	SPI3  = 13,
+};
+
+/* Clock Enable 1 Register (CLKEN1) */
+#define CLKEN1_TIMER0_4             19
+#define CLKEN1_TIMER5_9             20
+#define CLKEN1_EMC1                 6
+
+/* Clock Enable 2 Register (CLKEN2) */
+#define CLKEN2_GMAC1                28
+#define CLKEN2_USBIF                27
+#define CLKEN2_USBHOST              26
+#define CLKEN2_GMAC2                25
+#define CLKEN2_SDHC                 9
+#define CLKEN2_MMC                  8
+
+/* Clock Select Register (CLKSEL) */
+#define CLKSEL_DVCSSEL              23
+#define CLKSEL_GFXMSEL              21
+#define CLKSEL_CLKOUTSEL            18
+#define CLKSEL_GFXCKSEL             16
+#define CLKSEL_TIMCKSEL             14
+#define CLKSEL_MCCKSEL              12
+#define CLKSEL_SUCKSEL              10
+#define CLKSEL_UARTCKSEL            8
+#define CLKSEL_SDCKSEL              6
+#define CLKSEL_PIXCKSEL             4
+#define CLKSEL_GPRFSEL              2
+#define CLKSEL_CPUCKSEL             0
+
+/* Clock Divider Control Register 1 (CLKDIV1) */
+#define CLKDIV1_ADCCKDIV            28
+#define CLKDIV1_CLK4DIV             26
+#define CLKDIV1_TIMCKDIV            21
+#define CLKDIV1_UARTDIV             16
+#define CLKDIV1_MMCCKDIV            11
+#define CLKDIV1_AHB3CKDIV           6
+#define CLKDIV1_PCICKDIV            2
+#define CLKDIV1_CLK2DIV             0
+
+/* Clock Divider Control Register 2 (CLKDIV2) */
+#define CLKDIV2_APB4CKDIV           30
+#define CLKDIV2_APB3CKDIV           28
+#define CLKDIV2_APB2CKDIV           26
+#define CLKDIV2_APB1CKDIV           24
+#define CLKDIV2_APB5CKDIV           22
+#define CLKDIV2_CLKOUTDIV           16
+#define CLKDIV2_GFXCKDIV            13
+#define CLKDIV2_SUCKDIV             8
+#define CLKDIV2_SU48CKDIV           4
+#define CLKDIV2_SD1CKDIV            0
+
+/* Clock Divider Control Register 3 (CLKDIV3) */
+#define CLKDIV3_SPI0CKDV	    6
+#define CLKDIV3_SPIXCKDV	    1
+
+/* PLL Control Register 2 (PLLCON2) */
+#define PLLCONn_LOKI                31
+#define PLLCONn_LOKS                30
+#define PLLCONn_FBDV                16
+#define PLLCONn_OTDV2               13
+#define PLLCONn_PWDEN               12
+#define PLLCONn_OTDV1               8
+#define PLLCONn_INDV                0
+
+/* CPUCKSEL (CPU/AMBA/MC Clock Source Select Bit) */
+#define CLKSEL_CPUCKSEL_PLL0        0x00   /* 0 0: PLL0 clock*/
+#define CLKSEL_CPUCKSEL_PLL1        0x01   /* 0 1: PLL1 clock */
+#define CLKSEL_CPUCKSEL_CLKREF      0x02   /* 1 0: CLKREF input (25 MHz, default) */
+#define CLKSEL_CPUCKSEL_SYSBPCK     0x03   /* 1 1: Bypass clock from pin SYSBPCK */
+
+/* UARTCKSEL (Core and Host UART Clock Source Select Bit). */
+#define CLKSEL_UARTCKSEL_PLL0       0x00  /* 0 0: PLL0    clock. */
+#define CLKSEL_UARTCKSEL_PLL1       0x01  /* 0 1: PLL1    clock. */
+#define CLKSEL_UARTCKSEL_CLKREF     0x02  /* 1 0: CLKREF  clock (25 MHz, default). */
+#define CLKSEL_UARTCKSEL_PLL2       0x03  /* 1 1: PLL2    clock divided by 2. */
+
+/* SDCKSEL (SDHC Clock Source Select Bit). */
+#define CLKSEL_SDCKSEL_PLL0         0x00   /* 0 0: PLL0    clock.  */
+#define CLKSEL_SDCKSEL_PLL1         0x01   /* 0 1: PLL1    clock.  */
+#define CLKSEL_SDCKSEL_CLKREF       0x02   /* 1 0: CLKREF clock (25 MHz, default).  */
+#define CLKSEL_SDCKSEL_PLL2         0x03   /* 1 1: PLL2    clock divided by 2.  */
+
+/* TIMCKSEL (Timer Clock Source Select Bit) */
+#define CLKSEL_TIMCKSEL_PLL0        0x00   /*  0 0: PLL0    clock.  */
+#define CLKSEL_TIMCKSEL_PLL1        0x01   /*  0 1: PLL1    clock.  */
+#define CLKSEL_TIMCKSEL_CLKREF      0x02   /*  1 0: CLKREF clock (25 MHz, default).  */
+#define CLKSEL_TIMCKSEL_PLL2        0x03   /*  1 1: PLL2    clock divided by 2.  */
+
+/* IP Software Reset Register 1 (IPSRST1), offset 0x20 */
+#define IPSRST1_USBDEV1             5
+#define IPSRST1_EMC1                6
+#define IPSRST1_USBDEV2             8
+#define IPSRST1_USBDEV3             25
+#define IPSRST1_USBDEV4             22
+#define IPSRST1_USBDEV5             23
+#define IPSRST1_USBDEV6             24
+
+/* IP Software Reset Register 2 (IPSRST2), offset 0x24 */
+#define IPSRST2_GMAC1               28
+#define IPSRST2_GMAC2               25
+#define IPSRST2_USBHOST             26
+#define IPSRST2_SDHC                9
+#define IPSRST2_MMC                 8
+
+/* IP Software Reset Register 3 (IPSRST3), offset 0x34 */
+#define IPSRST3_USBPHY1             24
+#define IPSRST3_USBPHY2             25
+#define IPSRST3_USBHUB              8
+#define IPSRST3_USBDEV9             7
+#define IPSRST3_USBDEV8             6
+#define IPSRST3_USBDEV7             5
+#define IPSRST3_USBDEV0             4
+
+#endif
diff -Naur a/arch/arm/mach-npcm750/include/mach/poleg_fiu.h b/arch/arm/mach-npcm750/include/mach/poleg_fiu.h
--- a/arch/arm/mach-npcm750/include/mach/poleg_fiu.h	1969-12-31 19:00:00.000000000 -0500
+++ b/arch/arm/mach-npcm750/include/mach/poleg_fiu.h	2020-05-25 15:11:20.643885281 -0400
@@ -0,0 +1,83 @@
+/*
+ *  Copyright (c) 2017 Nuvoton Technology Corp.
+ *
+ * See file CREDITS for list of people who contributed to this
+ * project.
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License as
+ * published by the Free Software Foundation; either version 2 of
+ * the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ * MA 02111-1307 USA
+ */
+
+#ifndef __POLEG_FIU_H_
+#define __POLEG_FIU_H_
+
+#define CHUNK_SIZE		    16
+
+enum _spi_trans_status
+{
+	FIU_TRANS_STATUS_DONE	    = 0,
+	FIU_TRANS_STATUS_IN_PROG    = 1
+};
+
+/* FIU UMA data size */
+enum _spi_uma_data_size
+{
+	FIU_UMA_DATA_SIZE_0	    = 0,
+	FIU_UMA_DATA_SIZE_1	    = 1,
+	FIU_UMA_DATA_SIZE_2	    = 2,
+	FIU_UMA_DATA_SIZE_3	    = 3,
+	FIU_UMA_DATA_SIZE_4	    = 4,
+	FIU_UMA_DATA_SIZE_5	    = 5,
+	FIU_UMA_DATA_SIZE_6	    = 6,
+	FIU_UMA_DATA_SIZE_7	    = 7,
+	FIU_UMA_DATA_SIZE_8	    = 8,
+	FIU_UMA_DATA_SIZE_9	    = 9,
+	FIU_UMA_DATA_SIZE_10	    = 10,
+	FIU_UMA_DATA_SIZE_11	    = 11,
+	FIU_UMA_DATA_SIZE_12	    = 12,
+	FIU_UMA_DATA_SIZE_13	    = 13,
+	FIU_UMA_DATA_SIZE_14	    = 14,
+	FIU_UMA_DATA_SIZE_15	    = 15,
+	FIU_UMA_DATA_SIZE_16	    = 16
+};
+
+/* FIU UMA Configuration Register (FIU_UMA_CFG) */
+#define FIU_UMA_CFG_LCK                 31
+#define FIU_UMA_CFG_CMMLCK              30
+#define FIU_UMA_CFG_RDATSIZ             24
+#define FIU_UMA_CFG_DBSIZ               21
+#define FIU_UMA_CFG_WDATSIZ             16
+#define FIU_UMA_CFG_ADDSIZ              11
+#define FIU_UMA_CFG_CMDSIZ              10
+#define FIU_UMA_CFG_RDBPCK              8
+#define FIU_UMA_CFG_DBPCK               6
+#define FIU_UMA_CFG_WDBPCK              4
+#define FIU_UMA_CFG_ADBPCK              2
+#define FIU_UMA_CFG_CMBPCK              0
+
+/* FIU UMA Control and Status Register (FIU_UMA_CTS) */
+#define FIU_UMA_CTS_RDYIE		25
+#define FIU_UMA_CTS_RDYST		24
+#define FIU_UMA_CTS_SW_CS		16
+#define FIU_UMA_CTS_DEV_NUM		8
+#define FIU_UMA_CTS_EXEC_DONE		0
+
+/* FIU UMA Command Register (FIU_UMA_CMD) */
+#define FIU_UMA_CMD_DUM3		24
+#define FIU_UMA_CMD_DUM2		16
+#define FIU_UMA_CMD_DUM1		8
+#define FIU_UMA_CMD_CMD			0
+
+#endif
diff -Naur a/arch/arm/mach-npcm750/include/mach/poleg_gcr.h b/arch/arm/mach-npcm750/include/mach/poleg_gcr.h
--- a/arch/arm/mach-npcm750/include/mach/poleg_gcr.h	1969-12-31 19:00:00.000000000 -0500
+++ b/arch/arm/mach-npcm750/include/mach/poleg_gcr.h	2020-05-25 15:11:20.643885281 -0400
@@ -0,0 +1,155 @@
+/*
+ *  Copyright (c) 2017 Nuvoton Technology Corp.
+ *
+ * See file CREDITS for list of people who contributed to this
+ * project.
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License as
+ * published by the Free Software Foundation; either version 2 of
+ * the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ * MA 02111-1307 USA
+ */
+
+#ifndef __POLEG_GCR_H_
+#define __POLEG_GCR_H_
+
+/* On-Chip POLEG NPCM750 VERSIONS */
+#define POLEG_Z1                    0x00A92750
+#define POLEG_A1                    0x04A92750
+
+/* Multiple Function Pin Select Register 1 (MFSEL1) */
+#define MFSEL1_SIRQSE               31
+#define MFSEL1_IOX1SEL              30
+#define MFSEL1_DVH1SEL              27
+#define MFSEL1_LPCSEL               26
+#define MFSEL1_PECIB                25
+#define MFSEL1_GSPISEL              24
+#define MFSEL1_SMISEL               22
+#define MFSEL1_CLKOSEL              21
+#define MFSEL1_DVOSEL               18
+#define MFSEL1_KBCICSEL             17
+#define MFSEL1_R2MDSEL              16
+#define MFSEL1_R2ERRSEL             15
+#define MFSEL1_RMII2SEL             14
+#define MFSEL1_R1MDSEL              13
+#define MFSEL1_R1ERRSEL             12
+#define MFSEL1_HSI2SEL              11
+#define MFSEL1_HSI1SEL              10
+#define MFSEL1_BSPSEL               9
+#define MFSEL1_SMB2SEL              8
+#define MFSEL1_SMB1SEL              7
+#define MFSEL1_SMB0SEL              6
+#define MFSEL1_S0CS3SEL             5
+#define MFSEL1_S0CS2SEL             4
+#define MFSEL1_S0CS1SEL             3
+#define MFSEL1_SMB5SEL              2
+#define MFSEL1_SMB4SEL              1
+#define MFSEL1_SMB3SEL              0
+
+/* Multiple Function Pin Select Register 3 (MFSEL3) */
+#define MFSEL3_HSDVOSEL             26
+#define MFSEL3_MMCCDSEL             25
+#define MFSEL3_GPOCSEL              22
+#define MFSEL3_WDO2SEL              20
+#define MFSEL3_WDO1SEL              19
+#define MFSEL3_IOXHSEL              18
+#define MFSEL3_PCIEPUSE             17
+#define MFSEL3_CLKRUNSEL            16
+#define MFSEL3_IOX2SEL              14
+#define MFSEL3_PSPI2SEL             13
+#define MFSEL3_SD1SEL               12
+#define MFSEL3_MMC8SEL              11
+#define MFSEL3_MMCSEL               10
+#define MFSEL3_RMII1SEL             9
+#define MFSEL3_SMB15SEL             8
+#define MFSEL3_SMB14SEL             7
+#define MFSEL3_SMB13SEL             6
+#define MFSEL3_SMB12SEL             5
+#define MFSEL3_PSPI1SEL             3
+#define MFSEL3_SMB7SEL              2
+#define MFSEL3_SMB6SEL              1
+#define MFSEL3_SCISEL               0
+
+/* Multiple Function Pin Select Register 4 (MFSEL4) */
+#define MFSEL4_SMB11DDC             29
+#define MFSEL4_SXCS1SEL             28
+#define MFSEL4_SPXSEL               27
+#define MFSEL4_RG2SEL               24
+#define MFSEL4_RG2MSEL              23
+#define MFSEL4_RG1SEL               22
+#define MFSEL4_RG1MSEL              21
+#define MFSEL4_SP3QSEL              20
+#define MFSEL4_S3CS3SEL             19
+#define MFSEL4_S3CS2SEL             18
+#define MFSEL4_S3CS1SEL             17
+#define MFSEL4_SP3SEL               16
+#define MFSEL4_SP0QSEL              15
+#define MFSEL4_SMB11SEL             14
+#define MFSEL4_SMB10SEL             13
+#define MFSEL4_SMB9SEL              12
+#define MFSEL4_SMB8SEL              11
+#define MFSEL4_DBGTRSEL             10
+#define MFSEL4_CKRQSEL              9
+#define MFSEL4_ESPISEL              8
+#define MFSEL4_MMCRSEL              6
+#define MFSEL4_SD1PSEL              5
+#define MFSEL4_ROSEL                4
+#define MFSEL4_ESPIPMESEL           2
+#define MFSEL4_BSPASEL              1
+#define MFSEL4_JTAG2SEL             0
+
+/* USB PHY1 Control Register (USB1PHYCTL) */
+#define USB1PHYCTL_RS				28
+/* USB PHY2 Control Register (USB2PHYCTL) */
+#define USB2PHYCTL_RS				28
+
+/* Integration Control Register (INTCR) */
+#define  INTCR_DUDKSMOD             30
+#define  INTCR_DDC3I                29
+#define  INTCR_KVMSI                28
+#define  INTCR_DEHS                 27
+#define  INTCR_GGPCT2_0             24
+#define  INTCR_SGC2                 23
+#define  INTCR_DSNS_TRIG            21
+#define  INTCR_DAC_SNS              20
+#define  INTCR_SGC1                 19
+#define  INTCR_LDDRB                18
+#define  INTCR_GIRST                17
+#define  INTCR_DUDKSEN              16
+#define  INTCR_DACOFF               15
+#define  INTCR_DACSEL               14
+#define  INTCR_GFXINT               12
+#define  INTCR_DACOSOVR             10
+#define  INTCR_GFXIFDIS             8
+#define  INTCR_H2RQDIS              9
+#define  INTCR_H2DISPOFF            8
+#define  INTCR_GFXINT2              7
+#define  INTCR_VGAIOEN              6
+#define  INTCR_R1EN                 5
+#define  INTCR_PSPIFEN              4
+#define  INTCR_HIFEN                3
+#define  INTCR_SMBFEN               2
+#define  INTCR_MFTFEN               1
+#define  INTCR_KCSRST_MODE          0
+
+/* I2C Segment Pin Select Register (I2CSEGSEL) */
+#define I2CSEGSEL_S0DECFG			3
+#define I2CSEGSEL_S4DECFG			17
+
+/* I2C Segment Control Register (I2CSEGCTL) */
+#define I2CSEGCTL_S0DEN				20
+#define I2CSEGCTL_S0DWE				21
+#define I2CSEGCTL_S4DEN				24
+#define I2CSEGCTL_S4DWE				25
+
+#endif
diff -Naur a/arch/arm/mach-npcm750/include/mach/poleg_gpio.h b/arch/arm/mach-npcm750/include/mach/poleg_gpio.h
--- a/arch/arm/mach-npcm750/include/mach/poleg_gpio.h	1969-12-31 19:00:00.000000000 -0500
+++ b/arch/arm/mach-npcm750/include/mach/poleg_gpio.h	2020-05-25 15:11:20.643885281 -0400
@@ -0,0 +1,26 @@
+/*
+ *  Copyright (c) 2017 Nuvoton Technology Corp.
+ *
+ * See file CREDITS for list of people who contributed to this
+ * project.
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License as
+ * published by the Free Software Foundation; either version 2 of
+ * the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ * MA 02111-1307 USA
+ */
+
+#ifndef __POLEG_GPIO_H_
+#define __POLEG_GPIO_H_
+
+#endif
diff -Naur a/arch/arm/mach-npcm750/include/mach/poleg_info.h b/arch/arm/mach-npcm750/include/mach/poleg_info.h
--- a/arch/arm/mach-npcm750/include/mach/poleg_info.h	1969-12-31 19:00:00.000000000 -0500
+++ b/arch/arm/mach-npcm750/include/mach/poleg_info.h	2020-05-25 15:11:20.643885281 -0400
@@ -0,0 +1,32 @@
+/*
+ *  Copyright (c) 2019 Nuvoton Technology Corp.
+ *
+ * Configuration settings for the NUVOTON POLEG board.
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ */
+
+#ifndef __POLEG_INFO_H_
+#define __POLEG_INFO_H_
+
+#include <spi_flash.h>
+
+#define UBOOT_RAM_IMAGE_ADDR            (0x8000)
+
+#define HEADER_ADDR_OFFSET              (0x140)
+#define HEADER_SIZE_OFFSET              (0x144)
+#define HEADER_VERSION_OFFSET           (0x148)
+
+#define HEADER_SIZE                     (0x200)
+
+#define POLEG_BB_HEADER_FIELD_ADDR(offset)      ((SPI_FLASH_BASE_ADDR) + (offset))
+#define POLEG_BOOTBLOCK_CODE                    ((SPI_FLASH_BASE_ADDR) + (HEADER_SIZE))
+#define POLEG_BOOTBLOCK_SIZE                    (*(u32*)(POLEG_BB_HEADER_FIELD_ADDR(HEADER_SIZE_OFFSET)))
+#define POLEG_BOOTBLOCK_END                     (ALIGN(((POLEG_BOOTBLOCK_CODE) + (POLEG_BOOTBLOCK_SIZE)), 0x1000))
+
+#define POLEG_UBOOT_HEADER_FIELD_ADDR(offset)   ((POLEG_BOOTBLOCK_END) + (offset))
+#define POLEG_UBOOT_CODE                        ((POLEG_BOOTBLOCK_END) + (HEADER_SIZE))
+#define POLEG_UBOOT_SIZE                        (*(u32*)(POLEG_UBOOT_HEADER_FIELD_ADDR(HEADER_SIZE_OFFSET)))
+#define POLEG_UBOOT_END                         (ALIGN(((POLEG_UBOOT_CODE) + (POLEG_UBOOT_SIZE)), 0x1000))
+
+#endif
diff -Naur a/arch/arm/mach-npcm750/include/mach/poleg_otp.h b/arch/arm/mach-npcm750/include/mach/poleg_otp.h
--- a/arch/arm/mach-npcm750/include/mach/poleg_otp.h	1969-12-31 19:00:00.000000000 -0500
+++ b/arch/arm/mach-npcm750/include/mach/poleg_otp.h	2020-05-25 15:11:20.643885281 -0400
@@ -0,0 +1,76 @@
+#ifndef _POLEG_OTP_H_
+#define _POLEG_OTP_H_
+
+typedef enum {
+	NPCM750_KEY_SA    = 0,
+	NPCM750_FUSE_SA   = 1,
+	NPCM750_NUM_OF_SA = 2
+} poleg_otp_storage_array;
+
+// arrray images in flash, to program during fisrt boot (offsets in sector)
+#define SA_KEYS_FLASH_IMAGE_OFFSET      (0x000)
+#define SA_FUSE_FLASH_IMAGE_OFFSET      (0x400)
+#define SA_TAG_FLASH_IMAGE_OFFSET       (0x800)
+//                                        F     U     S     E     I     M     G     S
+#define SA_TAG_FLASH_IMAGE_VAL          {0x46, 0x55, 0x53, 0x45, 0x49, 0x4d, 0x47, 0x53}
+#define SA_TAG_FLASH_IMAGE_SIZE         (8)
+
+#define SA_FUSE_FUSTRAP_OFFSET          (0x00)
+#define SA_FUSE_FUSTRAP_OSECBOOT_MASK   (0x00800000)
+
+struct poleg_otp_regs {
+	unsigned int fst;
+	unsigned int faddr;
+	unsigned int fdata;
+	unsigned int fcfg;
+	unsigned int fustrap_fkeyind;
+	unsigned int fctl;
+};
+
+#define FST_RDY                 (1 << 0)
+#define FST_RDST                (1 << 1)
+#define FST_RIEN                (1 << 2)
+
+#define FADDR_BYTEADDR(addr)    ((addr) << 0)
+#define FADDR_BITPOS(pos)       ((pos) << 10)
+#define FADDR_VAL(addr, pos)    (FADDR_BYTEADDR(addr) | FADDR_BITPOS(pos))
+
+#define FDATA_MASK              (0xff)
+
+#define FUSTRAP_O_SECBOOT       (1 << 23)
+
+#define FCFG_FDIS               (1 << 31)
+
+#define FKEYIND_KVAL            (1 << 0)
+#define FKEYIND_KSIZE_MASK      (0x00000070)
+#define FKEYIND_KSIZE_128       (0x4 << 4)
+#define FKEYIND_KSIZE_192       (0x5 << 4)
+#define FKEYIND_KSIZE_256       (0x6 << 4)
+#define FKEYIND_KIND_MASK       (0x000c0000)
+#define FKEYIND_KIND_KEY(indx)  ((indx) << 18)
+
+// Program cycle initiation values (sequence of two adjacent writes)
+#define PROGRAM_ARM             0x1
+#define PROGRAM_INIT            0xBF79E5D0
+
+#define OTP2_BASE               0xF018A000
+#define FUSTRAP                 (OTP2_BASE + 0x10)
+
+// Read cycle initiation value
+#define READ_INIT               0x02
+
+// Value to clean FDATA contents
+#define FDATA_CLEAN_VALUE       0x01
+
+
+#define NPCM750_OTP_ARR_BYTE_SIZE        1024
+#define MIN_PROGRAM_PULSES               4
+#define MAX_PROGRAM_PULSES               20
+
+int  fuse_program_data(u32 bank, u32 word, u8 *data, u32 size);
+int  npcm750_otp_select_key(u8 key_index);
+bool npcm750_otp_is_fuse_array_disabled(poleg_otp_storage_array arr);
+void npcm750_otp_nibble_parity_ecc_encode(u8 *datain, u8 *dataout, u32 size);
+void npcm750_otp_majority_rule_ecc_encode(u8 *datain, u8 *dataout, u32 size);
+
+#endif
diff -Naur a/arch/arm/mach-npcm750/include/mach/poleg_pspi.h b/arch/arm/mach-npcm750/include/mach/poleg_pspi.h
--- a/arch/arm/mach-npcm750/include/mach/poleg_pspi.h	1969-12-31 19:00:00.000000000 -0500
+++ b/arch/arm/mach-npcm750/include/mach/poleg_pspi.h	2020-05-25 15:11:20.643885281 -0400
@@ -0,0 +1,39 @@
+/*
+ *  Copyright (c) 2017 Nuvoton Technology Corp.
+ *
+ * See file CREDITS for list of people who contributed to this
+ * project.
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License as
+ * published by the Free Software Foundation; either version 2 of
+ * the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ * MA 02111-1307 USA
+ */
+
+#ifndef __POLEG_PSPI_H_
+#define __POLEG_PSPI_H_
+
+
+/* PSPI_CTL1 fields */
+#define PSPI_CTL1_SCDV6_0	9
+#define PSPI_CTL1_SCIDL		8
+#define PSPI_CTL1_SCM		7
+#define PSPI_CTL1_EIW		6
+#define PSPI_CTL1_EIR		5
+#define PSPI_CTL1_SPIEN		0
+
+/* PSPI_STAT fields */
+#define PSPI_STAT_RBF		1
+#define PSPI_STAT_BSY		0
+
+#endif
diff -Naur a/arch/arm/mach-npcm750/include/mach/poleg_rng.h b/arch/arm/mach-npcm750/include/mach/poleg_rng.h
--- a/arch/arm/mach-npcm750/include/mach/poleg_rng.h	1969-12-31 19:00:00.000000000 -0500
+++ b/arch/arm/mach-npcm750/include/mach/poleg_rng.h	2020-05-25 15:11:20.643885281 -0400
@@ -0,0 +1,43 @@
+#ifndef _POLEG_RNG_H_
+#define _POLEG_RNG_H_
+
+struct poleg_rng_regs {
+	unsigned int rngcs;
+	unsigned int rngd;
+	unsigned int rngmode;
+};
+
+#define RNGCS_RNGE              (1 << 0)
+#define RNGCS_DVALID            (1 << 1)
+#define RNGCS_CLKP(range)       ((0x0f & (range)) << 2)
+
+#define RNGMODE_M1ROSEL_VAL     (0x02) /* Ring Oscillator Select for Method I */
+
+/*----------------------------------------------------------------------------*/
+/* Core Domain Clock Frequency Range for the selected value is higher         */
+/* than or equal to the actual Core domain clock frequency                    */
+/*----------------------------------------------------------------------------*/
+typedef enum
+{
+	RNG_CLKP_80_100_MHz = 0x00, /*default */
+	RNG_CLKP_60_80_MHz  = 0x01,
+	RNG_CLKP_50_60_MHz  = 0x02,
+	RNG_CLKP_40_50_MHz  = 0x03,
+	RNG_CLKP_30_40_MHz  = 0x04,
+	RNG_CLKP_25_30_MHz  = 0x05,
+	RNG_CLKP_20_25_MHz  = 0x06, /* recommended by poleg spec, match APB1. */
+	RNG_CLKP_5_20_MHz   = 0x07,
+	RNG_CLKP_2_15_MHz   = 0x08,
+	RNG_CLKP_9_12_MHz   = 0x09,
+	RNG_CLKP_7_9_MHz    = 0x0A,
+	RNG_CLKP_6_7_MHz    = 0x0B,
+	RNG_CLKP_5_6_MHz    = 0x0C,
+	RNG_CLKP_4_5_MHz    = 0x0D,
+	RNG_CLKP_3_4_MHz    = 0x0E,
+	RNG_NUM_OF_CLKP
+} RNG_CLKP_T;
+
+void npcm750_rng_init(void);
+void npcm750_rng_disable(void);
+
+#endif
diff -Naur a/arch/arm/mach-npcm750/include/mach/poleg_sha.h b/arch/arm/mach-npcm750/include/mach/poleg_sha.h
--- a/arch/arm/mach-npcm750/include/mach/poleg_sha.h	1969-12-31 19:00:00.000000000 -0500
+++ b/arch/arm/mach-npcm750/include/mach/poleg_sha.h	2020-05-25 15:11:20.643885281 -0400
@@ -0,0 +1,36 @@
+#ifndef _POLEG_SHA_H_
+#define _POLEG_SHA_H_
+
+#define HASH_DIG_H_NUM        8
+
+/*----------------------------------------------------------------------------*/
+/* SHA type                                                                   */
+/*----------------------------------------------------------------------------*/
+typedef enum
+{
+  npcm750_sha_type_sha2 = 0,	/*do not change - match SHA arch spec */
+  npcm750_sha_type_sha1,
+  npcm750_sha_type_num
+} npcm750_sha_type;
+
+struct poleg_sha_regs {
+	unsigned int hash_data_in;              // 0x00
+	unsigned char hash_ctr_sts;             // 0x04
+	unsigned char reserved_0[0x03];         // 0x05
+	unsigned char hash_cfg;                 // 0x08
+	unsigned char reserved_1[0x03];         // 0x09
+	unsigned char hash_ver;                 // 0x0c
+	unsigned char reserved_2[0x13];     	// 0x0d
+	unsigned int hash_dig[HASH_DIG_H_NUM];  // 0x20
+};
+
+#define HASH_CTR_STS_SHA_EN             (1 << 0)
+#define HASH_CTR_STS_SHA_BUSY           (1 << 1)
+#define HASH_CTR_STS_SHA_RST            (1 << 2)
+
+#define HASH_CFG_SHA1_SHA2              (1 << 0)
+
+int npcm750_sha_calc(npcm750_sha_type type, const u8* inBuff, u32 len, u8* hashDigest);
+int npcm750_sha_selftest(npcm750_sha_type type);
+
+#endif //_POLEG_SHA_H_
diff -Naur a/arch/arm/mach-npcm750/include/mach/pspi.h b/arch/arm/mach-npcm750/include/mach/pspi.h
--- a/arch/arm/mach-npcm750/include/mach/pspi.h	1969-12-31 19:00:00.000000000 -0500
+++ b/arch/arm/mach-npcm750/include/mach/pspi.h	2020-05-25 15:11:20.643885281 -0400
@@ -0,0 +1,48 @@
+/*
+ *  Copyright (c) 2017 Nuvoton Technology Corp.
+ *
+ * See file CREDITS for list of people who contributed to this
+ * project.
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License as
+ * published by the Free Software Foundation; either version 2 of
+ * the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ * MA 02111-1307 USA
+ */
+
+#ifndef __NPCMX50_PSPI_H_
+#define __NPCMX50_PSPI_H_
+
+#if defined (CONFIG_TARGET_POLEG)
+#include <asm/arch/poleg_pspi.h>
+#else
+#error "no target board defined!"
+#endif
+
+enum pspi_transfer_mode {
+	PSPI_WRITE_RISING_EDGE,
+	PSPI_WRITE_FALLING_EDGE,
+};
+
+enum pspi_dev {
+	PSPI1_DEV = 0,
+	PSPI2_DEV = 1,
+};
+
+struct npcm750_pspi_regs {
+	unsigned short pspi_data;
+	unsigned short pspi_ctl1;
+	unsigned char pspi_stat;
+};
+
+#endif
diff -Naur a/arch/arm/mach-npcm750/include/mach/smb.h b/arch/arm/mach-npcm750/include/mach/smb.h
--- a/arch/arm/mach-npcm750/include/mach/smb.h	1969-12-31 19:00:00.000000000 -0500
+++ b/arch/arm/mach-npcm750/include/mach/smb.h	2020-05-25 15:11:20.643885281 -0400
@@ -0,0 +1,73 @@
+#ifndef _NPCM_SMB_H_
+#define _NPCM_SMB_H_
+#include <linux/bitops.h>
+
+/* SMBCTL1 */
+#define SMBCTL1_START		BIT(0)
+#define SMBCTL1_STOP		BIT(1)
+#define SMBCTL1_INTEN		BIT(2)
+#define SMBCTL1_ACK			BIT(4)
+#define SMBCTL1_STASTRE		BIT(7)
+
+/* SMBCTL2 */
+#define SMBCTL2_ENABLE		BIT(0)
+
+/* SMBCST */
+#define SMBCST_BB		BIT(1)
+
+/* SBMST */
+#define SMBST_XMIT		BIT(0)
+#define SMBST_MASTER	BIT(1)
+#define SMBST_STASTR	BIT(3)
+#define SMBST_NEGACK	BIT(4)
+#define SMBST_BER		BIT(5)
+#define SMBST_SDAST		BIT(6)
+
+
+#define SMBFIF_CTL_FIFO_EN	BIT(4)
+#define SMBCTL3_BNK_SEL		BIT(5)
+
+struct smb_bank0_regs {
+	u8 addr3;
+	u8 addr7;
+	u8 addr4;
+	u8 addr8;
+	u16 addr5;
+	u16 addr6;
+	u8 cst2;
+	u8 cst3;
+	u8 ctl4;
+	u8 ctl5;
+	u8 scllt;
+	u8 fif_ctl;
+	u8 sclht;
+};
+
+struct smb_bank1_regs {
+	u8 fif_cts;
+	u8 fair_per;
+	u16 txf_ctl;
+	u32 t_out;
+	u8 cst2;
+	u8 cst3;
+	u16 txf_sts;
+	u16 rxf_sts;
+	u8 rxf_ctl;
+};
+
+struct npcm750_smb_regs {
+	u16	sda;
+	u16 st;
+	u16 cst;
+	u16 ctl1;
+	u16 addr;
+	u16 ctl2;
+	u16 addr2;
+	u16 ctl3;
+	union {
+		struct smb_bank0_regs bank0;
+		struct smb_bank1_regs bank1;
+	};
+
+};
+#endif
diff -Naur a/arch/arm/mach-npcm750/include/mach/spi_flash.h b/arch/arm/mach-npcm750/include/mach/spi_flash.h
--- a/arch/arm/mach-npcm750/include/mach/spi_flash.h	1969-12-31 19:00:00.000000000 -0500
+++ b/arch/arm/mach-npcm750/include/mach/spi_flash.h	2020-05-25 15:11:20.643885281 -0400
@@ -0,0 +1,41 @@
+/*
+ *  Copyright (c) 2017 Nuvoton Technology Corp.
+ *
+ * See file CREDITS for list of people who contributed to this
+ * project.
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License as
+ * published by the Free Software Foundation; either version 2 of
+ * the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ * MA 02111-1307 USA
+ */
+
+#ifndef __NPCMX50_SPI_FLASH_H_
+#define __NPCMX50_SPI_FLASH_H_
+
+/* Common SPI flash commands */
+#define SPI_WRITE_STATUS_REG_CMD    0x01
+#define SPI_PAGE_PRGM_CMD           0x02
+#define SPI_READ_DATA_CMD           0x03
+#define SPI_WRITE_DISABLE_CMD       0x04
+#define SPI_READ_STATUS_REG_CMD     0x05
+#define SPI_WRITE_ENABLE_CMD        0x06
+#define SPI_4K_SECTOR_ERASE_CMD     0x20
+#define SPI_32K_BLOCK_ERASE_CMD	    0x52
+#define SPI_READ_JEDEC_ID_CMD       0x9F
+#define SPI_CHIP_ERASE_CMD          0xC7
+#define SPI_EXTNADDR_WREAR_CMD		0xC5
+#define SPI_EXTNADDR_RDEAR_CMD		0xC8
+#define SPI_64K_BLOCK_ERASE_CMD		0xD8
+
+#endif
diff -Naur a/arch/arm/mach-npcm750/include/mach/timer.h b/arch/arm/mach-npcm750/include/mach/timer.h
--- a/arch/arm/mach-npcm750/include/mach/timer.h	1969-12-31 19:00:00.000000000 -0500
+++ b/arch/arm/mach-npcm750/include/mach/timer.h	2020-05-25 15:11:20.647885323 -0400
@@ -0,0 +1,31 @@
+#ifndef _POLEG_TIMER_H_
+#define _POLEG_TIMER_H_
+
+struct poleg_gptimer_regs {
+	unsigned int tcsr0;
+	unsigned int tcsr1;
+	unsigned int ticr0;
+	unsigned int ticr1;
+	unsigned int tdr0;
+	unsigned int tdr1;
+	unsigned int tisr;
+	unsigned int wtcr;
+	unsigned int tcsr2;
+	unsigned int tcsr3;
+	unsigned int ticr2;
+	unsigned int ticr3;
+	unsigned int tdr2;
+	unsigned int tdr3;
+	unsigned char res1[4];	// 0x38
+	unsigned int tcsr4;
+	unsigned char res2[4];	// 0x44
+	unsigned int ticr4;
+	unsigned char res3[4];	// 0x4c
+	unsigned int tdr4;
+};
+/* tcsr */
+#define TCSR_EN		(1 << 30)
+#define TCSR_MODE_PERIODIC	(1 << 27)
+#define TCSR_PRESCALE_25	(25 - 1)
+
+#endif
diff -Naur a/arch/arm/mach-npcm750/include/mach/uart.h b/arch/arm/mach-npcm750/include/mach/uart.h
--- a/arch/arm/mach-npcm750/include/mach/uart.h	1969-12-31 19:00:00.000000000 -0500
+++ b/arch/arm/mach-npcm750/include/mach/uart.h	2020-05-25 15:11:20.647885323 -0400
@@ -0,0 +1,84 @@
+#ifndef __ASM_ARCH_UART_H_
+#define __ASM_ARCH_UART_H_
+
+#ifndef __ASSEMBLY__
+
+struct npcm750_uart {
+	union {
+		unsigned int	pbr;
+		unsigned int	thr;
+		unsigned int	dll;
+	};
+	union {
+		unsigned int	ier;
+		unsigned int	dlm;
+	};
+	union {
+		unsigned int	iir;
+		unsigned int	fcr;
+	};
+	unsigned int	lcr;
+	unsigned int	mcr;
+	unsigned int	lsr;
+	unsigned int	msr;
+	unsigned int	tor;
+};
+
+#define	IER_DBGACK	(1 << 4)
+#define	IER_MSIE	(1 << 3)
+#define	IER_RLSE	(1 << 2)
+#define	IER_THREIE	(1 << 1)
+#define	IER_RDAIE	(1 << 0)
+
+#define	IIR_FMES	(1 << 7)
+#define	IIR_RFTLS	(1 << 5)
+#define	IIR_DMS		(1 << 4)
+#define	IIR_IID		(1 << 1)
+#define	IIR_NIP		(1 << 0)
+
+#define	FCR_RFITL_1B	(0 << 4)
+#define	FCR_RFITL_4B	(4 << 4)
+#define	FCR_RFITL_8B	(8 << 4)
+#define	FCR_RFITL_14B	(12 << 4)
+#define	FCR_DMS			(1 << 3)
+#define	FCR_TFR			(1 << 2)
+#define	FCR_RFR			(1 << 1)
+#define	FCR_FME			(1 << 0)
+
+#define	LCR_DLAB	(1 << 7)
+#define	LCR_BCB		(1 << 6)
+#define	LCR_SPE		(1 << 5)
+#define	LCR_EPS		(1 << 4)
+#define	LCR_PBE		(1 << 3)
+#define	LCR_NSB		(1 << 2)
+#define	LCR_WLS_8b	(3 << 0)
+#define	LCR_WLS_7b	(2 << 0)
+#define	LCR_WLS_6b	(1 << 0)
+#define	LCR_WLS_5b	(0 << 0)
+
+#define	MCR_LBME	(1 << 4)
+#define	MCR_OUT2	(1 << 3)
+#define	MCR_RTS		(1 << 1)
+#define	MCR_DTR		(1 << 0)
+
+#define	LSR_ERR_RX	(1 << 7)
+#define	LSR_TE		(1 << 6)
+#define	LSR_THRE	(1 << 5)
+#define	LSR_BII		(1 << 4)
+#define	LSR_FEI		(1 << 3)
+#define	LSR_PEI		(1 << 2)
+#define	LSR_OEI		(1 << 1)
+#define	LSR_RFDR	(1 << 0)
+
+#define	MSR_DCD		(1 << 7)
+#define	MSR_RI		(1 << 6)
+#define	MSR_DSR		(1 << 5)
+#define	MSR_CTS		(1 << 4)
+#define	MSR_DDCD	(1 << 3)
+#define	MSR_DRI		(1 << 2)
+#define	MSR_DDSR	(1 << 1)
+#define	MSR_DCTS	(1 << 0)
+
+#endif	/* __ASSEMBLY__ */
+
+#endif
diff -Naur a/arch/arm/mach-npcm750/Kconfig b/arch/arm/mach-npcm750/Kconfig
--- a/arch/arm/mach-npcm750/Kconfig	1969-12-31 19:00:00.000000000 -0500
+++ b/arch/arm/mach-npcm750/Kconfig	2020-05-25 15:11:20.643885281 -0400
@@ -0,0 +1,18 @@
+if ARCH_NPCM750
+
+choice
+	prompt "NPCM board select"
+
+config TARGET_POLEG
+    bool "POLEG board"
+
+endchoice
+
+
+config SYS_SOC
+	default "npcm750"
+
+
+source "board/nuvoton/poleg/Kconfig"
+
+endif
diff -Naur a/arch/arm/mach-npcm750/Makefile b/arch/arm/mach-npcm750/Makefile
--- a/arch/arm/mach-npcm750/Makefile	1969-12-31 19:00:00.000000000 -0500
+++ b/arch/arm/mach-npcm750/Makefile	2020-05-25 15:11:20.643885281 -0400
@@ -0,0 +1,24 @@
+#
+# Copyright (c) 2016 Nuvoton Technology Corp.
+#
+# See file CREDITS for list of people who contributed to this
+# project.
+#
+# This program is free software; you can redistribute it and/or
+# modify it under the terms of the GNU General Public License as
+# published by the Free Software Foundation; either version 2 of
+# the License, or (at your option) any later version.
+#
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+# GNU General Public License for more details.
+#
+# You should have received a copy of the GNU General Public License
+# along with this program; if not, write to the Free Software
+# Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+# MA 02111-1307 USA
+#
+
+obj-y	= reset.o
+obj-$(CONFIG_TARGET_POLEG) += poleg_clock.o bootm_os.o
diff -Naur a/arch/arm/mach-npcm750/poleg_clock.c b/arch/arm/mach-npcm750/poleg_clock.c
--- a/arch/arm/mach-npcm750/poleg_clock.c	1969-12-31 19:00:00.000000000 -0500
+++ b/arch/arm/mach-npcm750/poleg_clock.c	2020-05-25 15:11:20.643885281 -0400
@@ -0,0 +1,316 @@
+/*
+ *  Copyright (c) 2017 Nuvoton Technology Corp.
+ *
+ * See file CREDITS for list of people who contributed to this
+ * project.
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License as
+ * published by the Free Software Foundation; either version 2 of
+ * the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ * MA 02111-1307 USA
+ */
+#include <common.h>
+#include <asm/types.h>
+#include <asm/arch/cpu.h>
+#include <asm/arch/clock.h>
+#include <asm/arch/gcr.h>
+#include <asm/io.h>
+#include <dm.h>
+#include <clk-uclass.h>
+#include <dt-bindings/clock/npcm750_poleg-clock.h>
+
+#define POLEG_VERSION_A1 0x04A92750
+struct poleg_clk_priv {
+	struct clk_ctl *regs;
+};
+
+enum pll_clks {
+	PLL_0,
+	PLL_1,
+	PLL_2,
+	PLL_CLKREF,
+};
+
+static u32 clk_get_pll_freq(struct clk_ctl *pll_clk, enum pll_clks pll)
+{
+	struct npcm750_gcr *gcr = (struct npcm750_gcr *)npcm750_get_base_gcr();
+	u32 pllval;
+	u32 fin = EXT_CLOCK_FREQUENCY_KHZ; /* 25KHz */
+	u32 fout, nr, nf, no;
+	fout = nr = nf = no = 0;
+
+	switch (pll) {
+	case PLL_0:
+		pllval = readl(&pll_clk->pllcon0);
+		break;
+	case PLL_1:
+		pllval = readl(&pll_clk->pllcon1);
+		break;
+	case PLL_2:
+		pllval = readl(&pll_clk->pllcon2);
+		break;
+	case PLL_CLKREF:
+	default:
+		return 0;
+	}
+
+	/* PLL Input Clock Divider */
+	nr = (pllval >> PLLCONn_INDV) & 0x1f;
+	/* PLL VCO Output Clock Feedback Divider */
+	nf = (pllval >> PLLCONn_FBDV) & 0xfff;
+	/* PLL Output Clock Divider 1 */
+	no = ((pllval >> PLLCONn_OTDV1) & 0x7) *
+		((pllval >> PLLCONn_OTDV2) & 0x7);
+
+	fout = ((10 * fin * nf) / (no * nr));
+	if ((pll == PLL_1) && (readl(&gcr->pdid) == POLEG_VERSION_A1))
+		fout /= 2;
+
+	return fout * 100;
+}
+
+static int poleg_timer_init_clk(struct clk_ctl *timer_clk)
+{
+	volatile unsigned int i;
+	/* enable timer 0 */
+	writel(readl(&timer_clk->clken1) | (1 << CLKEN1_TIMER0_4),
+		&timer_clk->clken1);
+
+	/* Wait for 200 clock cycles between clkDiv or clkSel change */
+	for (i = 200; i > 0; i--);
+
+	/* Setting the Timer divisor to 1 */
+	writel(readl(&timer_clk->clkdiv1) & ~(0x1f << CLKDIV1_TIMCKDIV),
+		&timer_clk->clkdiv1);
+
+	/* Wait for 200 clock cycles between clkDiv or clkSel change */
+	for (i = 200; i > 0; i--);
+
+	/* Sellecting 25MHz clock source */
+	writel((readl(&timer_clk->clksel) & ~(3 << CLKSEL_TIMCKSEL))
+		| (CLKSEL_TIMCKSEL_CLKREF << CLKSEL_TIMCKSEL),
+		&timer_clk->clksel);
+
+	/* Wait 10usec for PLL */
+	for (i = 200; i > 0; i--);
+
+	return 0;
+}
+
+static int poleg_uart_init_clk(struct clk_ctl *uart_clk)
+{
+	writel((readl(&uart_clk->clkdiv1) & ~(0x1f << CLKDIV1_UARTDIV))
+		| (19 << CLKDIV1_UARTDIV), &uart_clk->clkdiv1);
+	writel((readl(&uart_clk->clksel) & ~(3 << CLKSEL_UARTCKSEL))
+		| (CLKSEL_UARTCKSEL_PLL2 << CLKSEL_UARTCKSEL),
+		&uart_clk->clksel);
+
+	return 0;
+}
+
+enum sd_num {
+	SD1_DEV,
+	SD2_DEV,
+};
+
+static u32 poleg_sd_configure_clk(struct clk_ctl *sd_clk,
+					ulong rate, enum sd_num sdnum)
+{
+	u32 pll0_freq, divider, sdhci_clk;
+	volatile unsigned int i;
+
+	if (sdnum == SD1_DEV) {
+		writel(readl(&sd_clk->clken2) | (1 << CLKEN2_SDHC),
+			&sd_clk->clken2);
+	} else if (sdnum == SD2_DEV) {
+		writel(readl(&sd_clk->clken2) | (1 << CLKEN2_MMC),
+			&sd_clk->clken2);
+	}
+
+	/* To acquire PLL0 frequency. */
+	pll0_freq = clk_get_pll_freq(sd_clk, PLL_0);
+
+	/* Calculate rounded up divider to produce closest to
+	   target output clock  */
+	divider = (pll0_freq % rate == 0) ? (pll0_freq / rate) :
+						(pll0_freq / rate) + 1;
+
+	if (sdnum == SD1_DEV) {
+		writel((readl(&sd_clk->clkdiv2) & ~(0xf << CLKDIV2_SD1CKDIV))
+			| ((divider / 2) - 1) << CLKDIV2_SD1CKDIV,
+			&sd_clk->clkdiv2);
+	} else if (sdnum == SD2_DEV) {
+		writel((readl(&sd_clk->clkdiv1) & ~(0x1f << CLKDIV1_MMCCKDIV))
+			| (divider - 1) << CLKDIV1_MMCCKDIV, &sd_clk->clkdiv1);
+	}
+	/* Wait to the divider to stabilize (according to spec) */
+	for (i = 200; i > 0; i--);
+
+	/* SD clock uses always PLL0 */
+	writel((readl(&sd_clk->clksel) & ~(0x3 << CLKSEL_SDCKSEL))
+		| (CLKSEL_SDCKSEL_PLL0 << CLKSEL_SDCKSEL),
+		&sd_clk->clksel);
+
+	sdhci_clk = pll0_freq / divider;
+
+	return sdhci_clk;
+}
+
+static ulong poleg_get_cpu_freq(struct clk_ctl *cpu_clk)
+{
+	ulong fout = 0;
+	u32 clksel = readl(&cpu_clk->clksel) & (0x3 << CLKSEL_CPUCKSEL);
+
+	if (clksel == CLKSEL_CPUCKSEL_PLL0)
+		fout = (ulong)clk_get_pll_freq(cpu_clk, PLL_0);
+	else if (clksel == CLKSEL_CPUCKSEL_PLL1)
+		fout = (ulong)clk_get_pll_freq(cpu_clk, PLL_1);
+	else if (clksel == CLKSEL_CPUCKSEL_CLKREF)
+		fout = EXT_CLOCK_FREQUENCY_MHZ; /* FOUT is specified in MHz */
+	else
+		fout = EXT_CLOCK_FREQUENCY_MHZ; /* FOUT is specified in MHz */
+
+	return fout;
+}
+
+static u32 poleg_get_pll0_apb_divisor(struct clk_ctl *regs, u32 apb)
+{
+	volatile u32 apb_divisor = 1;
+
+	/* AXI divider */
+	apb_divisor = apb_divisor * (1 << ((readl(&regs->clkdiv1)
+						>> CLKDIV1_CLK2DIV) & 0x1));
+	/* AHBn divider */
+	apb_divisor = apb_divisor * (1 << ((readl(&regs->clkdiv1)
+						>> CLKDIV1_CLK4DIV) & 0x3));
+
+	switch (apb) {
+	case APB1: /* APB divisor */
+		apb_divisor = apb_divisor *
+				(1 << ((readl(&regs->clkdiv2)
+					>> CLKDIV2_APB1CKDIV) & 0x3));
+		break;
+	case APB2: /* APB divisor */
+		apb_divisor = apb_divisor *
+				(1 << ((readl(&regs->clkdiv2)
+					>> CLKDIV2_APB2CKDIV) & 0x3));
+		break;
+	case APB3: /* APB divisor */
+		apb_divisor = apb_divisor *
+				(1 << ((readl(&regs->clkdiv2)
+					>> CLKDIV2_APB3CKDIV) & 0x3));
+		break;
+	case APB4: /* APB divisor */
+		apb_divisor = apb_divisor *
+				(1 << ((readl(&regs->clkdiv2)
+					>> CLKDIV2_APB4CKDIV) & 0x3));
+		break;
+	case APB5: /* APB divisor */
+		apb_divisor = apb_divisor *
+				(1 << ((readl(&regs->clkdiv2)
+					>> CLKDIV2_APB5CKDIV) & 0x3));
+		break;
+	case SPI0: /* SPI0 divisor */
+		apb_divisor = apb_divisor *
+				(((readl(&regs->clkdiv3)
+					>> CLKDIV3_SPI0CKDV) & 0x1f) + 1);
+		break;
+	case SPI3: /* SPI0 divider */
+		apb_divisor = apb_divisor *
+				(((readl(&regs->clkdiv1)
+					>> CLKDIV1_AHB3CKDIV) & 0x1f) + 1);
+		break;
+	default:
+		apb_divisor = 0xFFFFFFFF;
+		break;
+
+	}
+
+	return apb_divisor;
+}
+
+static ulong poleg_get_rate(struct clk *clk)
+{
+	struct poleg_clk_priv *priv = dev_get_priv(clk->dev);
+
+	switch (clk->id) {
+	case CLK_APB2:
+		return poleg_get_cpu_freq(priv->regs) /
+			poleg_get_pll0_apb_divisor(priv->regs, APB2);
+		break;
+	case CLK_APB5:
+		return poleg_get_cpu_freq(priv->regs) /
+			poleg_get_pll0_apb_divisor(priv->regs, APB5);
+		break;
+	}
+
+	return 0;
+}
+
+static ulong poleg_set_rate(struct clk *clk, ulong rate)
+{
+	struct poleg_clk_priv *priv = dev_get_priv(clk->dev);
+
+	switch (clk->id) {
+	case CLK_TIMER:
+		return poleg_timer_init_clk(priv->regs);
+		break;
+	case CLK_UART:
+		return poleg_uart_init_clk(priv->regs);
+		break;
+	case CLK_SD:
+		return poleg_sd_configure_clk(priv->regs, rate, SD1_DEV);
+		break;
+	case CLK_EMMC:
+		return poleg_sd_configure_clk(priv->regs, rate, SD2_DEV);
+		break;
+	default:
+		return -1;
+	}
+
+	return 0;
+}
+
+static int poleg_clk_probe(struct udevice *dev)
+{
+	struct poleg_clk_priv *priv = dev_get_priv(dev);
+	void *base;
+
+	base = dev_read_addr_ptr(dev);
+
+	if (base == NULL)
+		return -EINVAL;
+
+	priv->regs = (struct clk_ctl *)base;
+
+	return 0;
+}
+
+static struct clk_ops poleg_clk_ops = {
+	.get_rate = poleg_get_rate,
+	.set_rate = poleg_set_rate,
+};
+
+static const struct udevice_id poleg_clk_ids[] = {
+	{ .compatible = "nuvoton,npcm750-clock" },
+	{ }
+};
+
+U_BOOT_DRIVER(clk_poleg) = {
+	.name           = "clk_poleg",
+	.id             = UCLASS_CLK,
+	.of_match       = poleg_clk_ids,
+	.ops            = &poleg_clk_ops,
+	.priv_auto_alloc_size = sizeof(struct poleg_clk_priv),
+	.probe          = poleg_clk_probe,
+};
diff -Naur a/arch/arm/mach-npcm750/reset.c b/arch/arm/mach-npcm750/reset.c
--- a/arch/arm/mach-npcm750/reset.c	1969-12-31 19:00:00.000000000 -0500
+++ b/arch/arm/mach-npcm750/reset.c	2020-05-25 15:11:20.643885281 -0400
@@ -0,0 +1,36 @@
+/*
+ *  Copyright (c) 2016 Nuvoton Technology Corp.
+ *
+ * See file CREDITS for list of people who contributed to this
+ * project.
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License as
+ * published by the Free Software Foundation; either version 2 of
+ * the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ * MA 02111-1307 USA
+ */
+
+#include <common.h>
+#include <asm/io.h>
+
+void reset_cpu(ulong ignored)
+{
+	writel(0x83, 0xf000801c);
+    while (1);
+}
+
+void reset_misc(void)
+{
+	printf("clear WDC\n");
+	writel(readl(0xf0800060) & ~(1 << 21), 0xf0800060);
+}
diff -Naur a/arch/arm/Makefile b/arch/arm/Makefile
--- a/arch/arm/Makefile	2019-07-22 22:57:52.000000000 -0400
+++ b/arch/arm/Makefile	2020-05-25 15:11:20.367882386 -0400
@@ -84,6 +84,7 @@
 machine-$(CONFIG_ARCH_ZYNQMP)		+= zynqmp
 machine-$(CONFIG_ARCH_VERSAL)		+= versal
 machine-$(CONFIG_ARCH_ZYNQMP_R5)	+= zynqmp-r5
+machine-$(CONFIG_ARCH_NPCM750)		+= npcm750
 
 machdirs := $(patsubst %,arch/arm/mach-%/,$(machine-y))
 
