!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ACCEPT_FAIL_FATAL	tests/ext_tls_tests.c	/^    ACCEPT_FAIL_FATAL,          \/\/ -1$/;"	e	enum:__anon40	file:
ACCEPT_FAIL_NONE	tests/ext_tls_tests.c	/^    ACCEPT_FAIL_NONE = 0,$/;"	e	enum:__anon40	file:
ACCEPT_FAIL_NOT_SUCCESSFUL	tests/ext_tls_tests.c	/^    ACCEPT_FAIL_NOT_SUCCESSFUL, \/\/ 1$/;"	e	enum:__anon40	file:
ACCEPT_FAIL_TIMEOUT	tests/ext_tls_tests.c	/^    ACCEPT_FAIL_TIMEOUT,$/;"	e	enum:__anon40	file:
ACCEPT_RESULT	tests/ext_network_tests.c	/^int ACCEPT_RESULT = 0;$/;"	v
AGENT_CONFIGURATION_CMD	asd_common.h	105;"	d
AGENT_CONFIG_TYPE_GPIO	asd_common.h	114;"	d
AGENT_CONFIG_TYPE_JTAG_SETTINGS	asd_common.h	115;"	d
AGENT_CONFIG_TYPE_LOGGING	asd_common.h	113;"	d
AGENT_CONTROL_TYPE	asd_common.h	/^    AGENT_CONTROL_TYPE = 0,$/;"	e	enum:__anon4
ALL_GPIO_DIRECTIONS	gpio.h	/^    ALL_GPIO_DIRECTIONS(TO_ENUM)$/;"	e	enum:__anon29
ALL_GPIO_DIRECTIONS	gpio.h	41;"	d
ALL_GPIO_EDGES	gpio.h	/^    ALL_GPIO_EDGES(TO_ENUM)$/;"	e	enum:__anon28
ALL_GPIO_EDGES	gpio.h	35;"	d
ALL_PIN_TYPES	target_handler.h	/^    ALL_PIN_TYPES(TO_ENUM)$/;"	e	enum:__anon39
ALL_PIN_TYPES	target_handler.h	129;"	d
ALL_TARGET_CONTROL_GPIOS	target_handler.h	/^    ALL_TARGET_CONTROL_GPIOS(TO_ENUM)$/;"	e	enum:__anon38
ALL_TARGET_CONTROL_GPIOS	target_handler.h	88;"	d
APB_FREQ	jtag_handler.h	81;"	d
ASCII_DOUBLE_QUOTES	asd_msg.h	52;"	d
ASDError	asd_common.h	/^} ASDError;$/;"	t	typeref:enum:__anon8
ASD_ASD_MSG_H	asd_msg.h	29;"	d
ASD_CONFIG_PATH	dbus_helper.h	77;"	d
ASD_EVENT	asd_common.h	/^} ASD_EVENT;$/;"	t	typeref:enum:__anon1
ASD_EVENT_NONE	asd_common.h	/^    ASD_EVENT_NONE$/;"	e	enum:__anon1
ASD_EVENT_PLRSTASSERT	asd_common.h	/^    ASD_EVENT_PLRSTASSERT,$/;"	e	enum:__anon1
ASD_EVENT_PLRSTDEASSRT	asd_common.h	/^    ASD_EVENT_PLRSTDEASSRT = 1,$/;"	e	enum:__anon1
ASD_EVENT_PRDY_EVENT	asd_common.h	/^    ASD_EVENT_PRDY_EVENT,$/;"	e	enum:__anon1
ASD_EVENT_PWRFAIL	asd_common.h	/^    ASD_EVENT_PWRFAIL,$/;"	e	enum:__anon1
ASD_EVENT_PWRRESTORE	asd_common.h	/^    ASD_EVENT_PWRRESTORE,$/;"	e	enum:__anon1
ASD_EVENT_XDP_PRESENT	asd_common.h	/^    ASD_EVENT_XDP_PRESENT,$/;"	e	enum:__anon1
ASD_FAILURE_DEINIT_JTAG_HANDLER	asd_common.h	/^    ASD_FAILURE_DEINIT_JTAG_HANDLER = 0x28,$/;"	e	enum:__anon8
ASD_FAILURE_HEADER_SIZE	asd_common.h	/^    ASD_FAILURE_HEADER_SIZE = 0x2F,$/;"	e	enum:__anon8
ASD_FAILURE_INIT_I2C_HANDLER	asd_common.h	/^    ASD_FAILURE_INIT_I2C_HANDLER = 0x27,$/;"	e	enum:__anon8
ASD_FAILURE_INIT_JTAG_HANDLER	asd_common.h	/^    ASD_FAILURE_INIT_JTAG_HANDLER = 0x26,$/;"	e	enum:__anon8
ASD_FAILURE_INIT_VPROBE_HANDLER	asd_common.h	/^    ASD_FAILURE_INIT_VPROBE_HANDLER = 0x31,$/;"	e	enum:__anon8
ASD_FAILURE_PROCESS_I2C_LOCK	asd_common.h	/^    ASD_FAILURE_PROCESS_I2C_LOCK = 0x2C,$/;"	e	enum:__anon8
ASD_FAILURE_PROCESS_I2C_MSG	asd_common.h	/^    ASD_FAILURE_PROCESS_I2C_MSG = 0x2B,$/;"	e	enum:__anon8
ASD_FAILURE_PROCESS_JTAG_MSG	asd_common.h	/^    ASD_FAILURE_PROCESS_JTAG_MSG = 0x2A,$/;"	e	enum:__anon8
ASD_FAILURE_REMOVE_I2C_LOCK	asd_common.h	/^    ASD_FAILURE_REMOVE_I2C_LOCK = 0x2E,$/;"	e	enum:__anon8
ASD_FAILURE_XDP_PRESENT	asd_common.h	/^    ASD_FAILURE_XDP_PRESENT = 0x30,$/;"	e	enum:__anon8
ASD_I2C_BUFFER_LEN	asd_common.h	282;"	d
ASD_I2C_MSG_BUILDER_H	i2c_msg_builder.h	29;"	d
ASD_I2C_MSG_NOT_SUPPORTED	asd_common.h	/^    ASD_I2C_MSG_NOT_SUPPORTED = 0x2D,$/;"	e	enum:__anon8
ASD_LogLevel	logging.h	/^} ASD_LogLevel;$/;"	t	typeref:enum:__anon32
ASD_LogLevelString	logging.h	/^static const char* ASD_LogLevelString[] = {"Trace",   "Debug", "Info",$/;"	v
ASD_LogLevel_Debug	logging.h	/^    ASD_LogLevel_Debug,$/;"	e	enum:__anon32
ASD_LogLevel_Error	logging.h	/^    ASD_LogLevel_Error,$/;"	e	enum:__anon32
ASD_LogLevel_Info	logging.h	/^    ASD_LogLevel_Info,$/;"	e	enum:__anon32
ASD_LogLevel_Off	logging.h	/^    ASD_LogLevel_Off$/;"	e	enum:__anon32
ASD_LogLevel_Trace	logging.h	/^    ASD_LogLevel_Trace = 0,$/;"	e	enum:__anon32
ASD_LogLevel_Warning	logging.h	/^    ASD_LogLevel_Warning,$/;"	e	enum:__anon32
ASD_LogOption	logging.h	/^} ASD_LogOption;$/;"	t	typeref:enum:__anon34
ASD_LogOption_No_Remote	logging.h	/^    ASD_LogOption_No_Remote = 1$/;"	e	enum:__anon34
ASD_LogOption_None	logging.h	/^    ASD_LogOption_None = 0,$/;"	e	enum:__anon34
ASD_LogStream	logging.h	/^} ASD_LogStream;$/;"	t	typeref:enum:__anon33
ASD_LogStream_All	logging.h	/^    ASD_LogStream_All = 0xFFFF,$/;"	e	enum:__anon33
ASD_LogStream_Daemon	logging.h	/^    ASD_LogStream_Daemon = 32,$/;"	e	enum:__anon33
ASD_LogStream_I2C	logging.h	/^    ASD_LogStream_I2C = 8,$/;"	e	enum:__anon33
ASD_LogStream_JTAG	logging.h	/^    ASD_LogStream_JTAG = 2,$/;"	e	enum:__anon33
ASD_LogStream_Network	logging.h	/^    ASD_LogStream_Network = 1,$/;"	e	enum:__anon33
ASD_LogStream_None	logging.h	/^    ASD_LogStream_None = 0,$/;"	e	enum:__anon33
ASD_LogStream_Pins	logging.h	/^    ASD_LogStream_Pins = 4,$/;"	e	enum:__anon33
ASD_LogStream_SDK	logging.h	/^    ASD_LogStream_SDK = 64,$/;"	e	enum:__anon33
ASD_LogStream_Test	logging.h	/^    ASD_LogStream_Test = 16,$/;"	e	enum:__anon33
ASD_MSG	asd_msg.h	/^typedef struct ASD_MSG$/;"	s
ASD_MSG	asd_msg.h	/^} ASD_MSG;$/;"	t	typeref:struct:ASD_MSG
ASD_MSG_CRYPY_NOT_SUPPORTED	asd_common.h	/^    ASD_MSG_CRYPY_NOT_SUPPORTED = 0x25,$/;"	e	enum:__anon8
ASD_MSG_EVENT_RESULT	tests/asd_main_tests.c	/^STATUS ASD_MSG_EVENT_RESULT = ST_OK;$/;"	v
ASD_MSG_FREE_RESULT	tests/asd_main_tests.c	/^STATUS ASD_MSG_FREE_RESULT = ST_OK;$/;"	v
ASD_MSG_GET_FDS_INDEX	tests/asd_main_tests.c	/^int ASD_MSG_GET_FDS_INDEX = 0;$/;"	v
ASD_MSG_GET_FDS_RESULT	tests/asd_main_tests.c	/^STATUS ASD_MSG_GET_FDS_RESULT[2];$/;"	v
ASD_MSG_NOT_SUPPORTED	asd_common.h	/^    ASD_MSG_NOT_SUPPORTED = 0x29,$/;"	e	enum:__anon8
ASD_MSG_READ_RESULT	tests/asd_main_tests.c	/^STATUS ASD_MSG_READ_RESULT = ST_OK;$/;"	v
ASD_MSG_TESTS_H	tests/asd_msg_tests.h	29;"	d
ASD_PACKET_CONTINUATION	asd_common.h	/^    ASD_PACKET_CONTINUATION = 0x80,$/;"	e	enum:__anon8
ASD_PAM_SERVICE	auth_pam.h	51;"	d
ASD_PAM_USER	auth_pam.h	54;"	d
ASD_PIN_TO_GPIO	target_handler.h	/^static const Target_Control_GPIOS ASD_PIN_TO_GPIO[] = {$/;"	v
ASD_SUCCESS	asd_common.h	/^    ASD_SUCCESS = 0,$/;"	e	enum:__anon8
ASD_UNKNOWN_ERROR	asd_common.h	/^    ASD_UNKNOWN_ERROR = 0x7F,$/;"	e	enum:__anon8
ASD_initialize_log_settings	logging.c	/^void ASD_initialize_log_settings(ASD_LogLevel level, ASD_LogStream stream,$/;"	f
ASD_initialize_log_settings_IRDR_test	tests/logging_tests.c	/^void ASD_initialize_log_settings_IRDR_test(void** state)$/;"	f
ASD_initialize_log_settings_all_test	tests/logging_tests.c	/^void ASD_initialize_log_settings_all_test(void** state)$/;"	f
ASD_log	logging.c	/^void ASD_log(ASD_LogLevel level, ASD_LogStream stream, ASD_LogOption options,$/;"	f
ASD_log_buffer	logging.c	/^void ASD_log_buffer(ASD_LogLevel level, ASD_LogStream stream,$/;"	f
ASD_log_buffer_doesnt_log_test	tests/logging_tests.c	/^void ASD_log_buffer_doesnt_log_test(void** state)$/;"	f
ASD_log_buffer_writes_to_logging_callback_test	tests/logging_tests.c	/^void ASD_log_buffer_writes_to_logging_callback_test(void** state)$/;"	f
ASD_log_buffer_writes_to_stderr_test	tests/logging_tests.c	/^void ASD_log_buffer_writes_to_stderr_test(void** state)$/;"	f
ASD_log_buffer_writes_to_syslog_with_max_prefix_test	tests/logging_tests.c	/^void ASD_log_buffer_writes_to_syslog_with_max_prefix_test(void** state)$/;"	f
ASD_log_buffer_writes_to_syslog_with_oversize_prefix_test	tests/logging_tests.c	/^void ASD_log_buffer_writes_to_syslog_with_oversize_prefix_test(void** state)$/;"	f
ASD_log_buffer_writes_to_syslog_with_undersize_prefix_test	tests/logging_tests.c	/^void ASD_log_buffer_writes_to_syslog_with_undersize_prefix_test(void** state)$/;"	f
ASD_log_shift	logging.c	/^void ASD_log_shift(ASD_LogLevel level, ASD_LogStream stream,$/;"	f
ASD_log_shift_doesnt_log_test	tests/logging_tests.c	/^void ASD_log_shift_doesnt_log_test(void** state)$/;"	f
ASD_log_shift_invalid_params_test	tests/logging_tests.c	/^void ASD_log_shift_invalid_params_test(void** state)$/;"	f
ASD_log_shift_malloc_failure_test	tests/logging_tests.c	/^void ASD_log_shift_malloc_failure_test(void** state)$/;"	f
ASD_log_shift_writes_correct_log_messages_test	tests/logging_tests.c	/^void ASD_log_shift_writes_correct_log_messages_test(void** state)$/;"	f
ASD_log_writes_to_logging_callback_and_stderr_test	tests/logging_tests.c	/^void ASD_log_writes_to_logging_callback_and_stderr_test(void** state)$/;"	f
ASD_log_writes_to_logging_callback_test	tests/logging_tests.c	/^void ASD_log_writes_to_logging_callback_test(void** state)$/;"	f
ASD_log_writes_to_stderr_test	tests/logging_tests.c	/^void ASD_log_writes_to_stderr_test(void** state)$/;"	f
ASD_log_writes_to_syslog_test	tests/logging_tests.c	/^void ASD_log_writes_to_syslog_test(void** state)$/;"	f
ASD_should_log_correctly_filters_messages_test	tests/logging_tests.c	/^void ASD_should_log_correctly_filters_messages_test(void** state)$/;"	f
ASD_should_log_honors_no_remote_option_test	tests/logging_tests.c	/^void ASD_should_log_honors_no_remote_option_test(void** state)$/;"	f
AST2500_GPIO_BASE_FILE	target_handler.h	50;"	d
AST_JTAG_BITBANG	jtag_handler.h	68;"	d
AST_JTAG_BITBANG	tests/jtag_drv.h	84;"	d
AST_JTAG_GET_TCK	tests/jtag_drv.h	83;"	d
AST_JTAG_READWRITESCAN	jtag_handler.h	70;"	d
AST_JTAG_READWRITESCAN	tests/jtag_drv.h	86;"	d
AST_JTAG_SET_TAPSTATE	jtag_handler.h	69;"	d
AST_JTAG_SET_TAPSTATE	tests/jtag_drv.h	85;"	d
AST_JTAG_SET_TCK	jtag_handler.h	71;"	d
AST_JTAG_SET_TCK	tests/jtag_drv.h	82;"	d
AST_JTAG_SLAVECONTLR	tests/jtag_drv.h	87;"	d
AUTHRET_INVALIDDATA	auth_pam.c	/^    AUTHRET_INVALIDDATA,$/;"	e	enum:__anon18	file:
AUTHRET_LOCKOUT	auth_pam.c	/^    AUTHRET_LOCKOUT,$/;"	e	enum:__anon18	file:
AUTHRET_OK	auth_pam.c	/^    AUTHRET_OK,$/;"	e	enum:__anon18	file:
AUTHRET_SYSERR	auth_pam.c	/^    AUTHRET_SYSERR,$/;"	e	enum:__anon18	file:
AUTHRET_UNAUTHORIZED	auth_pam.c	/^    AUTHRET_UNAUTHORIZED,$/;"	e	enum:__anon18	file:
AUTH_CLIENT_HANDSHAKE_RESULT	tests/asd_main_tests.c	/^STATUS AUTH_CLIENT_HANDSHAKE_RESULT = ST_OK;$/;"	v
AUTH_HANDSHAKE_BUSY	auth_pam.h	/^    AUTH_HANDSHAKE_BUSY = 0x2b,   \/\/ session already in progress$/;"	e	enum:__anon19
AUTH_HANDSHAKE_FAILURE	auth_pam.h	/^    AUTH_HANDSHAKE_FAILURE = 0x3f,$/;"	e	enum:__anon19
AUTH_HANDSHAKE_SUCCESS	auth_pam.h	/^    AUTH_HANDSHAKE_SUCCESS = 0x30,$/;"	e	enum:__anon19
AUTH_HANDSHAKE_SYSERR	auth_pam.h	/^    AUTH_HANDSHAKE_SYSERR = 0x24, \/\/ system error.$/;"	e	enum:__anon19
AUTH_HDLR_NONE	authenticate.h	/^    AUTH_HDLR_NONE,$/;"	e	enum:__anon16
AUTH_HDLR_PAM	authenticate.h	/^    AUTH_HDLR_PAM$/;"	e	enum:__anon16
AUTH_HDR_VERSION	auth_pam.h	43;"	d
BASEBOARD_PATH	dbus_helper.h	71;"	d
BIND_RESULT	tests/ext_network_tests.c	/^int BIND_RESULT = 0;$/;"	v
BITS_PER_BYTE	jtag_handler.h	79;"	d
BMC_VERSION	tests/asd_msg_tests.c	/^static const char BMC_VERSION[] = "OPENBMC_VERSION:\\"wht-0.22-0-ge37eb7922\\"";$/;"	v	file:
BROADCAST_MESSAGE_ORIGIN_ID	asd_common.h	42;"	d
BUFFER_LINE_SIZE	vprobe_handler.h	38;"	d
BUFFER_SIZE	asd_common.h	39;"	d
BUFF_SIZE	gpio.c	51;"	d	file:
BUS_SELECT_STATUS	tests/asd_msg_tests.c	/^STATUS BUS_SELECT_STATUS = ST_OK;$/;"	v
CALLBACK_LOG_MESSAGE_LENGTH	logging.h	35;"	d
CHARS_PER_CHAIN	asd_msg.h	50;"	d
CHIP_BUFFER_SIZE	target_handler.h	41;"	d
CHIP_FNAME_BUFF_SIZE	target_handler.h	51;"	d
CLEAR_TIMEOUT	asd_common.h	251;"	d
CLOSE_CLIENT_EVENT	asd_main.h	/^    CLOSE_CLIENT_EVENT = 1$/;"	e	enum:__anon12
CLOSE_RESULT	tests/ext_network_tests.c	/^int CLOSE_RESULT = 0;$/;"	v
CLOSE_RESULT	tests/gpio_tests.c	/^int CLOSE_RESULT = 0;$/;"	v
COMMON_H	asd_common.h	29;"	d
COOPER_CITY_PLATFORM_ID	target_handler.h	57;"	d
DBUS	tests/target_handler_tests.c	/^Dbus_Handle DBUS;$/;"	v
DBUS_DEINITIALIZE_RESULT	tests/target_handler_tests.c	/^STATUS DBUS_DEINITIALIZE_RESULT = ST_OK;$/;"	v
DBUS_GET_POWERSTATE_RESULT	tests/target_handler_tests.c	/^STATUS DBUS_GET_POWERSTATE_RESULT = ST_OK;$/;"	v
DBUS_GET_POWERSTATE_VALUE	tests/target_handler_tests.c	/^int DBUS_GET_POWERSTATE_VALUE = 0;$/;"	v
DBUS_HANDLE	tests/target_handler_tests.c	/^Dbus_Handle* DBUS_HANDLE;$/;"	v
DBUS_INITIALIZE_RESULT	tests/target_handler_tests.c	/^STATUS DBUS_INITIALIZE_RESULT = ST_OK;$/;"	v
DBUS_POWER_OFF_RESULT	tests/target_handler_tests.c	/^STATUS DBUS_POWER_OFF_RESULT = ST_OK;$/;"	v
DBUS_POWER_ON_RESULT	tests/target_handler_tests.c	/^STATUS DBUS_POWER_ON_RESULT = ST_OK;$/;"	v
DBUS_POWER_REBOOT_RESULT	tests/target_handler_tests.c	/^STATUS DBUS_POWER_REBOOT_RESULT = ST_OK;$/;"	v
DBUS_POWER_RESET_RESULT	tests/target_handler_tests.c	/^STATUS DBUS_POWER_RESET_RESULT = ST_OK;$/;"	v
DBUS_POWER_TOGGLE_RESULT	tests/target_handler_tests.c	/^STATUS DBUS_POWER_TOGGLE_RESULT = ST_OK;$/;"	v
DBUS_PROCESS_EVENT_RESULT	tests/target_handler_tests.c	/^STATUS DBUS_PROCESS_EVENT_RESULT = ST_OK;$/;"	v
DBUS_PROPERTIES	dbus_helper.h	60;"	d
DBUS_SET_METHOD	dbus_helper.h	61;"	d
DEFAULT_CERT_FILE	asd_main.h	46;"	d
DEFAULT_DR_SHIFT_SIZE	jtag_test.h	47;"	d
DEFAULT_I2C_BUS	asd_main.h	44;"	d
DEFAULT_I2C_ENABLE	asd_main.h	43;"	d
DEFAULT_IR_SHIFT_SIZE	jtag_test.h	43;"	d
DEFAULT_IR_VALUE	jtag_test.h	46;"	d
DEFAULT_JTAG_CONTROLLER_MODE	jtag_test.h	50;"	d
DEFAULT_JTAG_TCK	jtag_test.h	51;"	d
DEFAULT_LOG_LEVEL	asd_main.h	48;"	d
DEFAULT_LOG_LEVEL	jtag_test.h	55;"	d
DEFAULT_LOG_STREAMS	asd_main.h	49;"	d
DEFAULT_LOG_STREAMS	jtag_test.h	56;"	d
DEFAULT_LOG_TO_SYSLOG	asd_main.h	47;"	d
DEFAULT_NUMBER_TEST_ITERATIONS	jtag_test.h	45;"	d
DEFAULT_PORT	asd_main.h	45;"	d
DEFAULT_TAP_DATA_PATTERN	jtag_test.h	39;"	d
DEFAULT_TO_MANUAL_MODE	jtag_test.h	49;"	d
DIV_ROUND_UP	jtag_handler.h	78;"	d
DMA_TYPE	asd_common.h	/^    DMA_TYPE,$/;"	e	enum:__anon4
DRMAXPADSIZE	jtag_handler.h	76;"	d
DR_POSTFIX	asd_common.h	/^    DR_POSTFIX,    \/\/ Size: 1 Byte$/;"	e	enum:__anon3
DR_PREFIX	asd_common.h	/^    DR_PREFIX,     \/\/ Size: 1 Byte$/;"	e	enum:__anon3
DUMMY_SSL_CONTEXT	tests/ext_tls_tests.c	/^int DUMMY_SSL_CONTEXT;$/;"	v
DUMMY_SSL_OBJECT	tests/ext_tls_tests.c	/^int DUMMY_SSL_OBJECT;$/;"	v
Dbus_Handle	dbus_helper.h	/^typedef struct Dbus_Handle$/;"	s
Dbus_Handle	dbus_helper.h	/^} Dbus_Handle;$/;"	t	typeref:struct:Dbus_Handle
ENABLE_DEBUG_LOGGING	logging.h	34;"	d
ENTITY_MANAGER_PROPERTIES_INTERFACE	dbus_helper.h	76;"	d
ENTITY_MANAGER_SERVICE	dbus_helper.h	75;"	d
EVENT_FD_RESULT	tests/asd_main_tests.c	/^int EVENT_FD_RESULT = 0;$/;"	v
EXTNET	tests/asd_main_tests.c	/^ExtNet EXTNET;$/;"	v
EXTNET_ACCEPT_CONNECTION	tests/asd_main_tests.c	/^STATUS EXTNET_ACCEPT_CONNECTION = ST_OK;$/;"	v
EXTNET_HDLR_NON_ENCRYPT	ext_network.h	/^    EXTNET_HDLR_NON_ENCRYPT,$/;"	e	enum:__anon25
EXTNET_HDLR_TLS	ext_network.h	/^    EXTNET_HDLR_TLS$/;"	e	enum:__anon25
EXTNET_INIT_CLIENT_RESULT	tests/session_tests.c	/^STATUS EXTNET_INIT_CLIENT_RESULT = ST_OK;$/;"	v
EXTNET_INIT_MALLOC	tests/asd_main_tests.c	/^bool EXTNET_INIT_MALLOC = false;$/;"	v
EXTNET_IS_CLIENT_CLOSED_RESPONSE	tests/session_tests.c	/^bool EXTNET_IS_CLIENT_CLOSED_RESPONSE = false;$/;"	v
EXTNET_RECV_DATA	tests/auth_pam_tests.c	/^char EXTNET_RECV_DATA[10240];$/;"	v
EXTNET_RECV_DATA_PENDING	tests/auth_pam_tests.c	/^bool EXTNET_RECV_DATA_PENDING = false;$/;"	v
EXTNET_RECV_PENDING	tests/asd_main_tests.c	/^bool EXTNET_RECV_PENDING = false;$/;"	v
EXTNET_RECV_RESULT	tests/asd_main_tests.c	/^int EXTNET_RECV_RESULT = 0;$/;"	v
EXTNET_RECV_RESULT	tests/auth_pam_tests.c	/^int EXTNET_RECV_RESULT = 0;$/;"	v
EXTNET_SEND_RESULT	tests/asd_main_tests.c	/^int EXTNET_SEND_RESULT = 0;$/;"	v
EXTNET_SEND_RESULT	tests/auth_pam_tests.c	/^int EXTNET_SEND_RESULT = 0;$/;"	v
ExtNet	ext_network.h	/^typedef struct ExtNet$/;"	s
ExtNet	ext_network.h	/^} ExtNet;$/;"	t	typeref:struct:ExtNet
FAKE_ASD_MSG_INIT_RESULT	tests/asd_main_tests.c	/^ASD_MSG* FAKE_ASD_MSG_INIT_RESULT = NULL;$/;"	v
FAKE_AUTH_INIT_RESULT	tests/asd_main_tests.c	/^STATUS FAKE_AUTH_INIT_RESULT = ST_OK;$/;"	v
FAKE_BUS	tests/i2c_handler_tests.c	163;"	d	file:
FAKE_DRIVER_HANDLE	tests/i2c_handler_tests.c	/^static int FAKE_DRIVER_HANDLE = 4;$/;"	v	file:
FAKE_DRIVER_HANDLE	tests/jtag_handler_tests.c	/^static int FAKE_DRIVER_HANDLE = 4;$/;"	v	file:
FAKE_EXTNET_INIT_RESULT	tests/asd_main_tests.c	/^ExtNet* FAKE_EXTNET_INIT_RESULT = &EXTNET;$/;"	v
FAKE_EXTNET_OPEN_EXTERNAL_RESULT	tests/asd_main_tests.c	/^STATUS FAKE_EXTNET_OPEN_EXTERNAL_RESULT = ST_OK;$/;"	v
FAKE_EXTTCP_INIT	tests/ext_network_tests.c	/^STATUS FAKE_EXTTCP_INIT = ST_OK;$/;"	v
FAKE_FD	tests/asd_msg_tests.c	/^int FAKE_FD = 0;$/;"	v
FAKE_FD	tests/gpio_tests.c	/^int FAKE_FD[10];$/;"	v
FAKE_FD_INDEX	tests/gpio_tests.c	/^int FAKE_FD_INDEX = 0;$/;"	v
FAKE_FILE_HANDLE	tests/target_handler_tests.c	47;"	d	file:
FAKE_FILE_NAME	tests/i2c_handler_tests.c	162;"	d	file:
FAKE_I2C_HANDLER	tests/asd_msg_tests.c	/^I2C_Handler* FAKE_I2C_HANDLER;$/;"	v
FAKE_INIT_CLIENT_RESULT	tests/ext_network_tests.c	/^STATUS FAKE_INIT_CLIENT_RESULT = ST_OK;$/;"	v
FAKE_IOCTL_RESULT	tests/i2c_handler_tests.c	/^static int FAKE_IOCTL_RESULT = 0;$/;"	v	file:
FAKE_IOCTL_RESULT	tests/jtag_handler_tests.c	/^static int FAKE_IOCTL_RESULT[MAX_IOCTLS];$/;"	v	file:
FAKE_JTAG_HANDLER	tests/asd_msg_tests.c	/^JTAG_Handler* FAKE_JTAG_HANDLER;$/;"	v
FAKE_JTAG_HANDLER	tests/jtag_test_tests.c	/^JTAG_Handler* FAKE_JTAG_HANDLER;$/;"	v
FAKE_ON_ACCEPT_RESULT	tests/ext_network_tests.c	/^STATUS FAKE_ON_ACCEPT_RESULT = ST_OK;$/;"	v
FAKE_READ_RESULT	tests/asd_main_tests.c	/^ssize_t FAKE_READ_RESULT = 0;$/;"	v
FAKE_READ_VALUE	tests/asd_main_tests.c	/^uint64_t FAKE_READ_VALUE = 0;$/;"	v
FAKE_READ_VALUE	tests/dbus_helper_tests.c	/^char FAKE_READ_VALUE[256];$/;"	v
FAKE_READ_VALUE	tests/gpio_tests.c	/^char FAKE_READ_VALUE[256];$/;"	v
FAKE_READ_VALUES	tests/dbus_helper_tests.c	/^char FAKE_READ_VALUES[MAX_SDBUS_RET_VALUES][256];$/;"	v
FAKE_RECV_RESULT	tests/ext_network_tests.c	/^int FAKE_RECV_RESULT = 0;$/;"	v
FAKE_SEND_RESULT	tests/ext_network_tests.c	/^int FAKE_SEND_RESULT = 0;$/;"	v
FAKE_TARGET_HANDLER	tests/asd_msg_tests.c	/^Target_Control_Handle* FAKE_TARGET_HANDLER;$/;"	v
FAKE_X509	tests/ext_tls_tests.c	/^int FAKE_X509;$/;"	v
FILE_NAME	i2c_handler.c	43;"	d	file:
FLOCK_RESULT	tests/asd_msg_tests.c	/^STATUS FLOCK_RESULT[MAX_COMMANDS];$/;"	v
FakeReadFunctionBuffer	tests/asd_msg_tests.c	/^unsigned char FakeReadFunctionBuffer[MAX_DATA_SIZE];$/;"	v
FakeReadFunctionDataPending	tests/asd_msg_tests.c	/^bool FakeReadFunctionDataPending = false;$/;"	v
FakeReadFunctionNumBytesPerRead	tests/asd_msg_tests.c	/^int FakeReadFunctionNumBytesPerRead = -1;$/;"	v
FakeReadFunctionNumBytesReadIndex	tests/asd_msg_tests.c	/^int FakeReadFunctionNumBytesReadIndex = 0;$/;"	v
FakeReadFunctionPtr	tests/asd_msg_tests.c	/^STATUS FakeReadFunctionPtr(void* state, void* connection, void* buffer,$/;"	f
FakeReadFunctionResult	tests/asd_msg_tests.c	/^STATUS FakeReadFunctionResult = ST_OK;$/;"	v
FakeSendFunctionPtr	tests/asd_msg_tests.c	/^STATUS FakeSendFunctionPtr(void* state, unsigned char* message, size_t length)$/;"	f
FakeSendFunctionResult	tests/asd_msg_tests.c	/^STATUS FakeSendFunctionResult = ST_OK;$/;"	v
GETPEERNAME_RESULT	tests/asd_main_tests.c	/^int GETPEERNAME_RESULT = 0;$/;"	v
GET_POWER_STATE_PROPERTY_CHASSIS	dbus_helper.h	45;"	d
GPIO0_CHIP_NAME	tests/target_handler_tests.c	234;"	d	file:
GPIOD_CHIP_GET_LINE_ERROR	tests/target_handler_tests.c	/^bool GPIOD_CHIP_GET_LINE_ERROR = false;$/;"	v
GPIOD_CHIP_OPEN_ERROR	tests/target_handler_tests.c	/^bool GPIOD_CHIP_OPEN_ERROR = false;$/;"	v
GPIOD_CONSUMER_LABEL	target_handler.c	48;"	d	file:
GPIOD_CTXLESS_FIND_LINE_FORCE_RETURN	tests/target_handler_tests.c	/^bool GPIOD_CTXLESS_FIND_LINE_FORCE_RETURN = false;$/;"	v
GPIOD_CTXLESS_FIND_LINE_RETURN	tests/target_handler_tests.c	/^int GPIOD_CTXLESS_FIND_LINE_RETURN = 0;$/;"	v
GPIOD_DEV_ROOT_FOLDER	target_handler.c	49;"	d	file:
GPIOD_DEV_ROOT_FOLDER_STRLEN	target_handler.c	50;"	d	file:
GPIOD_LINE_EVENT_GET_FD_FD	tests/target_handler_tests.c	/^int GPIOD_LINE_EVENT_GET_FD_FD = 0;$/;"	v
GPIOD_LINE_EVENT_READ_RESULT	tests/target_handler_tests.c	/^int GPIOD_LINE_EVENT_READ_RESULT = 0;$/;"	v
GPIOD_LINE_GET_VALUE_INDEX	tests/target_handler_tests.c	/^int GPIOD_LINE_GET_VALUE_INDEX = 0;$/;"	v
GPIOD_LINE_GET_VALUE_VALUES	tests/target_handler_tests.c	/^int GPIOD_LINE_GET_VALUE_VALUES[MAX_GPIO_ITERATIONS] = {0};$/;"	v
GPIOD_LINE_REQUEST_RESULT	tests/target_handler_tests.c	/^int GPIOD_LINE_REQUEST_RESULT = 0;$/;"	v
GPIOD_LINE_SET_VALUE_INDEX	tests/target_handler_tests.c	/^int GPIOD_LINE_SET_VALUE_INDEX = 0;$/;"	v
GPIOD_LINE_SET_VALUE_RESULTS	tests/target_handler_tests.c	/^int GPIOD_LINE_SET_VALUE_RESULTS[MAX_GPIO_ITERATIONS] = {0};$/;"	v
GPIO_DIRECTION	gpio.h	/^} GPIO_DIRECTION;$/;"	t	typeref:enum:__anon29
GPIO_DIRECTION_HIGH_STRING	gpio.c	49;"	d	file:
GPIO_DIRECTION_IN_STRING	gpio.c	47;"	d	file:
GPIO_DIRECTION_LOW_STRING	gpio.c	50;"	d	file:
GPIO_DIRECTION_OUT_STRING	gpio.c	48;"	d	file:
GPIO_DIRECTION_STRINGS	gpio.h	/^static const char* GPIO_DIRECTION_STRINGS[] = {ALL_GPIO_DIRECTIONS(TO_STRING)};$/;"	v
GPIO_EDGE	gpio.h	/^} GPIO_EDGE;$/;"	t	typeref:enum:__anon28
GPIO_EDGE_BOTH_STRING	gpio.c	45;"	d	file:
GPIO_EDGE_FALLING_STRING	gpio.c	44;"	d	file:
GPIO_EDGE_NONE_STRING	gpio.c	42;"	d	file:
GPIO_EDGE_RISING_STRING	gpio.c	43;"	d	file:
GPIO_EDGE_STRINGS	gpio.h	/^static const char* GPIO_EDGE_STRINGS[] = {ALL_GPIO_EDGES(TO_STRING)};$/;"	v
GPIO_EXPORT_FD	tests/target_handler_tests.c	/^int GPIO_EXPORT_FD[20];$/;"	v
GPIO_EXPORT_RESULT	tests/target_handler_tests.c	/^STATUS GPIO_EXPORT_RESULT[20];$/;"	v
GPIO_EXPORT_RESULT_INDEX	tests/target_handler_tests.c	/^int GPIO_EXPORT_RESULT_INDEX = 0;$/;"	v
GPIO_FDS	tests/asd_main_tests.c	/^target_fdarr_t GPIO_FDS;$/;"	v
GPIO_FD_INDEX	asd_main.h	81;"	d
GPIO_GET_VALUE_CHUNK	tests/target_handler_tests.c	/^bool GPIO_GET_VALUE_CHUNK = false;$/;"	v
GPIO_GET_VALUE_INDEX	tests/target_handler_tests.c	/^int GPIO_GET_VALUE_INDEX = 0;$/;"	v
GPIO_GET_VALUE_RESULT	tests/target_handler_tests.c	/^STATUS GPIO_GET_VALUE_RESULT = ST_OK;$/;"	v
GPIO_GET_VALUE_RESULTS	tests/target_handler_tests.c	/^STATUS GPIO_GET_VALUE_RESULTS[MAX_GPIO_ITERATIONS] = {ST_OK};$/;"	v
GPIO_GET_VALUE_VALUE	tests/target_handler_tests.c	/^unsigned int GPIO_GET_VALUE_VALUE = 0;$/;"	v
GPIO_GET_VALUE_VALUES	tests/target_handler_tests.c	/^int GPIO_GET_VALUE_VALUES[MAX_GPIO_ITERATIONS] = {0};$/;"	v
GPIO_SET_ACTIVE_LOW_RESULT	tests/target_handler_tests.c	/^STATUS GPIO_SET_ACTIVE_LOW_RESULT = ST_OK;$/;"	v
GPIO_SET_DIRECTION_RESULT	tests/target_handler_tests.c	/^STATUS GPIO_SET_DIRECTION_RESULT = ST_OK;$/;"	v
GPIO_SET_EDGE_RESULT	tests/target_handler_tests.c	/^STATUS GPIO_SET_EDGE_RESULT = ST_OK;$/;"	v
GPIO_SET_VALUE_INDEX	tests/target_handler_tests.c	/^unsigned int GPIO_SET_VALUE_INDEX = 0;$/;"	v
GPIO_SET_VALUE_RESULT	tests/target_handler_tests.c	/^STATUS GPIO_SET_VALUE_RESULT[MAX_GPIO_ITERATIONS];$/;"	v
GPIO_SYSFS_SUPPORT_DEPRECATED	target_handler.h	43;"	d
GPIO_UNEXPORT_RESULT	tests/target_handler_tests.c	/^STATUS GPIO_UNEXPORT_RESULT[20];$/;"	v
GPIO_UNEXPORT_RESULT_INDEX	tests/target_handler_tests.c	/^int GPIO_UNEXPORT_RESULT_INDEX = 0;$/;"	v
HARDWARE_LOG_EVENT	asd_common.h	/^    HARDWARE_LOG_EVENT = 5,$/;"	e	enum:__anon4
HEADER_SIZE	asd_common.h	37;"	d
HOST_FD_INDEX	asd_main.h	80;"	d
HOST_TRANSITION_PROPERTY	dbus_helper.h	39;"	d
HW_MODE	jtag_handler.h	67;"	d
HW_MODE	tests/jtag_drv.h	/^    HW_MODE = 0,$/;"	e	enum:xfer_mode
I2CHandler	i2c_handler.c	/^I2C_Handler* I2CHandler(i2c_config* config)$/;"	f
I2CHandler_create_test	tests/i2c_handler_tests.c	/^void I2CHandler_create_test()$/;"	f
I2CHandler_malloc_fail_test	tests/i2c_handler_tests.c	/^void I2CHandler_malloc_fail_test()$/;"	f
I2CHandler_null_parameter_test	tests/i2c_handler_tests.c	/^void I2CHandler_null_parameter_test()$/;"	f
I2CMsgBuilder	i2c_msg_builder.c	/^I2C_Msg_Builder* I2CMsgBuilder()$/;"	f
I2CMsgBuilder_malloc_fail_test	tests/i2c_msg_builder_tests.c	/^void I2CMsgBuilder_malloc_fail_test()$/;"	f
I2CMsgBuilder_returns_object_test	tests/i2c_msg_builder_tests.c	/^void I2CMsgBuilder_returns_object_test()$/;"	f
I2C_ADDRESS_ACK	asd_common.h	308;"	d
I2C_ADDRESS_MASK	asd_common.h	306;"	d
I2C_CONTINUE_BIT_MASK	asd_common.h	305;"	d
I2C_FORCE_STOP_MASK	asd_common.h	307;"	d
I2C_Handler	i2c_handler.h	/^typedef struct I2C_Handler$/;"	s
I2C_Handler	i2c_handler.h	/^} I2C_Handler;$/;"	t	typeref:struct:I2C_Handler
I2C_LENGTH_MASK	asd_common.h	304;"	d
I2C_MSG_BUILDER_TESTS_H	tests/i2c_msg_builder_tests.h	29;"	d
I2C_MSG_COUNT	tests/asd_msg_tests.c	/^int I2C_MSG_COUNT = 1;$/;"	v
I2C_MSG_GET_ASD_I2C_MSG_STATUS	tests/asd_msg_tests.c	/^STATUS I2C_MSG_GET_ASD_I2C_MSG_STATUS = ST_OK;$/;"	v
I2C_MSG_RESET_STATUS	tests/asd_msg_tests.c	/^STATUS I2C_MSG_RESET_STATUS = ST_OK;$/;"	v
I2C_Msg_Builder	i2c_msg_builder.h	/^typedef struct I2C_Msg_Builder$/;"	s
I2C_Msg_Builder	i2c_msg_builder.h	/^} I2C_Msg_Builder;$/;"	t	typeref:struct:I2C_Msg_Builder
I2C_READ_MAX	asd_common.h	302;"	d
I2C_READ_MIN	asd_common.h	301;"	d
I2C_TYPE	asd_common.h	/^    I2C_TYPE$/;"	e	enum:__anon4
I2C_WRITE_CFG_BUS_SELECT	asd_common.h	296;"	d
I2C_WRITE_CFG_SCLK	asd_common.h	297;"	d
I2C_WRITE_MAX	asd_common.h	313;"	d
I2C_WRITE_MIN	asd_common.h	312;"	d
IGNORE_CHECKS	tests/asd_msg_tests.c	/^bool IGNORE_CHECKS = false;$/;"	v
INVALID_AUTH_LOCKOUT_NSECS	auth_pam.h	63;"	d
INVALID_AUTH_MAX_ATTEMPTS	auth_pam.h	57;"	d
INVALID_AUTH_PERIOD_NSECS	auth_pam.h	60;"	d
IPC_LogType	asd_common.h	/^} IPC_LogType;$/;"	t	typeref:enum:__anon9
IPC_LogType_Debug	asd_common.h	/^    IPC_LogType_Debug,$/;"	e	enum:__anon9
IPC_LogType_Error	asd_common.h	/^    IPC_LogType_Error,$/;"	e	enum:__anon9
IPC_LogType_Info	asd_common.h	/^    IPC_LogType_Info,$/;"	e	enum:__anon9
IPC_LogType_MAX	asd_common.h	/^    IPC_LogType_MAX,$/;"	e	enum:__anon9
IPC_LogType_MIN	asd_common.h	/^    IPC_LogType_MIN = -1,$/;"	e	enum:__anon9
IPC_LogType_Off	asd_common.h	/^    IPC_LogType_Off,$/;"	e	enum:__anon9
IPC_LogType_Trace	asd_common.h	/^    IPC_LogType_Trace = 0,$/;"	e	enum:__anon9
IPC_LogType_Warning	asd_common.h	/^    IPC_LogType_Warning,$/;"	e	enum:__anon9
IR14_SHIFT_SIZE	jtag_test.h	41;"	d
IR14_SIG1	jtag_test.h	59;"	d
IR16_SHIFT_SIZE	jtag_test.h	42;"	d
IR16_SIG1	jtag_test.h	60;"	d
IRMAXPADSIZE	jtag_handler.h	77;"	d
IR_POSTFIX	asd_common.h	/^    IR_POSTFIX,    \/\/ Size: 2 Bytes, LSB first$/;"	e	enum:__anon3
IR_PREFIX	asd_common.h	/^    IR_PREFIX,     \/\/ Size: 2 Bytes, LSB first$/;"	e	enum:__anon3
IR_SIG_MASK	jtag_test.h	58;"	d
InternalEventTypes	asd_main.h	/^} InternalEventTypes;$/;"	t	typeref:enum:__anon12
IoctlArgType	tests/jtag_handler_tests.c	/^} IoctlArgType;$/;"	t	typeref:enum:__anon42	file:
IoctlArgType_UInt	tests/jtag_handler_tests.c	/^    IoctlArgType_UInt = 0,$/;"	e	enum:__anon42	file:
IoctlArgType_controller_mode_param	tests/jtag_handler_tests.c	/^    IoctlArgType_controller_mode_param,$/;"	e	enum:__anon42	file:
IoctlArgType_scan_xfer	tests/jtag_handler_tests.c	/^    IoctlArgType_scan_xfer,$/;"	e	enum:__anon42	file:
IoctlArgType_set_tck_param	tests/jtag_handler_tests.c	/^    IoctlArgType_set_tck_param,$/;"	e	enum:__anon42	file:
IoctlArgType_tap_state_param	tests/jtag_handler_tests.c	/^    IoctlArgType_tap_state_param,$/;"	e	enum:__anon42	file:
IoctlArgType_tck_bitbang	tests/jtag_handler_tests.c	/^    IoctlArgType_tck_bitbang$/;"	e	enum:__anon42	file:
JTAGHandler	jtag_handler.c	/^JTAG_Handler* JTAGHandler()$/;"	f
JTAGHandler_initializes_padDataOne_to_FFs	tests/jtag_handler_tests.c	/^void JTAGHandler_initializes_padDataOne_to_FFs(void** state)$/;"	f
JTAGHandler_initializes_padDataZero_to_0s	tests/jtag_handler_tests.c	/^void JTAGHandler_initializes_padDataZero_to_0s(void** state)$/;"	f
JTAGHandler_initializes_padding	tests/jtag_handler_tests.c	/^void JTAGHandler_initializes_padding(void** state)$/;"	f
JTAGHandler_initializes_tap_state_to_TRL	tests/jtag_handler_tests.c	/^void JTAGHandler_initializes_tap_state_to_TRL(void** state)$/;"	f
JTAGHandler_malloc_failure	tests/jtag_handler_tests.c	/^void JTAGHandler_malloc_failure(void** state)$/;"	f
JTAGIOC_BASE	tests/jtag_drv.h	80;"	d
JTAGPaddingTypes	jtag_handler.h	/^} JTAGPaddingTypes;$/;"	t	typeref:enum:__anon30
JTAGPaddingTypes_DRPost	jtag_handler.h	/^    JTAGPaddingTypes_DRPost$/;"	e	enum:__anon30
JTAGPaddingTypes_DRPre	jtag_handler.h	/^    JTAGPaddingTypes_DRPre,$/;"	e	enum:__anon30
JTAGPaddingTypes_IRPost	jtag_handler.h	/^    JTAGPaddingTypes_IRPost,$/;"	e	enum:__anon30
JTAGPaddingTypes_IRPre	jtag_handler.h	/^    JTAGPaddingTypes_IRPre,$/;"	e	enum:__anon30
JTAGScanState	jtag_handler.h	/^} JTAGScanState;$/;"	t	typeref:enum:__anon31
JTAGScanState_Done	jtag_handler.h	/^    JTAGScanState_Done = 0,$/;"	e	enum:__anon31
JTAGScanState_Run	jtag_handler.h	/^    JTAGScanState_Run$/;"	e	enum:__anon31
JTAGShiftPadding	jtag_handler.h	/^typedef struct JTAGShiftPadding$/;"	s
JTAGShiftPadding	jtag_handler.h	/^} JTAGShiftPadding;$/;"	t	typeref:struct:JTAGShiftPadding
JTAG_CHAIN_SELECT_MODE	asd_common.h	/^} JTAG_CHAIN_SELECT_MODE;$/;"	t	typeref:enum:__anon6
JTAG_CHAIN_SELECT_MODE_MASK	asd_common.h	121;"	d
JTAG_CHAIN_SELECT_MODE_MULTI	asd_common.h	/^    JTAG_CHAIN_SELECT_MODE_MULTI = 2$/;"	e	enum:__anon6
JTAG_CHAIN_SELECT_MODE_SINGLE	asd_common.h	/^    JTAG_CHAIN_SELECT_MODE_SINGLE = 1,$/;"	e	enum:__anon6
JTAG_CLOCK_CYCLE_MILLISECONDS	target_handler.c	47;"	d	file:
JTAG_CONTROL_MODE	tests/jtag.h	19;"	d
JTAG_Chain_State	jtag_handler.h	/^typedef struct JTAG_Chain_State$/;"	s
JTAG_Chain_State	jtag_handler.h	/^} JTAG_Chain_State;$/;"	t	typeref:struct:JTAG_Chain_State
JTAG_DEVICE_PATHNAME	tests/jtag_handler_tests.c	44;"	d	file:
JTAG_DEVICE_PATHNAME	tests/jtag_handler_tests.c	46;"	d	file:
JTAG_DRIVER_MODE	config.h	/^} JTAG_DRIVER_MODE;$/;"	t	typeref:enum:__anon22
JTAG_DRIVER_MODE_HARDWARE	config.h	/^    JTAG_DRIVER_MODE_HARDWARE = 1$/;"	e	enum:__anon22
JTAG_DRIVER_MODE_MASK	asd_common.h	118;"	d
JTAG_DRIVER_MODE_SOFTWARE	config.h	/^    JTAG_DRIVER_MODE_SOFTWARE = 0,$/;"	e	enum:__anon22
JTAG_FORCE_RESET	tests/jtag.h	/^    JTAG_FORCE_RESET = 1,$/;"	e	enum:jtag_reset
JTAG_FREQ	asd_common.h	/^    JTAG_FREQ = 1, \/\/ Size: 1 Byte$/;"	e	enum:__anon3
JTAG_GET_TAP_STATE_RESULT	tests/asd_msg_tests.c	/^STATUS JTAG_GET_TAP_STATE_RESULT;$/;"	v
JTAG_GIOCFREQ	tests/jtag.h	236;"	d
JTAG_GIOCSTATUS	tests/jtag.h	238;"	d
JTAG_Handler	jtag_handler.h	/^typedef struct JTAG_Handler$/;"	s
JTAG_Handler	jtag_handler.h	/^} JTAG_Handler;$/;"	t	typeref:struct:JTAG_Handler
JTAG_INITIALIZE_RESULT	tests/jtag_test_tests.c	/^STATUS JTAG_INITIALIZE_RESULT;$/;"	v
JTAG_IOCBITBANG	tests/jtag.h	240;"	d
JTAG_IOCXFER	tests/jtag.h	237;"	d
JTAG_MASTER_MODE	tests/jtag.h	29;"	d
JTAG_NO_RESET	tests/jtag.h	/^    JTAG_NO_RESET = 0,$/;"	e	enum:jtag_reset
JTAG_READ_WRITE_XFER	tests/jtag.h	/^    JTAG_READ_WRITE_XFER = 3,$/;"	e	enum:jtag_xfer_direction
JTAG_READ_XFER	tests/jtag.h	/^    JTAG_READ_XFER = 1,$/;"	e	enum:jtag_xfer_direction
JTAG_SDR_XFER	tests/jtag.h	/^    JTAG_SDR_XFER = 1,$/;"	e	enum:jtag_xfer_type
JTAG_SET_JTAG_TCK_RESULT	tests/asd_msg_tests.c	/^STATUS JTAG_SET_JTAG_TCK_RESULT;$/;"	v
JTAG_SET_JTAG_TCK_RESULT	tests/jtag_test_tests.c	/^STATUS JTAG_SET_JTAG_TCK_RESULT;$/;"	v
JTAG_SET_PADDING_RESULT	tests/asd_msg_tests.c	/^STATUS JTAG_SET_PADDING_RESULT;$/;"	v
JTAG_SET_TAP_STATE_RESULT	tests/asd_msg_tests.c	/^STATUS JTAG_SET_TAP_STATE_RESULT;$/;"	v
JTAG_SHIFT_RESULT	tests/asd_msg_tests.c	/^STATUS JTAG_SHIFT_RESULT;$/;"	v
JTAG_SIOCFREQ	tests/jtag.h	235;"	d
JTAG_SIOCMODE	tests/jtag.h	239;"	d
JTAG_SIOCSTATE	tests/jtag.h	234;"	d
JTAG_SIR_XFER	tests/jtag.h	/^    JTAG_SIR_XFER = 0,$/;"	e	enum:jtag_xfer_type
JTAG_SLAVE_MODE	tests/jtag.h	24;"	d
JTAG_STATE	tests/asd_msg_tests.c	/^enum jtag_states JTAG_STATE = jtag_sel_dr;$/;"	v	typeref:enum:jtag_states
JTAG_STATE_CAPTUREDR	tests/jtag.h	/^    JTAG_STATE_CAPTUREDR,$/;"	e	enum:jtag_tapstate
JTAG_STATE_CAPTUREIR	tests/jtag.h	/^    JTAG_STATE_CAPTUREIR,$/;"	e	enum:jtag_tapstate
JTAG_STATE_CURRENT	tests/jtag.h	/^    JTAG_STATE_CURRENT$/;"	e	enum:jtag_tapstate
JTAG_STATE_EXIT1DR	tests/jtag.h	/^    JTAG_STATE_EXIT1DR,$/;"	e	enum:jtag_tapstate
JTAG_STATE_EXIT1IR	tests/jtag.h	/^    JTAG_STATE_EXIT1IR,$/;"	e	enum:jtag_tapstate
JTAG_STATE_EXIT2DR	tests/jtag.h	/^    JTAG_STATE_EXIT2DR,$/;"	e	enum:jtag_tapstate
JTAG_STATE_EXIT2IR	tests/jtag.h	/^    JTAG_STATE_EXIT2IR,$/;"	e	enum:jtag_tapstate
JTAG_STATE_IDLE	tests/jtag.h	/^    JTAG_STATE_IDLE,$/;"	e	enum:jtag_tapstate
JTAG_STATE_PAUSEDR	tests/jtag.h	/^    JTAG_STATE_PAUSEDR,$/;"	e	enum:jtag_tapstate
JTAG_STATE_PAUSEIR	tests/jtag.h	/^    JTAG_STATE_PAUSEIR,$/;"	e	enum:jtag_tapstate
JTAG_STATE_SELECTDR	tests/jtag.h	/^    JTAG_STATE_SELECTDR,$/;"	e	enum:jtag_tapstate
JTAG_STATE_SELECTIR	tests/jtag.h	/^    JTAG_STATE_SELECTIR,$/;"	e	enum:jtag_tapstate
JTAG_STATE_SHIFTDR	tests/jtag.h	/^    JTAG_STATE_SHIFTDR,$/;"	e	enum:jtag_tapstate
JTAG_STATE_SHIFTIR	tests/jtag.h	/^    JTAG_STATE_SHIFTIR,$/;"	e	enum:jtag_tapstate
JTAG_STATE_TLRESET	tests/jtag.h	/^    JTAG_STATE_TLRESET,$/;"	e	enum:jtag_tapstate
JTAG_STATE_UPDATEDR	tests/jtag.h	/^    JTAG_STATE_UPDATEDR,$/;"	e	enum:jtag_tapstate
JTAG_STATE_UPDATEIR	tests/jtag.h	/^    JTAG_STATE_UPDATEIR,$/;"	e	enum:jtag_tapstate
JTAG_TAP_RESET_RESULT	tests/asd_msg_tests.c	/^STATUS JTAG_TAP_RESET_RESULT;$/;"	v
JTAG_TYPE	asd_common.h	/^    JTAG_TYPE,$/;"	e	enum:__anon4
JTAG_WAIT_CYCLES_RESULT	tests/asd_msg_tests.c	/^STATUS JTAG_WAIT_CYCLES_RESULT;$/;"	v
JTAG_WRITE_XFER	tests/jtag.h	/^    JTAG_WRITE_XFER = 2,$/;"	e	enum:jtag_xfer_direction
JTAG_XFER_HW_MODE	tests/jtag.h	34;"	d
JTAG_XFER_MODE	tests/jtag.h	14;"	d
JTAG_XFER_SW_MODE	tests/jtag.h	39;"	d
JTAG_clock_cycle	jtag_handler.c	/^STATUS JTAG_clock_cycle(int handle, unsigned char tms, unsigned char tdi)$/;"	f
JTAG_deinitialize	jtag_handler.c	/^STATUS JTAG_deinitialize(JTAG_Handler* state)$/;"	f
JTAG_deinitialize_NULL_state_check	tests/jtag_handler_tests.c	/^void JTAG_deinitialize_NULL_state_check(void** state)$/;"	f
JTAG_deinitialize_success	tests/jtag_handler_tests.c	/^void JTAG_deinitialize_success(void** state)$/;"	f
JTAG_driver_handle	jtag_handler.h	/^    int JTAG_driver_handle;$/;"	m	struct:JTAG_Handler
JTAG_get_tap_state	jtag_handler.c	/^STATUS JTAG_get_tap_state(JTAG_Handler* state, enum jtag_states* tap_state)$/;"	f
JTAG_get_tap_state_NULL_state_check	tests/jtag_handler_tests.c	/^void JTAG_get_tap_state_NULL_state_check(void** state)$/;"	f
JTAG_get_tap_state_NULL_tap_state_check	tests/jtag_handler_tests.c	/^void JTAG_get_tap_state_NULL_tap_state_check(void** state)$/;"	f
JTAG_get_tap_state_returns_correct_state	tests/jtag_handler_tests.c	/^void JTAG_get_tap_state_returns_correct_state(void** state)$/;"	f
JTAG_initialize	jtag_handler.c	/^STATUS JTAG_initialize(JTAG_Handler* state, bool sw_mode)$/;"	f
JTAG_initialize_NULL_state_check	tests/jtag_handler_tests.c	/^void JTAG_initialize_NULL_state_check(void** state)$/;"	f
JTAG_initialize_clears_padding	tests/jtag_handler_tests.c	/^void JTAG_initialize_clears_padding(void** state)$/;"	f
JTAG_initialize_driver_open_failure	tests/jtag_handler_tests.c	/^void JTAG_initialize_driver_open_failure(void** state)$/;"	f
JTAG_initialize_handles_JTAG_set_tap_state_error	tests/jtag_handler_tests.c	/^void JTAG_initialize_handles_JTAG_set_tap_state_error(void** state)$/;"	f
JTAG_initialize_returns_ST_OK	tests/jtag_handler_tests.c	/^void JTAG_initialize_returns_ST_OK(void** state)$/;"	f
JTAG_initialize_sets_JTAG_set_mode_failure	tests/jtag_handler_tests.c	/^void JTAG_initialize_sets_JTAG_set_mode_failure(void** state)$/;"	f
JTAG_initialize_sets_JTAG_set_tap_state_to_TLR	tests/jtag_handler_tests.c	/^void JTAG_initialize_sets_JTAG_set_tap_state_to_TLR(void** state)$/;"	f
JTAG_set_active_chain	jtag_handler.c	/^STATUS JTAG_set_active_chain(JTAG_Handler* state, scanChain chain)$/;"	f
JTAG_set_active_chain_NULL_state_check	tests/jtag_handler_tests.c	/^void JTAG_set_active_chain_NULL_state_check(void** state)$/;"	f
JTAG_set_active_chain_invalid_less_than_0_chain_test	tests/jtag_handler_tests.c	/^void JTAG_set_active_chain_invalid_less_than_0_chain_test(void** state)$/;"	f
JTAG_set_active_chain_invalid_max_chain_test	tests/jtag_handler_tests.c	/^void JTAG_set_active_chain_invalid_max_chain_test(void** state)$/;"	f
JTAG_set_active_chain_rti_state_test	tests/jtag_handler_tests.c	/^void JTAG_set_active_chain_rti_state_test(void** state)$/;"	f
JTAG_set_active_chain_successful_change_test	tests/jtag_handler_tests.c	/^void JTAG_set_active_chain_successful_change_test(void** state)$/;"	f
JTAG_set_jtag_tck	jtag_handler.c	/^STATUS JTAG_set_jtag_tck(JTAG_Handler* state, unsigned int tck)$/;"	f
JTAG_set_jtag_tck_NULL_state_check	tests/jtag_handler_tests.c	/^void JTAG_set_jtag_tck_NULL_state_check(void** state)$/;"	f
JTAG_set_jtag_tck_correctly_calls_ioctl	tests/jtag_handler_tests.c	/^void JTAG_set_jtag_tck_correctly_calls_ioctl(void** state)$/;"	f
JTAG_set_jtag_tck_handles_ioctl_failure	tests/jtag_handler_tests.c	/^void JTAG_set_jtag_tck_handles_ioctl_failure(void** state)$/;"	f
JTAG_set_padding	jtag_handler.c	/^STATUS JTAG_set_padding(JTAG_Handler* state, const JTAGPaddingTypes padding,$/;"	f
JTAG_set_padding_handles_JTAGPaddingTypes_DRPost	tests/jtag_handler_tests.c	/^void JTAG_set_padding_handles_JTAGPaddingTypes_DRPost(void** state)$/;"	f
JTAG_set_padding_handles_JTAGPaddingTypes_DRPre	tests/jtag_handler_tests.c	/^void JTAG_set_padding_handles_JTAGPaddingTypes_DRPre(void** state)$/;"	f
JTAG_set_padding_handles_JTAGPaddingTypes_IRPost	tests/jtag_handler_tests.c	/^void JTAG_set_padding_handles_JTAGPaddingTypes_IRPost(void** state)$/;"	f
JTAG_set_padding_handles_JTAGPaddingTypes_IRPre	tests/jtag_handler_tests.c	/^void JTAG_set_padding_handles_JTAGPaddingTypes_IRPre(void** state)$/;"	f
JTAG_set_padding_handles_unknown_padding_type	tests/jtag_handler_tests.c	/^void JTAG_set_padding_handles_unknown_padding_type(void** state)$/;"	f
JTAG_set_padding_param_checks	tests/jtag_handler_tests.c	/^void JTAG_set_padding_param_checks(void** state)$/;"	f
JTAG_set_tap_state	jtag_handler.c	/^STATUS JTAG_set_tap_state(JTAG_Handler* state, enum jtag_states tap_state)$/;"	f
JTAG_set_tap_state_NULL_state_check	tests/jtag_handler_tests.c	/^void JTAG_set_tap_state_NULL_state_check(void** state)$/;"	f
JTAG_set_tap_state_calls_ioctl_with_correct_parameters	tests/jtag_handler_tests.c	/^void JTAG_set_tap_state_calls_ioctl_with_correct_parameters(void** state)$/;"	f
JTAG_set_tap_state_ioctl_failure	tests/jtag_handler_tests.c	/^void JTAG_set_tap_state_ioctl_failure(void** state)$/;"	f
JTAG_set_tap_state_jtag_pau_dr_execute_five_wait_cycles	tests/jtag_handler_tests.c	/^void JTAG_set_tap_state_jtag_pau_dr_execute_five_wait_cycles(void** state)$/;"	f
JTAG_set_tap_state_jtag_rti_execute_five_wait_cycles	tests/jtag_handler_tests.c	/^void JTAG_set_tap_state_jtag_rti_execute_five_wait_cycles(void** state)$/;"	f
JTAG_set_tap_state_jtag_rti_wait_cycles_failed	tests/jtag_handler_tests.c	/^void JTAG_set_tap_state_jtag_rti_wait_cycles_failed(void** state)$/;"	f
JTAG_set_tap_state_sets_tap_state_correctly	tests/jtag_handler_tests.c	/^void JTAG_set_tap_state_sets_tap_state_correctly(void** state)$/;"	f
JTAG_shift	jtag_handler.c	/^STATUS JTAG_shift(JTAG_Handler* state, unsigned int number_of_bits,$/;"	f
JTAG_shift_NULL_state_check	tests/jtag_handler_tests.c	/^void JTAG_shift_NULL_state_check(void** state)$/;"	f
JTAG_shift_Shift_DR_uses_correct_padding	tests/jtag_handler_tests.c	/^void JTAG_shift_Shift_DR_uses_correct_padding(void** state)$/;"	f
JTAG_shift_Shift_IR_memcpy_error	tests/jtag_handler_tests.c	/^void JTAG_shift_Shift_IR_memcpy_error(void** state)$/;"	f
JTAG_shift_Shift_IR_sets_correct_scan_state	tests/jtag_handler_tests.c	/^void JTAG_shift_Shift_IR_sets_correct_scan_state(void** state)$/;"	f
JTAG_shift_Shift_IR_uses_correct_padding	tests/jtag_handler_tests.c	/^void JTAG_shift_Shift_IR_uses_correct_padding(void** state)$/;"	f
JTAG_shift_handles_incorrect_state	tests/jtag_handler_tests.c	/^void JTAG_shift_handles_incorrect_state(void** state)$/;"	f
JTAG_shift_handles_postfix_ioctl_errors	tests/jtag_handler_tests.c	/^void JTAG_shift_handles_postfix_ioctl_errors(void** state)$/;"	f
JTAG_shift_handles_prefix_ioctl_errors	tests/jtag_handler_tests.c	/^void JTAG_shift_handles_prefix_ioctl_errors(void** state)$/;"	f
JTAG_shift_handles_shift_ioctl_errors	tests/jtag_handler_tests.c	/^void JTAG_shift_handles_shift_ioctl_errors(void** state)$/;"	f
JTAG_shift_hw	jtag_handler.c	/^STATUS JTAG_shift_hw(JTAG_Handler* state, unsigned int number_of_bits,$/;"	f
JTAG_shift_with_no_padding_handles_shift_ioctl_errors	tests/jtag_handler_tests.c	/^void JTAG_shift_with_no_padding_handles_shift_ioctl_errors(void** state)$/;"	f
JTAG_tap_reset	jtag_handler.c	/^STATUS JTAG_tap_reset(JTAG_Handler* state)$/;"	f
JTAG_tap_reset_NULL_state_check	tests/jtag_handler_tests.c	/^void JTAG_tap_reset_NULL_state_check(void** state)$/;"	f
JTAG_tap_reset_sets_tap_state_to_TLR	tests/jtag_handler_tests.c	/^void JTAG_tap_reset_sets_tap_state_to_TLR(void** state)$/;"	f
JTAG_wait_cycles	jtag_handler.c	/^STATUS JTAG_wait_cycles(JTAG_Handler* state, unsigned int number_of_cycles)$/;"	f
JTAG_wait_cycles_NULL_state_check	tests/jtag_handler_tests.c	/^void JTAG_wait_cycles_NULL_state_check(void** state)$/;"	f
JTAG_wait_cycles_calls_correct_ioctl_correct_number_of_times	tests/jtag_handler_tests.c	/^void JTAG_wait_cycles_calls_correct_ioctl_correct_number_of_times(void** state)$/;"	f
JTAG_wait_cycles_ioctl_failed	tests/jtag_handler_tests.c	/^void JTAG_wait_cycles_ioctl_failed(void** state)$/;"	f
JTAG_wait_cycles_request_bigger_than_MAX_WAIT_CYCLES_failed	tests/jtag_handler_tests.c	/^void JTAG_wait_cycles_request_bigger_than_MAX_WAIT_CYCLES_failed(void** state)$/;"	f
JtagStatesString	jtag_handler.c	/^static const char* JtagStatesString[] = {$/;"	v	file:
LISTEN_RESULT	tests/ext_network_tests.c	/^int LISTEN_RESULT = 0;$/;"	v
LogFunctionPtr	logging.h	/^typedef void (*LogFunctionPtr)(ASD_LogLevel, ASD_LogStream, const char*);$/;"	t
MATCH_STRING_CHASSIS	dbus_helper.h	62;"	d
MAX_COMMANDS	tests/asd_main_tests.c	130;"	d	file:
MAX_COMMANDS	tests/asd_msg_tests.c	79;"	d	file:
MAX_COMMANDS	tests/auth_pam_tests.c	62;"	d	file:
MAX_COMMANDS	tests/jtag_test_tests.c	119;"	d	file:
MAX_DATA_SIZE	asd_common.h	34;"	d
MAX_DATA_SIZE_CMD	asd_common.h	106;"	d
MAX_DR_SHIFT_SIZE	jtag_test.h	48;"	d
MAX_FDS	asd_main.h	82;"	d
MAX_FDS	tests/target_handler_tests.c	120;"	d	file:
MAX_GPIO_ITERATIONS	tests/target_handler_tests.c	162;"	d	file:
MAX_I2C_BUSES	config.h	46;"	d
MAX_I2C_DEV_FILENAME	i2c_handler.c	44;"	d	file:
MAX_IOCTLS	tests/jtag_handler_tests.c	137;"	d	file:
MAX_IR_SHIFT_SIZE	jtag_test.h	44;"	d
MAX_MULTICHAINS	asd_msg.h	49;"	d
MAX_PACKET_SIZE	asd_common.h	38;"	d
MAX_PLATFORM_PATH_SIZE	dbus_helper.h	80;"	d
MAX_PW_LEN	auth_pam.h	48;"	d
MAX_REG_NAME	asd_common.h	40;"	d
MAX_REMOTE_PROBES	vprobe_handler.h	37;"	d
MAX_SCAN_CHAINS	asd_common.h	/^    MAX_SCAN_CHAINS$/;"	e	enum:__anon7
MAX_SDBUS_RET_VALUES	tests/dbus_helper_tests.c	42;"	d	file:
MAX_SESSIONS	session.h	42;"	d
MAX_TAPS_SUPPORTED	jtag_test.h	37;"	d
MAX_TDO_SIZE	jtag_test.h	38;"	d
MAX_WAIT_CYCLES	asd_common.h	41;"	d
MEMCPY_SAFE_RESULT	tests/asd_main_tests.c	/^int MEMCPY_SAFE_RESULT = 0;$/;"	v
MEMCPY_SAFE_RESULT	tests/asd_msg_tests.c	/^int MEMCPY_SAFE_RESULT = 0;$/;"	v
MEMCPY_SAFE_RESULT	tests/jtag_handler_tests.c	/^int MEMCPY_SAFE_RESULT = 0;$/;"	v
MEMCPY_SAFE_RESULT	tests/jtag_test_tests.c	/^int MEMCPY_SAFE_RESULT = 0;$/;"	v
MEMCPY_SAFE_RESULT	tests/session_tests.c	/^int MEMCPY_SAFE_RESULT = 0;$/;"	v
MOTHERBOARD_IDENTIFIER	dbus_helper.h	72;"	d
NO_SESSION_AUTHENTICATED	session.h	44;"	d
NUM_DBUS_FDS	target_handler.h	124;"	d
NUM_GPIOS	target_handler.h	102;"	d
NUM_GPIO_FDS	tests/asd_main_tests.c	/^int NUM_GPIO_FDS = 0;$/;"	v
NUM_IN_FLIGHT_BUFFERS_TO_USE	asd_msg.h	48;"	d
NUM_IN_FLIGHT_MESSAGES_SUPPORTED_CMD	asd_common.h	103;"	d
OBJECT_MAPPER_INTERFACE	dbus_helper.h	70;"	d
OBJECT_MAPPER_PATH	dbus_helper.h	69;"	d
OBJECT_MAPPER_SERVICE	dbus_helper.h	68;"	d
OBTAIN_DOWNSTREAM_VERSION_CMD	asd_common.h	104;"	d
ON_CLOSE_CLIENT_RESULT	tests/ext_network_tests.c	/^STATUS ON_CLOSE_CLIENT_RESULT = ST_OK;$/;"	v
OPENBMC_V	asd_msg.h	51;"	d
OS_RELEASE_GOOD	tests/asd_msg_tests.c	/^int OS_RELEASE_GOOD = 0;$/;"	v
PAM_AUTHENTICATE_RESULT	tests/auth_pam_tests.c	/^int PAM_AUTHENTICATE_RESULT = PAM_SUCCESS;$/;"	v
PAM_END_RESULT	tests/auth_pam_tests.c	/^int PAM_END_RESULT = PAM_SUCCESS;$/;"	v
PAM_START_PAMH	tests/auth_pam_tests.c	/^pam_handle_t* PAM_START_PAMH = NULL;$/;"	v
PAM_START_RESULT	tests/auth_pam_tests.c	/^int PAM_START_RESULT = PAM_SUCCESS;$/;"	v
PIN_EARLY_BOOT_STALL	asd_common.h	/^    PIN_EARLY_BOOT_STALL,$/;"	e	enum:__anon5
PIN_MAX	asd_common.h	/^    PIN_MAX \/\/ Insert before WRITE_PIN_MAX$/;"	e	enum:__anon5
PIN_MIN	asd_common.h	/^    PIN_MIN = -1,$/;"	e	enum:__anon5
PIN_POWER_BUTTON	asd_common.h	/^    PIN_POWER_BUTTON,$/;"	e	enum:__anon5
PIN_PRDY	asd_common.h	/^    PIN_PRDY,$/;"	e	enum:__anon5
PIN_PREQ	asd_common.h	/^    PIN_PREQ,$/;"	e	enum:__anon5
PIN_PWRGOOD	asd_common.h	/^    PIN_PWRGOOD = 0,$/;"	e	enum:__anon5
PIN_RESET_BUTTON	asd_common.h	/^    PIN_RESET_BUTTON,$/;"	e	enum:__anon5
PIN_SYS_PWR_OK	asd_common.h	/^    PIN_SYS_PWR_OK,$/;"	e	enum:__anon5
PIN_TCK_MUX_SELECT	asd_common.h	/^    PIN_TCK_MUX_SELECT,$/;"	e	enum:__anon5
PIN_TYPE_STRINGS	target_handler.h	/^static const char* PIN_TYPE_STRINGS[] = {ALL_PIN_TYPES(TO_STRING)};$/;"	v
POLL_GPIO	target_handler.h	40;"	d
POLL_RESULT	tests/asd_main_tests.c	/^int POLL_RESULT = 0;$/;"	v
POLL_RESULT	tests/target_handler_tests.c	/^int POLL_RESULT = 0;$/;"	v
POLL_REVENTS	tests/asd_main_tests.c	/^short POLL_REVENTS[MAX_FDS];$/;"	v
POLL_REVENTS	tests/target_handler_tests.c	/^short POLL_REVENTS[MAX_FDS];$/;"	v
POWER_INTERFACE_NAME_CHASSIS	dbus_helper.h	43;"	d
POWER_INTERFACE_NAME_HOST	dbus_helper.h	37;"	d
POWER_OBJECT_PATH_CHASSIS	dbus_helper.h	44;"	d
POWER_OBJECT_PATH_HOST	dbus_helper.h	38;"	d
POWER_OFF_ARGUMENT_CHASSIS	dbus_helper.h	51;"	d
POWER_OFF_PROPERTY_CHASSIS	dbus_helper.h	47;"	d
POWER_ON_ARGUMENT_CHASSIS	dbus_helper.h	53;"	d
POWER_ON_PROPERTY_CHASSIS	dbus_helper.h	49;"	d
POWER_REBOOT_ARGUMENT_CHASSIS	dbus_helper.h	55;"	d
POWER_RESET_ARGUMENT_CHASSIS	dbus_helper.h	57;"	d
POWER_SERVICE_CHASSIS	dbus_helper.h	42;"	d
POWER_SERVICE_HOST	dbus_helper.h	36;"	d
PRDY_TIMEOUT	asd_common.h	/^    PRDY_TIMEOUT   \/\/ Size: 1 Byte$/;"	e	enum:__anon3
PROBE_MODE_TYPE	asd_common.h	/^    PROBE_MODE_TYPE,$/;"	e	enum:__anon4
Pin	asd_common.h	/^} Pin;$/;"	t	typeref:enum:__anon5
Pin_Type	target_handler.h	/^} Pin_Type;$/;"	t	typeref:enum:__anon39
Power_State	dbus_helper.h	/^} Power_State;$/;"	t	typeref:enum:__anon23
RANDOM_ASCII_CHARACTERS	auth_pam.h	66;"	d
RAND_BYTES_BUF	tests/auth_pam_tests.c	/^unsigned char RAND_BYTES_BUF[MAX_PW_LEN];$/;"	v
RAND_BYTES_RESULT	tests/auth_pam_tests.c	/^int RAND_BYTES_RESULT = 1;$/;"	v
READ_RESPONSE	tests/asd_msg_tests.c	/^uint8_t READ_RESPONSE[256];$/;"	v
READ_RESULT	tests/gpio_tests.c	/^ssize_t READ_RESULT = 0;$/;"	v
READ_SCAN_MAX	asd_common.h	273;"	d
READ_SCAN_MIN	asd_common.h	272;"	d
READ_STATE_BUFFER	asd_msg.h	/^    READ_STATE_BUFFER,$/;"	e	enum:__anon13
READ_STATE_HEADER	asd_msg.h	/^    READ_STATE_HEADER,$/;"	e	enum:__anon13
READ_STATE_INITIAL	asd_msg.h	/^    READ_STATE_INITIAL = 0,$/;"	e	enum:__anon13
READ_STATUS_MASK	asd_common.h	239;"	d
READ_STATUS_MAX	asd_common.h	236;"	d
READ_STATUS_MIN	asd_common.h	235;"	d
READ_STATUS_PIN_MASK	asd_common.h	240;"	d
READ_TYPE_MAX	target_handler.h	/^    READ_TYPE_MAX \/\/ Insert new read cfg indices before$/;"	e	enum:__anon36
READ_TYPE_MIN	target_handler.h	/^    READ_TYPE_MIN = -1,$/;"	e	enum:__anon36
READ_TYPE_PIN	target_handler.h	/^    READ_TYPE_PIN,$/;"	e	enum:__anon36
READ_TYPE_PROBE	target_handler.h	/^    READ_TYPE_PROBE = 0,$/;"	e	enum:__anon36
READ_WRITE_SCAN_MAX	asd_common.h	277;"	d
READ_WRITE_SCAN_MIN	asd_common.h	276;"	d
READ_WRITE_STATUS	tests/asd_msg_tests.c	/^STATUS READ_WRITE_STATUS = ST_OK;$/;"	v
REMOTE_PROBES_CONFIG_CMD	asd_common.h	110;"	d
RESET_ARGUMENT_HOST	dbus_helper.h	40;"	d
ReadFunctionPtr	asd_msg.h	/^typedef STATUS (*ReadFunctionPtr)(void* state, void* connection, void* buffer,$/;"	t
ReadState	asd_msg.h	/^} ReadState;$/;"	t	typeref:enum:__anon13
ReadType	target_handler.h	/^} ReadType;$/;"	t	typeref:enum:__anon36
SCAN_CHAIN_0	asd_common.h	/^    SCAN_CHAIN_0 = 0,$/;"	e	enum:__anon7
SCAN_CHAIN_1	asd_common.h	/^    SCAN_CHAIN_1,$/;"	e	enum:__anon7
SCAN_CHAIN_SELECT	asd_common.h	231;"	d
SCAN_CHAIN_SELECT_MASK	asd_common.h	232;"	d
SCAN_LENGTH_MASK	asd_common.h	280;"	d
SD_BUS_ADD_MATCH_RESULT	tests/dbus_helper_tests.c	/^int SD_BUS_ADD_MATCH_RESULT;$/;"	v
SD_BUS_ASYNC_TIMEOUT	dbus_helper.h	79;"	d
SD_BUS_CALL_ASYNC_RESULT	tests/dbus_helper_tests.c	/^int SD_BUS_CALL_ASYNC_RESULT = 0;$/;"	v
SD_BUS_ERROR_SET_ERRNO_RESULT	tests/dbus_helper_tests.c	/^int SD_BUS_ERROR_SET_ERRNO_RESULT = 0;$/;"	v
SD_BUS_GET_FD_RESULT	tests/dbus_helper_tests.c	/^int SD_BUS_GET_FD_RESULT = 0;$/;"	v
SD_BUS_GET_PROPERTY_RESULT	tests/dbus_helper_tests.c	/^int SD_BUS_GET_PROPERTY_RESULT = 0;$/;"	v
SD_BUS_MESSAGE_APPEND_RESULT	tests/dbus_helper_tests.c	/^int SD_BUS_MESSAGE_APPEND_RESULT = 0;$/;"	v
SD_BUS_MESSAGE_CLOSE_CONTAINER_RESULT	tests/dbus_helper_tests.c	/^int SD_BUS_MESSAGE_CLOSE_CONTAINER_RESULT = 0;$/;"	v
SD_BUS_MESSAGE_ENTER_CONTAINER_RESULT	tests/dbus_helper_tests.c	/^int SD_BUS_MESSAGE_ENTER_CONTAINER_RESULT[MAX_SDBUS_RET_VALUES] = {0};$/;"	v
SD_BUS_MESSAGE_ENTER_CONTAINER_RESULT_INDEX	tests/dbus_helper_tests.c	/^unsigned int SD_BUS_MESSAGE_ENTER_CONTAINER_RESULT_INDEX = 0;$/;"	v
SD_BUS_MESSAGE_EXIT_CONTAINER_RESULT	tests/dbus_helper_tests.c	/^int SD_BUS_MESSAGE_EXIT_CONTAINER_RESULT = 0;$/;"	v
SD_BUS_MESSAGE_NEW_METHOD_RESULT	tests/dbus_helper_tests.c	/^int SD_BUS_MESSAGE_NEW_METHOD_RESULT = 0;$/;"	v
SD_BUS_MESSAGE_OPEN_CONTAINER_RESULT	tests/dbus_helper_tests.c	/^int SD_BUS_MESSAGE_OPEN_CONTAINER_RESULT = 0;$/;"	v
SD_BUS_MESSAGE_READ_CHUNK	tests/dbus_helper_tests.c	/^bool SD_BUS_MESSAGE_READ_CHUNK = false;$/;"	v
SD_BUS_MESSAGE_READ_RESULT	tests/dbus_helper_tests.c	/^int SD_BUS_MESSAGE_READ_RESULT[MAX_SDBUS_RET_VALUES] = {0};$/;"	v
SD_BUS_MESSAGE_READ_RESULT_INDEX	tests/dbus_helper_tests.c	/^unsigned int SD_BUS_MESSAGE_READ_RESULT_INDEX = 0;$/;"	v
SD_BUS_MESSAGE_SKIP_RESULT	tests/dbus_helper_tests.c	/^int SD_BUS_MESSAGE_SKIP_RESULT = 0;$/;"	v
SD_BUS_MESSAGE_UNREF_RESULT	tests/dbus_helper_tests.c	/^sd_bus_message* SD_BUS_MESSAGE_UNREF_RESULT = NULL;$/;"	v
SD_BUS_OPEN_SYSTEM_RESULT	tests/dbus_helper_tests.c	/^int SD_BUS_OPEN_SYSTEM_RESULT = 0;$/;"	v
SD_BUS_PROCESS_RESULT	tests/dbus_helper_tests.c	/^int SD_BUS_PROCESS_RESULT;$/;"	v
SESSION	tests/asd_main_tests.c	/^Session SESSION;$/;"	v
SESSION_ALREADY_AUTHENTICATED_RESULT	tests/asd_main_tests.c	/^STATUS SESSION_ALREADY_AUTHENTICATED_RESULT = ST_OK;$/;"	v
SESSION_AUTH_COMPLETE_RESULT	tests/asd_main_tests.c	/^STATUS SESSION_AUTH_COMPLETE_RESULT = ST_OK;$/;"	v
SESSION_AUTH_EXPIRE_TIMEOUT	session.h	43;"	d
SESSION_CLOSE_RESULT	tests/asd_main_tests.c	/^STATUS SESSION_CLOSE_RESULT = ST_OK;$/;"	v
SESSION_DATA_PENDING	tests/asd_main_tests.c	/^bool SESSION_DATA_PENDING = false;$/;"	v
SESSION_DATA_PENDING_STORED_VALUE	tests/asd_main_tests.c	/^bool SESSION_DATA_PENDING_STORED_VALUE = false;$/;"	v
SESSION_FDS	tests/asd_main_tests.c	/^session_fdarr_t SESSION_FDS;$/;"	v
SESSION_FDS_COUNT	tests/asd_main_tests.c	/^int SESSION_FDS_COUNT = 0;$/;"	v
SESSION_FDS_RESULT	tests/asd_main_tests.c	/^STATUS SESSION_FDS_RESULT[2];$/;"	v
SESSION_FDS_RESULT_INDEX	tests/asd_main_tests.c	/^int SESSION_FDS_RESULT_INDEX = 0;$/;"	v
SESSION_GET_AUTHENTICATED_CONN_RESULT	tests/asd_main_tests.c	/^STATUS SESSION_GET_AUTHENTICATED_CONN_RESULT = ST_OK;$/;"	v
SESSION_GET_AUTHENTICATED_CONN_RESULT	tests/auth_pam_tests.c	/^STATUS SESSION_GET_AUTHENTICATED_CONN_RESULT = ST_OK;$/;"	v
SESSION_GET_DATA_PENDING	tests/asd_main_tests.c	/^STATUS SESSION_GET_DATA_PENDING = ST_OK;$/;"	v
SESSION_INIT_MALLOC	tests/asd_main_tests.c	/^bool SESSION_INIT_MALLOC = false;$/;"	v
SESSION_INIT_RESULT	tests/asd_main_tests.c	/^Session* SESSION_INIT_RESULT = &SESSION;$/;"	v
SESSION_LOOKUP_CONN_RESULT	tests/asd_main_tests.c	/^extnet_conn_t* SESSION_LOOKUP_CONN_RESULT = NULL;$/;"	v
SESSION_OPEN_RESLUT	tests/asd_main_tests.c	/^STATUS SESSION_OPEN_RESLUT = ST_OK;$/;"	v
SESSION_SET_DATA_PENDING_RESULT	tests/asd_main_tests.c	/^STATUS SESSION_SET_DATA_PENDING_RESULT = ST_OK;$/;"	v
SESSION_TIMEOUT	tests/asd_main_tests.c	/^int SESSION_TIMEOUT = 0;$/;"	v
SETSOCKOPT_RESULT	tests/ext_tls_tests.c	/^int SETSOCKOPT_RESULT = 0;$/;"	v
SETSOCKOPT_SO_BINDTODEVICE_RESULT	tests/ext_network_tests.c	/^int SETSOCKOPT_SO_BINDTODEVICE_RESULT = 0;$/;"	v
SETSOCKOPT_SO_REUSEADDR_RESULT	tests/ext_network_tests.c	/^int SETSOCKOPT_SO_REUSEADDR_RESULT = 0;$/;"	v
SETSOCKOPT_TCP_NODELAY_RESULT	tests/ext_network_tests.c	/^int SETSOCKOPT_TCP_NODELAY_RESULT = 0;$/;"	v
SET_CONFIG_DEFAULTS_RESULT	tests/asd_main_tests.c	/^STATUS SET_CONFIG_DEFAULTS_RESULT = ST_OK;$/;"	v
SET_POWER_STATE_METHOD_CHASSIS	dbus_helper.h	46;"	d
SET_SCLK_STATUS	tests/asd_msg_tests.c	/^STATUS SET_SCLK_STATUS = ST_OK;$/;"	v
SIZEOF_ID_CODE	jtag_test.h	52;"	d
SIZEOF_TAP_DATA_PATTERN	jtag_test.h	40;"	d
SOCKET_RESULT	tests/ext_network_tests.c	/^int SOCKET_RESULT = 0;$/;"	v
SSL_ACCEPT_ERRNO	tests/ext_tls_tests.c	/^int SSL_ACCEPT_ERRNO = 0;$/;"	v
SSL_ACCEPT_RESULT	tests/ext_tls_tests.c	/^int SSL_ACCEPT_RESULT = 1;$/;"	v
SSL_CTX_CHECK_PRIVATE_KEY_RESULT	tests/ext_tls_tests.c	/^int SSL_CTX_CHECK_PRIVATE_KEY_RESULT = 1;$/;"	v
SSL_CTX_NEW_RESULT	tests/ext_tls_tests.c	/^SSL_CTX* SSL_CTX_NEW_RESULT = NULL;$/;"	v
SSL_CTX_SET_CIPHER_LIST_RESULT	tests/ext_tls_tests.c	/^int SSL_CTX_SET_CIPHER_LIST_RESULT = 1;$/;"	v
SSL_CTX_SET_OPTIONS_RESULT	tests/ext_tls_tests.c	/^unsigned long SSL_CTX_SET_OPTIONS_RESULT = 0;$/;"	v
SSL_GET_ERROR_RESULT	tests/ext_tls_tests.c	/^int SSL_GET_ERROR_RESULT = 0;$/;"	v
SSL_GET_PEER_CERTIFICATE_RESULT	tests/ext_tls_tests.c	/^X509* SSL_GET_PEER_CERTIFICATE_RESULT = NULL;$/;"	v
SSL_NEW_RESULT	tests/ext_tls_tests.c	/^SSL* SSL_NEW_RESULT = NULL;$/;"	v
SSL_PENDING_RESULT	tests/ext_tls_tests.c	/^int SSL_PENDING_RESULT = 0;$/;"	v
SSL_READ_DATA	tests/ext_tls_tests.c	/^char SSL_READ_DATA[256];$/;"	v
SSL_READ_DATA_LEN	tests/ext_tls_tests.c	/^int SSL_READ_DATA_LEN = 0;$/;"	v
SSL_READ_RESULT	tests/ext_tls_tests.c	/^int SSL_READ_RESULT = 0;$/;"	v
SSL_SET_FD_RESULT	tests/ext_tls_tests.c	/^int SSL_SET_FD_RESULT = 1;$/;"	v
SSL_USE_CERTIFICATE_FILE_RESULT	tests/ext_tls_tests.c	/^int SSL_USE_CERTIFICATE_FILE_RESULT = 0;$/;"	v
SSL_USE_PRIVATEKEY_FILE_RESULT	tests/ext_tls_tests.c	/^int SSL_USE_PRIVATEKEY_FILE_RESULT = 0;$/;"	v
SSL_WRITE_RESULT	tests/ext_tls_tests.c	/^int SSL_WRITE_RESULT = 0;$/;"	v
STATE_OFF	dbus_helper.h	/^    STATE_OFF = 0,$/;"	e	enum:__anon23
STATE_ON	dbus_helper.h	/^    STATE_ON = 1$/;"	e	enum:__anon23
STATE_UNKNOWN	dbus_helper.h	/^    STATE_UNKNOWN = -1,$/;"	e	enum:__anon23
STATUS	asd_common.h	/^} STATUS;$/;"	t	typeref:enum:__anon2
STRCPY_SAFE_RESULT	tests/auth_pam_tests.c	/^int STRCPY_SAFE_RESULT = 0;$/;"	v
STRTOLEVELMAX	logging.c	215;"	d	file:
STRTOSTREAMMAX	logging.c	259;"	d	file:
ST_ERR	asd_common.h	/^    ST_ERR,$/;"	e	enum:__anon2
ST_OK	asd_common.h	/^    ST_OK,$/;"	e	enum:__anon2
ST_TIMEOUT	asd_common.h	/^    ST_TIMEOUT$/;"	e	enum:__anon2
SUPPORTED_I2C_BUSES	asd_common.h	36;"	d
SUPPORTED_I2C_BUSES_CMD	asd_common.h	108;"	d
SUPPORTED_JTAG_CHAINS	asd_common.h	35;"	d
SUPPORTED_JTAG_CHAINS_CMD	asd_common.h	107;"	d
SUPPORTED_REMOTE_PROBES_CMD	asd_common.h	109;"	d
SW_MODE	jtag_handler.h	66;"	d
SW_MODE	tests/jtag_drv.h	/^    SW_MODE$/;"	e	enum:xfer_mode
ScanType	asd_msg.h	/^} ScanType;$/;"	t	typeref:enum:__anon14
ScanType_Read	asd_msg.h	/^    ScanType_Read,$/;"	e	enum:__anon14
ScanType_ReadWrite	asd_msg.h	/^    ScanType_ReadWrite$/;"	e	enum:__anon14
ScanType_Write	asd_msg.h	/^    ScanType_Write,$/;"	e	enum:__anon14
SendFunctionPtr	asd_msg.h	/^typedef STATUS (*SendFunctionPtr)(void* state, unsigned char* buffer,$/;"	t
Session	session.h	/^typedef struct Session$/;"	s
Session	session.h	/^} Session;$/;"	t	typeref:struct:Session
ShouldLog	logging.c	/^bool ShouldLog(ASD_LogLevel level, ASD_LogStream stream)$/;"	f
ShouldLogFunctionPtr	logging.h	/^typedef bool (*ShouldLogFunctionPtr)(ASD_LogLevel, ASD_LogStream);$/;"	t
TAP_RESET	asd_common.h	254;"	d
TAP_STATE_MASK	asd_common.h	265;"	d
TAP_STATE_MAX	asd_common.h	262;"	d
TAP_STATE_MIN	asd_common.h	261;"	d
TARGET_CONTROL_GPIO_STRINGS	target_handler.h	/^static const char* TARGET_CONTROL_GPIO_STRINGS[] = {$/;"	v
TARGET_EVENT_EVENT	tests/asd_msg_tests.c	/^ASD_EVENT TARGET_EVENT_EVENT;$/;"	v
TARGET_READ_ASSERTED	tests/asd_msg_tests.c	/^bool TARGET_READ_ASSERTED = false;$/;"	v
TARGET_READ_IGNORE	tests/asd_msg_tests.c	/^bool TARGET_READ_IGNORE = false;$/;"	v
TEST_BUFFER_SIZE	tests/jtag_handler_tests.c	42;"	d	file:
TO_ENUM	asd_common.h	44;"	d
TO_STRING	asd_common.h	45;"	d
TargetHandler	target_handler.c	/^Target_Control_Handle* TargetHandler()$/;"	f
TargetHandlerEventFunctionPtr	target_handler.h	/^typedef STATUS (*TargetHandlerEventFunctionPtr)(void*, ASD_EVENT*);$/;"	t
TargetHandler_create_dbus_failure_test	tests/target_handler_tests.c	/^void TargetHandler_create_dbus_failure_test(void** state)$/;"	f
TargetHandler_malloc_failure_test	tests/target_handler_tests.c	/^void TargetHandler_malloc_failure_test(void** state)$/;"	f
TargetHandler_malloc_success_test	tests/target_handler_tests.c	/^void TargetHandler_malloc_success_test(void** state)$/;"	f
Target_Control_GPIO	target_handler.h	/^typedef struct Target_Control_GPIO$/;"	s
Target_Control_GPIO	target_handler.h	/^} Target_Control_GPIO;$/;"	t	typeref:struct:Target_Control_GPIO
Target_Control_GPIOS	target_handler.h	/^} Target_Control_GPIOS;$/;"	t	typeref:enum:__anon38
Target_Control_Handle	target_handler.h	/^typedef struct Target_Control_Handle$/;"	s
Target_Control_Handle	target_handler.h	/^} Target_Control_Handle;$/;"	t	typeref:struct:Target_Control_Handle
UNCORE_DISCOVERY_SHIFT_SIZE_IN_BITS	jtag_test.h	53;"	d
UNINITIALIZED_I2C_DRIVER_HANDLE	i2c_handler.h	33;"	d
UNUSED_SOCKET_FD	ext_network.h	41;"	d
WAIT_CYCLES_TCK_DISABLE	asd_common.h	244;"	d
WAIT_CYCLES_TCK_ENABLE	asd_common.h	245;"	d
WAIT_PRDY	asd_common.h	248;"	d
WAIT_SYNC	asd_common.h	257;"	d
WAIT_SYNC_CMD_LENGTH	asd_common.h	258;"	d
WILSON_CITY_PLATFORM_ID	target_handler.h	55;"	d
WILSON_POINT_PLATFORM_ID	target_handler.h	56;"	d
WOLF_PASS_PLATFORM_ID	target_handler.h	54;"	d
WRITE_CFG_MASK	asd_common.h	223;"	d
WRITE_CFG_MAX	asd_common.h	220;"	d
WRITE_CFG_MIN	asd_common.h	219;"	d
WRITE_CONFIG_BREAK_ALL	target_handler.h	/^    WRITE_CONFIG_BREAK_ALL = 0,$/;"	e	enum:__anon37
WRITE_CONFIG_MAX	target_handler.h	/^    WRITE_CONFIG_MAX \/\/ Insert before WRITE_EVENT_CONFIG_MAX$/;"	e	enum:__anon37
WRITE_CONFIG_MIN	target_handler.h	/^    WRITE_CONFIG_MIN = -1,$/;"	e	enum:__anon37
WRITE_CONFIG_REPORT_MBP	target_handler.h	/^    WRITE_CONFIG_REPORT_MBP,$/;"	e	enum:__anon37
WRITE_CONFIG_REPORT_PLTRST	target_handler.h	/^    WRITE_CONFIG_REPORT_PLTRST,$/;"	e	enum:__anon37
WRITE_CONFIG_REPORT_PRDY	target_handler.h	/^    WRITE_CONFIG_REPORT_PRDY,$/;"	e	enum:__anon37
WRITE_CONFIG_RESET_BREAK	target_handler.h	/^    WRITE_CONFIG_RESET_BREAK,$/;"	e	enum:__anon37
WRITE_EVENT_CONFIG	asd_common.h	214;"	d
WRITE_PINS	asd_common.h	226;"	d
WRITE_PIN_MASK	asd_common.h	229;"	d
WRITE_RESULT	tests/gpio_tests.c	/^ssize_t WRITE_RESULT = 0;$/;"	v
WRITE_SCAN_MAX	asd_common.h	269;"	d
WRITE_SCAN_MIN	asd_common.h	268;"	d
WriteConfig	target_handler.h	/^} WriteConfig;$/;"	t	typeref:enum:__anon37
WriteToSyslog	logging.c	/^static bool WriteToSyslog = false;$/;"	v	file:
X509_NAME_ONELINE_RESULT	tests/ext_tls_tests.c	/^char* X509_NAME_ONELINE_RESULT = "blahblahblah";$/;"	v
_ASD_MAIN_H_	asd_main.h	29;"	d
_I2C_HANDLER_H_	i2c_handler.h	29;"	d
_JTAG_HANDLER_H_	jtag_handler.h	29;"	d
_JTAG_TEST_H_	jtag_test.h	29;"	d
_LOGGING_H_	logging.h	29;"	d
_TARGET_CONTROL_HANDLER_H_	target_handler.h	29;"	d
_VPROBE_HANDLER_H_	vprobe_handler.h	29;"	d
__ASD_DBUS_HELPER_H_	dbus_helper.h	29;"	d
__AUTHENTICATION_H_	authenticate.h	34;"	d
__AUTH_NONE_H_	auth_none.h	34;"	d
__AUTH_PAM_H_	auth_pam.h	34;"	d
__CONFIG_H_	config.h	29;"	d
__EXT_NETWORK_H_	ext_network.h	34;"	d
__EXT_TCP_H	ext_tcp.h	33;"	d
__EXT_TLS_H	ext_tls.h	33;"	d
__GPIO_H_	gpio.h	29;"	d
__JTAG_DRV_H__	tests/jtag_drv.h	6;"	d
__JTAG_IOCTL_MAGIC	tests/jtag.h	232;"	d
__SESSION_H	session.h	34;"	d
__UAPI_LINUX_JTAG_H	tests/jtag.h	8;"	d
__u32	jtag_handler.h	/^typedef uint32_t __u32;$/;"	t
__u64	jtag_handler.h	/^typedef unsigned long long __u64;$/;"	t
__u8	jtag_handler.h	/^typedef uint8_t __u8;$/;"	t
__wrap_ASD_initialize_log_settings	tests/asd_main_tests.c	/^void __wrap_ASD_initialize_log_settings(ASD_LogLevel level,$/;"	f
__wrap_ASD_initialize_log_settings	tests/jtag_test_tests.c	/^void __wrap_ASD_initialize_log_settings(ASD_LogLevel level,$/;"	f
__wrap_ASD_log	tests/asd_main_tests.c	/^void __wrap_ASD_log(ASD_LogLevel level, ASD_LogStream stream,$/;"	f
__wrap_ASD_log	tests/asd_msg_tests.c	/^void __wrap_ASD_log(ASD_LogLevel level, ASD_LogStream stream,$/;"	f
__wrap_ASD_log	tests/auth_pam_tests.c	/^void __wrap_ASD_log(ASD_LogLevel level, ASD_LogStream stream,$/;"	f
__wrap_ASD_log	tests/authenticate_tests.c	/^void __wrap_ASD_log(ASD_LogLevel level, ASD_LogStream stream,$/;"	f
__wrap_ASD_log	tests/config_tests.c	/^void __wrap_ASD_log(ASD_LogLevel level, ASD_LogStream stream,$/;"	f
__wrap_ASD_log	tests/dbus_helper_tests.c	/^void __wrap_ASD_log(ASD_LogLevel level, ASD_LogStream stream,$/;"	f
__wrap_ASD_log	tests/ext_network_tests.c	/^void __wrap_ASD_log(ASD_LogLevel level, ASD_LogStream stream,$/;"	f
__wrap_ASD_log	tests/ext_tcp_tests.c	/^void __wrap_ASD_log(ASD_LogLevel level, ASD_LogStream stream,$/;"	f
__wrap_ASD_log	tests/ext_tls_tests.c	/^void __wrap_ASD_log(ASD_LogLevel level, ASD_LogStream stream,$/;"	f
__wrap_ASD_log	tests/gpio_tests.c	/^void __wrap_ASD_log(ASD_LogLevel level, ASD_LogStream stream,$/;"	f
__wrap_ASD_log	tests/i2c_handler_tests.c	/^void __wrap_ASD_log(ASD_LogLevel level, ASD_LogStream stream,$/;"	f
__wrap_ASD_log	tests/i2c_msg_builder_tests.c	/^void __wrap_ASD_log(ASD_LogLevel level, ASD_LogStream stream,$/;"	f
__wrap_ASD_log	tests/jtag_handler_tests.c	/^void __wrap_ASD_log(ASD_LogLevel level, ASD_LogStream stream,$/;"	f
__wrap_ASD_log	tests/jtag_test_tests.c	/^void __wrap_ASD_log(ASD_LogLevel level, ASD_LogStream stream,$/;"	f
__wrap_ASD_log	tests/mem_helper_test.c	/^void __wrap_ASD_log(ASD_LogLevel level, ASD_LogStream stream,$/;"	f
__wrap_ASD_log	tests/session_tests.c	/^void __wrap_ASD_log(ASD_LogLevel level, ASD_LogStream stream,$/;"	f
__wrap_ASD_log	tests/target_handler_tests.c	/^void __wrap_ASD_log(ASD_LogLevel level, ASD_LogStream stream,$/;"	f
__wrap_ASD_log_buffer	tests/asd_main_tests.c	/^void __wrap_ASD_log_buffer(ASD_LogLevel level, ASD_LogStream stream,$/;"	f
__wrap_ASD_log_buffer	tests/asd_msg_tests.c	/^void __wrap_ASD_log_buffer(ASD_LogLevel level, ASD_LogStream stream,$/;"	f
__wrap_ASD_log_buffer	tests/i2c_handler_tests.c	/^void __wrap_ASD_log_buffer(ASD_LogLevel level, ASD_LogStream stream,$/;"	f
__wrap_ASD_log_buffer	tests/jtag_handler_tests.c	/^void __wrap_ASD_log_buffer(ASD_LogLevel level, ASD_LogStream stream,$/;"	f
__wrap_ASD_log_buffer	tests/jtag_test_tests.c	/^void __wrap_ASD_log_buffer(ASD_LogLevel level, ASD_LogStream stream,$/;"	f
__wrap_ASD_log_buffer	tests/session_tests.c	/^void __wrap_ASD_log_buffer(ASD_LogLevel level, ASD_LogStream stream,$/;"	f
__wrap_ASD_log_shift	tests/jtag_handler_tests.c	/^void __wrap_ASD_log_shift(ASD_LogLevel level, ASD_LogStream stream,$/;"	f
__wrap_ASD_log_shift	tests/jtag_test_tests.c	/^void __wrap_ASD_log_shift(ASD_LogLevel level, ASD_LogStream stream,$/;"	f
__wrap_ERR_error_string_n	tests/ext_tls_tests.c	/^void __wrap_ERR_error_string_n(unsigned long e, char* buf, size_t len)$/;"	f
__wrap_ERR_get_error	tests/ext_tls_tests.c	/^unsigned long __wrap_ERR_get_error(void)$/;"	f
__wrap_ERR_print_errors_fp	tests/ext_tls_tests.c	/^void __wrap_ERR_print_errors_fp(FILE* fp)$/;"	f
__wrap_I2CHandler	tests/asd_msg_tests.c	/^I2C_Handler* __wrap_I2CHandler()$/;"	f
__wrap_JTAGHandler	tests/asd_msg_tests.c	/^JTAG_Handler* __wrap_JTAGHandler()$/;"	f
__wrap_JTAGHandler	tests/jtag_test_tests.c	/^JTAG_Handler* __wrap_JTAGHandler()$/;"	f
__wrap_JTAG_deinitialize	tests/asd_msg_tests.c	/^STATUS __wrap_JTAG_deinitialize(JTAG_Handler* state)$/;"	f
__wrap_JTAG_deinitialize	tests/jtag_test_tests.c	/^STATUS __wrap_JTAG_deinitialize(JTAG_Handler* state)$/;"	f
__wrap_JTAG_get_tap_state	tests/asd_msg_tests.c	/^STATUS __wrap_JTAG_get_tap_state(JTAG_Handler* state,$/;"	f
__wrap_JTAG_initialize	tests/asd_msg_tests.c	/^STATUS __wrap_JTAG_initialize(JTAG_Handler* state, bool sw_mode)$/;"	f
__wrap_JTAG_initialize	tests/jtag_test_tests.c	/^STATUS __wrap_JTAG_initialize(JTAG_Handler* state, bool sw_mode)$/;"	f
__wrap_JTAG_set_active_chain	tests/asd_msg_tests.c	/^STATUS __wrap_JTAG_set_active_chain(JTAG_Handler* state, scanChain chain)$/;"	f
__wrap_JTAG_set_jtag_tck	tests/asd_msg_tests.c	/^STATUS __wrap_JTAG_set_jtag_tck(JTAG_Handler* state, unsigned int tck)$/;"	f
__wrap_JTAG_set_jtag_tck	tests/jtag_test_tests.c	/^STATUS __wrap_JTAG_set_jtag_tck(JTAG_Handler* state, unsigned int tck)$/;"	f
__wrap_JTAG_set_padding	tests/asd_msg_tests.c	/^STATUS __wrap_JTAG_set_padding(JTAG_Handler* state, JTAGPaddingTypes padding,$/;"	f
__wrap_JTAG_set_tap_state	tests/asd_msg_tests.c	/^STATUS __wrap_JTAG_set_tap_state(JTAG_Handler* state,$/;"	f
__wrap_JTAG_set_tap_state	tests/jtag_test_tests.c	/^STATUS __wrap_JTAG_set_tap_state(JTAG_Handler* state,$/;"	f
__wrap_JTAG_shift	tests/asd_msg_tests.c	/^STATUS __wrap_JTAG_shift(JTAG_Handler* state, unsigned int number_of_bits,$/;"	f
__wrap_JTAG_shift	tests/jtag_test_tests.c	/^STATUS __wrap_JTAG_shift(JTAG_Handler* state, unsigned int number_of_bits,$/;"	f
__wrap_JTAG_tap_reset	tests/asd_msg_tests.c	/^STATUS __wrap_JTAG_tap_reset(JTAG_Handler* state)$/;"	f
__wrap_JTAG_wait_cycles	tests/asd_msg_tests.c	/^STATUS __wrap_JTAG_wait_cycles(JTAG_Handler* state,$/;"	f
__wrap_OPENSSL_init_ssl	tests/ext_tls_tests.c	/^int __wrap_OPENSSL_init_ssl(uint64_t opts,$/;"	f
__wrap_RAND_bytes	tests/auth_pam_tests.c	/^int __wrap_RAND_bytes(unsigned char* buf, int num)$/;"	f
__wrap_SSL_CTX_check_private_key	tests/ext_tls_tests.c	/^int __wrap_SSL_CTX_check_private_key(const SSL_CTX* ctx)$/;"	f
__wrap_SSL_CTX_free	tests/ext_tls_tests.c	/^void __wrap_SSL_CTX_free(SSL_CTX* ctx)$/;"	f
__wrap_SSL_CTX_new	tests/ext_tls_tests.c	/^SSL_CTX* __wrap_SSL_CTX_new(const SSL_METHOD* meth)$/;"	f
__wrap_SSL_CTX_set_cipher_list	tests/ext_tls_tests.c	/^int __wrap_SSL_CTX_set_cipher_list(SSL_CTX* ctx, const char* str)$/;"	f
__wrap_SSL_CTX_set_options	tests/ext_tls_tests.c	/^unsigned long __wrap_SSL_CTX_set_options(SSL_CTX* ctx, unsigned long op)$/;"	f
__wrap_SSL_CTX_use_PrivateKey_file	tests/ext_tls_tests.c	/^int __wrap_SSL_CTX_use_PrivateKey_file(SSL_CTX* ctx, const char* file, int type)$/;"	f
__wrap_SSL_CTX_use_certificate_file	tests/ext_tls_tests.c	/^int __wrap_SSL_CTX_use_certificate_file(SSL_CTX* ctx, const char* file,$/;"	f
__wrap_SSL_accept	tests/ext_tls_tests.c	/^int __wrap_SSL_accept(SSL* ssl)$/;"	f
__wrap_SSL_free	tests/ext_tls_tests.c	/^void __wrap_SSL_free(SSL* ssl)$/;"	f
__wrap_SSL_get_error	tests/ext_tls_tests.c	/^int __wrap_SSL_get_error(const SSL* s, int ret_code)$/;"	f
__wrap_SSL_get_peer_certificate	tests/ext_tls_tests.c	/^X509* __wrap_SSL_get_peer_certificate(const SSL* s)$/;"	f
__wrap_SSL_new	tests/ext_tls_tests.c	/^SSL* __wrap_SSL_new(SSL_CTX* ctx)$/;"	f
__wrap_SSL_pending	tests/ext_tls_tests.c	/^int __wrap_SSL_pending(const SSL* s)$/;"	f
__wrap_SSL_read	tests/ext_tls_tests.c	/^int __wrap_SSL_read(SSL* ssl, void* buf, int num)$/;"	f
__wrap_SSL_set_fd	tests/ext_tls_tests.c	/^int __wrap_SSL_set_fd(SSL* s, int fd)$/;"	f
__wrap_SSL_write	tests/ext_tls_tests.c	/^int __wrap_SSL_write(SSL* ssl, const void* buf, int num)$/;"	f
__wrap_TLS_server_method	tests/ext_tls_tests.c	/^const SSL_METHOD* __wrap_TLS_server_method(void)$/;"	f
__wrap_TargetHandler	tests/asd_msg_tests.c	/^Target_Control_Handle* __wrap_TargetHandler()$/;"	f
__wrap_X509_NAME_oneline	tests/ext_tls_tests.c	/^char* __wrap_X509_NAME_oneline(const X509_NAME* a, char* buf, int size)$/;"	f
__wrap_X509_free	tests/ext_tls_tests.c	/^void __wrap_X509_free(X509* a)$/;"	f
__wrap_X509_get_issuer_name	tests/ext_tls_tests.c	/^X509_NAME* __wrap_X509_get_issuer_name(const X509* a)$/;"	f
__wrap_X509_get_subject_name	tests/ext_tls_tests.c	/^X509_NAME* __wrap_X509_get_subject_name(const X509* a)$/;"	f
__wrap_accept	tests/ext_network_tests.c	/^int __wrap_accept(int sockfd, struct sockaddr* addr, socklen_t* addrlen)$/;"	f
__wrap_asd_msg_event	tests/asd_main_tests.c	/^STATUS __wrap_asd_msg_event(ASD_MSG* state, int fd)$/;"	f
__wrap_asd_msg_free	tests/asd_main_tests.c	/^STATUS __wrap_asd_msg_free(ASD_MSG* state)$/;"	f
__wrap_asd_msg_get_fds	tests/asd_main_tests.c	/^STATUS __wrap_asd_msg_get_fds(ASD_MSG* state, target_fdarr_t* fds, int* num_fds)$/;"	f
__wrap_asd_msg_init	tests/asd_main_tests.c	/^ASD_MSG* __wrap_asd_msg_init(SendFunctionPtr send_function,$/;"	f
__wrap_asd_msg_read	tests/asd_main_tests.c	/^STATUS __wrap_asd_msg_read(ASD_MSG* state, void* conn, bool* data_pending)$/;"	f
__wrap_auth_client_handshake	tests/asd_main_tests.c	/^STATUS __wrap_auth_client_handshake(extnet_conn_t* p_extconn)$/;"	f
__wrap_auth_init	tests/asd_main_tests.c	/^STATUS __wrap_auth_init(auth_hdlr_type_t e_type, void* p_hdlr_data)$/;"	f
__wrap_bind	tests/ext_network_tests.c	/^int __wrap_bind(int sockfd, const struct sockaddr* addr, socklen_t addrlen)$/;"	f
__wrap_calloc	tests/auth_pam_tests.c	/^void* __wrap_calloc(size_t num, size_t size)$/;"	f
__wrap_close	tests/asd_main_tests.c	/^void __wrap_close(int fd)$/;"	f
__wrap_close	tests/ext_network_tests.c	/^int __wrap_close(int fd)$/;"	f
__wrap_close	tests/gpio_tests.c	/^int __wrap_close(int fd)$/;"	f
__wrap_close	tests/i2c_handler_tests.c	/^int __wrap_close(int fd)$/;"	f
__wrap_dbus_deinitialize	tests/target_handler_tests.c	/^STATUS __wrap_dbus_deinitialize(Dbus_Handle* state)$/;"	f
__wrap_dbus_get_powerstate	tests/target_handler_tests.c	/^STATUS __wrap_dbus_get_powerstate(Dbus_Handle* state, int* value)$/;"	f
__wrap_dbus_helper	tests/target_handler_tests.c	/^Dbus_Handle* __wrap_dbus_helper()$/;"	f
__wrap_dbus_initialize	tests/target_handler_tests.c	/^STATUS __wrap_dbus_initialize(Dbus_Handle* state)$/;"	f
__wrap_dbus_power_off	tests/target_handler_tests.c	/^STATUS __wrap_dbus_power_off(Dbus_Handle* state)$/;"	f
__wrap_dbus_power_on	tests/target_handler_tests.c	/^STATUS __wrap_dbus_power_on(Dbus_Handle* state)$/;"	f
__wrap_dbus_power_reboot	tests/target_handler_tests.c	/^STATUS __wrap_dbus_power_reboot(Dbus_Handle* state)$/;"	f
__wrap_dbus_power_reset	tests/target_handler_tests.c	/^STATUS __wrap_dbus_power_reset(Dbus_Handle* state)$/;"	f
__wrap_dbus_power_toggle	tests/target_handler_tests.c	/^STATUS __wrap_dbus_power_toggle(Dbus_Handle* state)$/;"	f
__wrap_dbus_process_event	tests/target_handler_tests.c	/^STATUS __wrap_dbus_process_event(Dbus_Handle* state)$/;"	f
__wrap_eventfd	tests/asd_main_tests.c	/^int __wrap_eventfd(unsigned int initval, int flags)$/;"	f
__wrap_extnet_accept_connection	tests/asd_main_tests.c	/^STATUS __wrap_extnet_accept_connection(ExtNet* state, int ext_listen_sockfd,$/;"	f
__wrap_extnet_accept_connection	tests/session_tests.c	/^STATUS __wrap_extnet_accept_connection(ExtNet* state, int ext_listen_sockfd,$/;"	f
__wrap_extnet_close_client	tests/asd_main_tests.c	/^STATUS __wrap_extnet_close_client(extnet_conn_t* pconn)$/;"	f
__wrap_extnet_close_client	tests/ext_tls_tests.c	/^STATUS __wrap_extnet_close_client(ExtNet* state, extnet_conn_t* pconn)$/;"	f
__wrap_extnet_close_client	tests/session_tests.c	/^STATUS __wrap_extnet_close_client(ExtNet* state, extnet_conn_t* pconn)$/;"	f
__wrap_extnet_init	tests/asd_main_tests.c	/^ExtNet* __wrap_extnet_init(extnet_hdlr_type_t eType, void* p_hdlr_data,$/;"	f
__wrap_extnet_init_client	tests/asd_main_tests.c	/^STATUS __wrap_extnet_init_client(extnet_conn_t* pconn)$/;"	f
__wrap_extnet_init_client	tests/session_tests.c	/^STATUS __wrap_extnet_init_client(ExtNet* state, extnet_conn_t* pconn)$/;"	f
__wrap_extnet_is_client_closed	tests/asd_main_tests.c	/^bool __wrap_extnet_is_client_closed(extnet_conn_t* pconn)$/;"	f
__wrap_extnet_is_client_closed	tests/session_tests.c	/^bool __wrap_extnet_is_client_closed(ExtNet* state, extnet_conn_t* pconn)$/;"	f
__wrap_extnet_open_external_socket	tests/asd_main_tests.c	/^STATUS __wrap_extnet_open_external_socket(ExtNet* state, const char* cp_bind_if,$/;"	f
__wrap_extnet_open_external_socket	tests/session_tests.c	/^STATUS __wrap_extnet_open_external_socket(ExtNet* state, const char* cp_bind_if,$/;"	f
__wrap_extnet_recv	tests/asd_main_tests.c	/^int __wrap_extnet_recv(ExtNet* state, extnet_conn_t* pconn, void* pv_buf,$/;"	f
__wrap_extnet_recv	tests/auth_pam_tests.c	/^int __wrap_extnet_recv(ExtNet* state, extnet_conn_t* pconn, void* pv_buf,$/;"	f
__wrap_extnet_send	tests/asd_main_tests.c	/^int __wrap_extnet_send(ExtNet* state, extnet_conn_t* pconn, void* pv_buf,$/;"	f
__wrap_extnet_send	tests/auth_pam_tests.c	/^int __wrap_extnet_send(ExtNet* state, extnet_conn_t* pconn, void* pv_buf,$/;"	f
__wrap_flock	tests/asd_msg_tests.c	/^int __wrap_flock(int fd, int op)$/;"	f
__wrap_fopen	tests/asd_msg_tests.c	/^FILE* __wrap_fopen(const char* pathname, const char* flags)$/;"	f
__wrap_free	tests/asd_main_tests.c	/^void __wrap_free(void* ptr)$/;"	f
__wrap_getpeername	tests/asd_main_tests.c	/^int __wrap_getpeername(int fd, __SOCKADDR_ARG addr, socklen_t* addrlen)$/;"	f
__wrap_gpio_export	tests/target_handler_tests.c	/^STATUS __wrap_gpio_export(int gpio, int* fd)$/;"	f
__wrap_gpio_get_value	tests/target_handler_tests.c	/^STATUS __wrap_gpio_get_value(int fd, int* value)$/;"	f
__wrap_gpio_set_active_low	tests/target_handler_tests.c	/^STATUS __wrap_gpio_set_active_low(int gpio, bool active_low)$/;"	f
__wrap_gpio_set_direction	tests/target_handler_tests.c	/^STATUS __wrap_gpio_set_direction(int gpio, GPIO_DIRECTION direction)$/;"	f
__wrap_gpio_set_edge	tests/target_handler_tests.c	/^STATUS __wrap_gpio_set_edge(int gpio, GPIO_EDGE edge)$/;"	f
__wrap_gpio_set_value	tests/target_handler_tests.c	/^STATUS __wrap_gpio_set_value(int fd, int value)$/;"	f
__wrap_gpio_unexport	tests/target_handler_tests.c	/^STATUS __wrap_gpio_unexport(int gpio)$/;"	f
__wrap_gpiod_chip_close	tests/target_handler_tests.c	/^void __wrap_gpiod_chip_close(struct gpiod_chip* chip)$/;"	f
__wrap_gpiod_chip_get_line	tests/target_handler_tests.c	/^struct gpiod_line* __wrap_gpiod_chip_get_line(struct gpiod_chip* chip,$/;"	f
__wrap_gpiod_chip_open	tests/target_handler_tests.c	/^struct gpiod_chip* __wrap_gpiod_chip_open(const char* path)$/;"	f
__wrap_gpiod_ctxless_find_line	tests/target_handler_tests.c	/^int __wrap_gpiod_ctxless_find_line(const char* name, char* chipname,$/;"	f
__wrap_gpiod_line_event_get_fd	tests/target_handler_tests.c	/^int __wrap_gpiod_line_event_get_fd(struct gpiod_line* line)$/;"	f
__wrap_gpiod_line_event_read	tests/target_handler_tests.c	/^int __wrap_gpiod_line_event_read(struct gpiod_line* line,$/;"	f
__wrap_gpiod_line_get_value	tests/target_handler_tests.c	/^int __wrap_gpiod_line_get_value(struct gpiod_line* line)$/;"	f
__wrap_gpiod_line_request	tests/target_handler_tests.c	/^int __wrap_gpiod_line_request(struct gpiod_line* line,$/;"	f
__wrap_gpiod_line_set_value	tests/target_handler_tests.c	/^int __wrap_gpiod_line_set_value(struct gpiod_line* line, int value)$/;"	f
__wrap_i2c_bus_select	tests/asd_msg_tests.c	/^STATUS __wrap_i2c_bus_select(I2C_Handler* state, uint8_t bus)$/;"	f
__wrap_i2c_deinitialize	tests/asd_msg_tests.c	/^STATUS __wrap_i2c_deinitialize(I2C_Handler* state)$/;"	f
__wrap_i2c_initialize	tests/asd_msg_tests.c	/^STATUS __wrap_i2c_initialize(I2C_Handler* state)$/;"	f
__wrap_i2c_msg_get_asd_i2c_msg	tests/asd_msg_tests.c	/^STATUS __wrap_i2c_msg_get_asd_i2c_msg(I2C_Msg_Builder* state, u_int32_t index,$/;"	f
__wrap_i2c_msg_get_count	tests/asd_msg_tests.c	/^STATUS __wrap_i2c_msg_get_count(I2C_Msg_Builder* state, u_int32_t* count)$/;"	f
__wrap_i2c_msg_reset	tests/asd_msg_tests.c	/^STATUS __wrap_i2c_msg_reset(I2C_Msg_Builder* state)$/;"	f
__wrap_i2c_read_write	tests/asd_msg_tests.c	/^STATUS __wrap_i2c_read_write(I2C_Handler* state, void* msg_set)$/;"	f
__wrap_i2c_set_sclk	tests/asd_msg_tests.c	/^STATUS __wrap_i2c_set_sclk(I2C_Handler* state, uint16_t sclk)$/;"	f
__wrap_ioctl	tests/i2c_handler_tests.c	/^int __wrap_ioctl(int fd, unsigned long request, ...)$/;"	f
__wrap_ioctl	tests/jtag_handler_tests.c	/^int __wrap_ioctl(int fd, unsigned long request, ...)$/;"	f
__wrap_listen	tests/ext_network_tests.c	/^int __wrap_listen(int sockfd, int backlog)$/;"	f
__wrap_lseek	tests/gpio_tests.c	/^off_t __wrap_lseek(int fd, off_t offset, int whence)$/;"	f
__wrap_lseek	tests/target_handler_tests.c	/^int __wrap_lseek(int fd, off_t offset, int whence)$/;"	f
__wrap_malloc	tests/asd_main_tests.c	/^void* __wrap_malloc(size_t size)$/;"	f
__wrap_malloc	tests/asd_msg_tests.c	/^void* __wrap_malloc(size_t size)$/;"	f
__wrap_malloc	tests/auth_pam_tests.c	/^void* __wrap_malloc(size_t size)$/;"	f
__wrap_malloc	tests/dbus_helper_tests.c	/^void* __wrap_malloc(size_t size)$/;"	f
__wrap_malloc	tests/ext_network_tests.c	/^void* __wrap_malloc(size_t size)$/;"	f
__wrap_malloc	tests/i2c_handler_tests.c	/^void* __wrap_malloc(size_t size)$/;"	f
__wrap_malloc	tests/i2c_msg_builder_tests.c	/^void* __wrap_malloc(size_t size)$/;"	f
__wrap_malloc	tests/jtag_handler_tests.c	/^void* __wrap_malloc(size_t size)$/;"	f
__wrap_malloc	tests/logging_tests.c	/^void* __wrap_malloc(size_t size)$/;"	f
__wrap_malloc	tests/session_tests.c	/^void* __wrap_malloc(size_t size)$/;"	f
__wrap_malloc	tests/target_handler_tests.c	/^void* __wrap_malloc(size_t size)$/;"	f
__wrap_memcpy_safe	tests/asd_main_tests.c	/^int __wrap_memcpy_safe(void* dest, size_t destsize, const void* src,$/;"	f
__wrap_memcpy_safe	tests/asd_msg_tests.c	/^int __wrap_memcpy_safe(void* dest, size_t destsize, const void* src,$/;"	f
__wrap_memcpy_safe	tests/jtag_handler_tests.c	/^int __wrap_memcpy_safe(void* dest, size_t destsize, const void* src,$/;"	f
__wrap_memcpy_safe	tests/jtag_test_tests.c	/^int __wrap_memcpy_safe(void* dest, size_t destsize, const void* src,$/;"	f
__wrap_memcpy_safe	tests/session_tests.c	/^int __wrap_memcpy_safe(void* dest, size_t destsize, const void* src,$/;"	f
__wrap_open	tests/gpio_tests.c	/^int __wrap_open(const char* pathname, int flags, int mode)$/;"	f
__wrap_open	tests/i2c_handler_tests.c	/^int __wrap_open(const char* pathname, int flags, int mode)$/;"	f
__wrap_open	tests/jtag_handler_tests.c	/^int __wrap_open(const char* pathname, int flags, int mode)$/;"	f
__wrap_open	tests/target_handler_tests.c	/^int __wrap_open(const char* pathname, int flags, int mode)$/;"	f
__wrap_pam_authenticate	tests/auth_pam_tests.c	/^int __wrap_pam_authenticate(pam_handle_t* pamh, int flags)$/;"	f
__wrap_pam_end	tests/auth_pam_tests.c	/^int __wrap_pam_end(pam_handle_t* pamh, int pam_status)$/;"	f
__wrap_pam_start	tests/auth_pam_tests.c	/^int __wrap_pam_start(const char* service_name, const char* user,$/;"	f
__wrap_poll	tests/asd_main_tests.c	/^int __wrap_poll(struct pollfd* fds, nfds_t nfds, int timeout)$/;"	f
__wrap_poll	tests/target_handler_tests.c	/^int __wrap_poll(struct pollfd* fds, nfds_t nfds, int timeout)$/;"	f
__wrap_read	tests/asd_main_tests.c	/^ssize_t __wrap_read(int fd, void* buf, size_t count)$/;"	f
__wrap_read	tests/gpio_tests.c	/^ssize_t __wrap_read(int fd, void* buf, size_t size)$/;"	f
__wrap_read	tests/target_handler_tests.c	/^ssize_t __wrap_read(int fildes, void* buf, size_t nbyte)$/;"	f
__wrap_recv	tests/ext_tcp_tests.c	/^ssize_t __wrap_recv(int socket, void* buffer, size_t length, int flags)$/;"	f
__wrap_sd_bus_add_match	tests/dbus_helper_tests.c	/^int __wrap_sd_bus_add_match(sd_bus* bus, sd_bus_slot** slot, const char* match,$/;"	f
__wrap_sd_bus_call_async	tests/dbus_helper_tests.c	/^int __wrap_sd_bus_call_async(sd_bus* bus, sd_bus_slot** slot, sd_bus_message* m,$/;"	f
__wrap_sd_bus_error_free	tests/dbus_helper_tests.c	/^void __wrap_sd_bus_error_free(sd_bus_error* error)$/;"	f
__wrap_sd_bus_error_set_errno	tests/dbus_helper_tests.c	/^int __wrap_sd_bus_error_set_errno(sd_bus_error* e, int error)$/;"	f
__wrap_sd_bus_get_fd	tests/dbus_helper_tests.c	/^int __wrap_sd_bus_get_fd(sd_bus* bus)$/;"	f
__wrap_sd_bus_get_property	tests/dbus_helper_tests.c	/^int __wrap_sd_bus_get_property(sd_bus* bus, const char* destination,$/;"	f
__wrap_sd_bus_message_append	tests/dbus_helper_tests.c	/^int __wrap_sd_bus_message_append(sd_bus* bus, const char* types, ...)$/;"	f
__wrap_sd_bus_message_close_container	tests/dbus_helper_tests.c	/^int __wrap_sd_bus_message_close_container(sd_bus_message* m)$/;"	f
__wrap_sd_bus_message_enter_container	tests/dbus_helper_tests.c	/^int __wrap_sd_bus_message_enter_container(sd_bus_message* m, const char* types,$/;"	f
__wrap_sd_bus_message_exit_container	tests/dbus_helper_tests.c	/^int __wrap_sd_bus_message_exit_container(sd_bus_message* m)$/;"	f
__wrap_sd_bus_message_new_method_call	tests/dbus_helper_tests.c	/^int __wrap_sd_bus_message_new_method_call(sd_bus* bus, sd_bus_message** m,$/;"	f
__wrap_sd_bus_message_open_container	tests/dbus_helper_tests.c	/^int __wrap_sd_bus_message_open_container(sd_bus* bus, const char type,$/;"	f
__wrap_sd_bus_message_read	tests/dbus_helper_tests.c	/^int __wrap_sd_bus_message_read(sd_bus_message* m, const char* types,$/;"	f
__wrap_sd_bus_message_skip	tests/dbus_helper_tests.c	/^int __wrap_sd_bus_message_skip(sd_bus_message* m, const char* types)$/;"	f
__wrap_sd_bus_message_unref	tests/dbus_helper_tests.c	/^sd_bus_message* __wrap_sd_bus_message_unref(sd_bus_message* m)$/;"	f
__wrap_sd_bus_open_system	tests/dbus_helper_tests.c	/^int __wrap_sd_bus_open_system(sd_bus** bus)$/;"	f
__wrap_sd_bus_process	tests/dbus_helper_tests.c	/^int __wrap_sd_bus_process(sd_bus* bus, sd_bus_message* m)$/;"	f
__wrap_sd_bus_unref	tests/dbus_helper_tests.c	/^sd_bus* __wrap_sd_bus_unref(sd_bus* bus)$/;"	f
__wrap_send	tests/ext_tcp_tests.c	/^ssize_t __wrap_send(int socket, void* buffer, size_t length, int flags)$/;"	f
__wrap_session_already_authenticated	tests/asd_main_tests.c	/^STATUS __wrap_session_already_authenticated(Session* state,$/;"	f
__wrap_session_auth_complete	tests/asd_main_tests.c	/^STATUS __wrap_session_auth_complete(Session* state, extnet_conn_t* p_extconn)$/;"	f
__wrap_session_close	tests/asd_main_tests.c	/^STATUS __wrap_session_close(Session* state, extnet_conn_t* p_extconn)$/;"	f
__wrap_session_close_all	tests/asd_main_tests.c	/^void __wrap_session_close_all(Session* state)$/;"	f
__wrap_session_close_expired_unauth	tests/asd_main_tests.c	/^void __wrap_session_close_expired_unauth(Session* state)$/;"	f
__wrap_session_get_authenticated_conn	tests/asd_main_tests.c	/^STATUS __wrap_session_get_authenticated_conn(Session* state,$/;"	f
__wrap_session_get_authenticated_conn	tests/auth_pam_tests.c	/^STATUS __wrap_session_get_authenticated_conn(Session* state,$/;"	f
__wrap_session_get_data_pending	tests/asd_main_tests.c	/^STATUS __wrap_session_get_data_pending(Session* state, extnet_conn_t* p_extconn,$/;"	f
__wrap_session_getfds	tests/asd_main_tests.c	/^STATUS __wrap_session_getfds(Session* state, session_fdarr_t* na_fds,$/;"	f
__wrap_session_init	tests/asd_main_tests.c	/^Session* __wrap_session_init(ExtNet* extnet)$/;"	f
__wrap_session_lookup_conn	tests/asd_main_tests.c	/^extnet_conn_t* __wrap_session_lookup_conn(Session* state, int fd)$/;"	f
__wrap_session_open	tests/asd_main_tests.c	/^STATUS __wrap_session_open(Session* state, extnet_conn_t* p_extconn)$/;"	f
__wrap_session_set_data_pending	tests/asd_main_tests.c	/^STATUS __wrap_session_set_data_pending(Session* state, extnet_conn_t* p_extconn,$/;"	f
__wrap_set_config_defaults	tests/asd_main_tests.c	/^STATUS __wrap_set_config_defaults(config* config, const i2c_options* i2c)$/;"	f
__wrap_setsockopt	tests/ext_network_tests.c	/^int __wrap_setsockopt(int sockfd, int level, int optname, const void* optval,$/;"	f
__wrap_setsockopt	tests/ext_tls_tests.c	/^int __wrap_setsockopt(int sockfd, int level, int optname, const void* optval,$/;"	f
__wrap_signal	tests/ext_network_tests.c	/^sighandler_t __wrap_signal(int signum, sighandler_t handler)$/;"	f
__wrap_socket	tests/ext_network_tests.c	/^int __wrap_socket(int domain, int type, int protocol)$/;"	f
__wrap_strcpy_safe	tests/auth_pam_tests.c	/^int __wrap_strcpy_safe(char* dest, size_t destsize, const char* src,$/;"	f
__wrap_strtolevel	tests/asd_main_tests.c	/^bool __wrap_strtolevel(char* input, ASD_LogLevel* output)$/;"	f
__wrap_strtolevel	tests/jtag_test_tests.c	/^bool __wrap_strtolevel(char* input, ASD_LogLevel* output)$/;"	f
__wrap_strtostreams	tests/asd_main_tests.c	/^bool __wrap_strtostreams(char* input, ASD_LogStream* output)$/;"	f
__wrap_strtostreams	tests/jtag_test_tests.c	/^bool __wrap_strtostreams(char* input, ASD_LogStream* output)$/;"	f
__wrap_syslog	tests/logging_tests.c	/^void __wrap_syslog(int priority, const char* format, ...)$/;"	f
__wrap_target_deinitialize	tests/asd_msg_tests.c	/^STATUS __wrap_target_deinitialize(Target_Control_Handle* state)$/;"	f
__wrap_target_event	tests/asd_msg_tests.c	/^STATUS __wrap_target_event(Target_Control_Handle* state, struct pollfd poll_fd,$/;"	f
__wrap_target_get_fds	tests/asd_msg_tests.c	/^STATUS __wrap_target_get_fds(Target_Control_Handle* state, target_fdarr_t* fds,$/;"	f
__wrap_target_initialize	tests/asd_msg_tests.c	/^STATUS __wrap_target_initialize(Target_Control_Handle* state)$/;"	f
__wrap_target_read	tests/asd_msg_tests.c	/^STATUS __wrap_target_read(Target_Control_Handle* state,$/;"	f
__wrap_target_wait_PRDY	tests/asd_msg_tests.c	/^STATUS __wrap_target_wait_PRDY(Target_Control_Handle* state,$/;"	f
__wrap_target_wait_sync	tests/asd_msg_tests.c	/^STATUS __wrap_target_wait_sync(Target_Control_Handle* state,$/;"	f
__wrap_target_write	tests/asd_msg_tests.c	/^STATUS __wrap_target_write(Target_Control_Handle* state,$/;"	f
__wrap_target_write_event_config	tests/asd_msg_tests.c	/^STATUS __wrap_target_write_event_config(Target_Control_Handle* state,$/;"	f
__wrap_usleep	tests/target_handler_tests.c	/^int __wrap_usleep(__useconds_t useconds)$/;"	f
__wrap_vfprintf	tests/logging_tests.c	/^int __wrap_vfprintf(FILE* const file, const char* format, va_list ap)$/;"	f
__wrap_vsyslog	tests/logging_tests.c	/^void __wrap_vsyslog(int priority, const char* format, ...)$/;"	f
__wrap_write	tests/gpio_tests.c	/^ssize_t __wrap_write(int fd, const void* buf, size_t size)$/;"	f
_gpiod_line_data	tests/target_handler_tests.c	/^typedef struct _gpiod_line_data$/;"	s	file:
acceptFailType	tests/ext_tls_tests.c	/^} acceptFailType;$/;"	t	typeref:enum:__anon40	file:
active_chain	jtag_handler.h	/^    JTAG_Chain_State* active_chain;$/;"	m	struct:JTAG_Handler
active_low	target_handler.h	/^    bool active_low;$/;"	m	struct:Target_Control_GPIO
active_state	tests/target_handler_tests.c	/^    int active_state;$/;"	m	struct:gpiod_line	file:
address	asd_common.h	/^    uint8_t address;$/;"	m	struct:asd_i2c_msg
allowed_buses	config.h	/^    bool allowed_buses[MAX_I2C_BUSES];$/;"	m	struct:i2c_config
args	asd_main.h	/^    asd_args args;$/;"	m	struct:asd_state
arr_size	target_handler.h	/^    int arr_size;$/;"	m	struct:data_json_map
asd_args	asd_main.h	/^typedef struct asd_args$/;"	s
asd_args	asd_main.h	/^} asd_args;$/;"	t	typeref:struct:asd_args
asd_cfg	asd_msg.h	/^    config* asd_cfg;$/;"	m	struct:ASD_MSG
asd_config	tests/asd_msg_tests.c	/^config asd_config;$/;"	v
asd_i2c_msg	asd_common.h	/^typedef struct asd_i2c_msg$/;"	s
asd_i2c_msg	asd_common.h	/^} asd_i2c_msg;$/;"	t	typeref:struct:asd_i2c_msg
asd_log_level	logging.c	/^ASD_LogLevel asd_log_level = ASD_LogLevel_Error;$/;"	v
asd_log_streams	logging.c	/^ASD_LogStream asd_log_streams = ASD_LogStream_All;$/;"	v
asd_main	asd_main.c	/^int asd_main(int argc, char** argv)$/;"	f
asd_main_init_asd_state_failure_test	tests/asd_main_tests.c	/^void asd_main_init_asd_state_failure_test(void** state)$/;"	f
asd_main_process_command_line_failure_test	tests/asd_main_tests.c	/^void asd_main_process_command_line_failure_test(void** state)$/;"	f
asd_main_process_command_line_request_processing_failure_test	tests/asd_main_tests.c	/^void asd_main_process_command_line_request_processing_failure_test(void** state)$/;"	f
asd_message	asd_common.h	/^struct asd_message$/;"	s
asd_msg	asd_main.h	/^    ASD_MSG* asd_msg;$/;"	m	struct:asd_state
asd_msg_event	asd_msg.c	/^STATUS asd_msg_event(ASD_MSG* state, struct pollfd poll_fd)$/;"	f
asd_msg_event_ASD_EVENT_PRDY_EVENT_test	tests/asd_msg_tests.c	/^void asd_msg_event_ASD_EVENT_PRDY_EVENT_test(void** state)$/;"	f
asd_msg_event_ASD_EVENT_XDP_PRESENT_test	tests/asd_msg_tests.c	/^void asd_msg_event_ASD_EVENT_XDP_PRESENT_test(void** state)$/;"	f
asd_msg_event_invalid_params_test	tests/asd_msg_tests.c	/^void asd_msg_event_invalid_params_test(void** state)$/;"	f
asd_msg_event_send_failed_test	tests/asd_msg_tests.c	/^void asd_msg_event_send_failed_test(void** state)$/;"	f
asd_msg_event_target_event_error_test	tests/asd_msg_tests.c	/^void asd_msg_event_target_event_error_test(void** state)$/;"	f
asd_msg_free	asd_msg.c	/^STATUS asd_msg_free(ASD_MSG* state)$/;"	f
asd_msg_free_invalid_param_test	tests/asd_msg_tests.c	/^void asd_msg_free_invalid_param_test(void** state)$/;"	f
asd_msg_free_jtag_deinit_fail_test	tests/asd_msg_tests.c	/^void asd_msg_free_jtag_deinit_fail_test(void** state)$/;"	f
asd_msg_free_target_deinit_fail_test	tests/asd_msg_tests.c	/^void asd_msg_free_target_deinit_fail_test(void** state)$/;"	f
asd_msg_free_test	tests/asd_msg_tests.c	/^void asd_msg_free_test(void** state)$/;"	f
asd_msg_get_fds	asd_msg.c	/^STATUS asd_msg_get_fds(ASD_MSG* state, target_fdarr_t* fds, int* num_fds)$/;"	f
asd_msg_get_fds_failure_test	tests/asd_msg_tests.c	/^void asd_msg_get_fds_failure_test(void** state)$/;"	f
asd_msg_get_fds_invalid_params_test	tests/asd_msg_tests.c	/^void asd_msg_get_fds_invalid_params_test(void** state)$/;"	f
asd_msg_get_fds_test	tests/asd_msg_tests.c	/^void asd_msg_get_fds_test(void** state)$/;"	f
asd_msg_init	asd_msg.c	/^ASD_MSG* asd_msg_init(SendFunctionPtr send_function,$/;"	f
asd_msg_init_invalid_param_test	tests/asd_msg_tests.c	/^void asd_msg_init_invalid_param_test(void** state)$/;"	f
asd_msg_init_malloc_failure_test	tests/asd_msg_tests.c	/^void asd_msg_init_malloc_failure_test(void** state)$/;"	f
asd_msg_init_only_one_instance_test	tests/asd_msg_tests.c	/^void asd_msg_init_only_one_instance_test(void** state)$/;"	f
asd_msg_init_test	tests/asd_msg_tests.c	/^void asd_msg_init_test(void** state)$/;"	f
asd_msg_jtag_init_failed_test	tests/asd_msg_tests.c	/^void asd_msg_jtag_init_failed_test(void** state)$/;"	f
asd_msg_on_msg_recv	asd_msg.c	/^STATUS asd_msg_on_msg_recv(ASD_MSG* state)$/;"	f
asd_msg_on_msg_recv_agent_control_downstream_version_test	tests/asd_msg_tests.c	/^void asd_msg_on_msg_recv_agent_control_downstream_version_test(void** state)$/;"	f
asd_msg_on_msg_recv_agent_control_gpio_config_test	tests/asd_msg_tests.c	/^void asd_msg_on_msg_recv_agent_control_gpio_config_test(void** state)$/;"	f
asd_msg_on_msg_recv_agent_control_jtag_driver_hw_mode_test	tests/asd_msg_tests.c	/^void asd_msg_on_msg_recv_agent_control_jtag_driver_hw_mode_test(void** state)$/;"	f
asd_msg_on_msg_recv_agent_control_jtag_driver_sw_mode_test	tests/asd_msg_tests.c	/^void asd_msg_on_msg_recv_agent_control_jtag_driver_sw_mode_test(void** state)$/;"	f
asd_msg_on_msg_recv_agent_control_jtag_multi_chain_mode_test	tests/asd_msg_tests.c	/^void asd_msg_on_msg_recv_agent_control_jtag_multi_chain_mode_test(void** state)$/;"	f
asd_msg_on_msg_recv_agent_control_jtag_single_chain_mode_test	tests/asd_msg_tests.c	/^void asd_msg_on_msg_recv_agent_control_jtag_single_chain_mode_test(void** state)$/;"	f
asd_msg_on_msg_recv_agent_control_logging_config_test	tests/asd_msg_tests.c	/^void asd_msg_on_msg_recv_agent_control_logging_config_test(void** state)$/;"	f
asd_msg_on_msg_recv_agent_control_max_data_size_test	tests/asd_msg_tests.c	/^void asd_msg_on_msg_recv_agent_control_max_data_size_test(void** state)$/;"	f
asd_msg_on_msg_recv_agent_control_memcpy_safe_failure1	tests/asd_msg_tests.c	/^void asd_msg_on_msg_recv_agent_control_memcpy_safe_failure1(void** state)$/;"	f
asd_msg_on_msg_recv_agent_control_memcpy_safe_failure2	tests/asd_msg_tests.c	/^void asd_msg_on_msg_recv_agent_control_memcpy_safe_failure2(void** state)$/;"	f
asd_msg_on_msg_recv_agent_control_memcpy_safe_failure3	tests/asd_msg_tests.c	/^void asd_msg_on_msg_recv_agent_control_memcpy_safe_failure3(void** state)$/;"	f
asd_msg_on_msg_recv_agent_control_memcpy_safe_failure4	tests/asd_msg_tests.c	/^void asd_msg_on_msg_recv_agent_control_memcpy_safe_failure4(void** state)$/;"	f
asd_msg_on_msg_recv_agent_control_memcpy_safe_failure5	tests/asd_msg_tests.c	/^void asd_msg_on_msg_recv_agent_control_memcpy_safe_failure5(void** state)$/;"	f
asd_msg_on_msg_recv_agent_control_missing_byte_failure_test	tests/asd_msg_tests.c	/^void asd_msg_on_msg_recv_agent_control_missing_byte_failure_test(void** state)$/;"	f
asd_msg_on_msg_recv_agent_control_num_messages_test	tests/asd_msg_tests.c	/^void asd_msg_on_msg_recv_agent_control_num_messages_test(void** state)$/;"	f
asd_msg_on_msg_recv_agent_control_result_send_failed_test	tests/asd_msg_tests.c	/^void asd_msg_on_msg_recv_agent_control_result_send_failed_test(void** state)$/;"	f
asd_msg_on_msg_recv_agent_control_supported_i2c_buses_i2c_disabled_test	tests/asd_msg_tests.c	/^void asd_msg_on_msg_recv_agent_control_supported_i2c_buses_i2c_disabled_test($/;"	f
asd_msg_on_msg_recv_agent_control_supported_i2c_buses_test	tests/asd_msg_tests.c	/^void asd_msg_on_msg_recv_agent_control_supported_i2c_buses_test(void** state)$/;"	f
asd_msg_on_msg_recv_agent_control_supported_jtag_chains_test	tests/asd_msg_tests.c	/^void asd_msg_on_msg_recv_agent_control_supported_jtag_chains_test(void** state)$/;"	f
asd_msg_on_msg_recv_agent_control_unsupported_command_test	tests/asd_msg_tests.c	/^void asd_msg_on_msg_recv_agent_control_unsupported_command_test(void** state)$/;"	f
asd_msg_on_msg_recv_chain_select_invalid_test	tests/asd_msg_tests.c	/^void asd_msg_on_msg_recv_chain_select_invalid_test(void** state)$/;"	f
asd_msg_on_msg_recv_chain_select_set_active_chain_failed_test	tests/asd_msg_tests.c	/^void asd_msg_on_msg_recv_chain_select_set_active_chain_failed_test(void** state)$/;"	f
asd_msg_on_msg_recv_chain_select_set_multichain_null_data_test	tests/asd_msg_tests.c	/^void asd_msg_on_msg_recv_chain_select_set_multichain_null_data_test($/;"	f
asd_msg_on_msg_recv_chain_select_set_multichain_unsuported	tests/asd_msg_tests.c	/^void asd_msg_on_msg_recv_chain_select_set_multichain_unsuported(void** state)$/;"	f
asd_msg_on_msg_recv_chain_select_target_write_failed_test	tests/asd_msg_tests.c	/^void asd_msg_on_msg_recv_chain_select_target_write_failed_test(void** state)$/;"	f
asd_msg_on_msg_recv_chain_select_test	tests/asd_msg_tests.c	/^void asd_msg_on_msg_recv_chain_select_test(void** state)$/;"	f
asd_msg_on_msg_recv_clear_timeout_test	tests/asd_msg_tests.c	/^void asd_msg_on_msg_recv_clear_timeout_test(void** state)$/;"	f
asd_msg_on_msg_recv_encrypted_check_test	tests/asd_msg_tests.c	/^void asd_msg_on_msg_recv_encrypted_check_test(void** state)$/;"	f
asd_msg_on_msg_recv_i2c_init_failed_test	tests/asd_msg_tests.c	/^void asd_msg_on_msg_recv_i2c_init_failed_test(void** state)$/;"	f
asd_msg_on_msg_recv_invalid_param_test	tests/asd_msg_tests.c	/^void asd_msg_on_msg_recv_invalid_param_test(void** state)$/;"	f
asd_msg_on_msg_recv_jtag_init_failed_test	tests/asd_msg_tests.c	/^void asd_msg_on_msg_recv_jtag_init_failed_test(void** state)$/;"	f
asd_msg_on_msg_recv_jtag_init_test	tests/asd_msg_tests.c	/^void asd_msg_on_msg_recv_jtag_init_test(void** state)$/;"	f
asd_msg_on_msg_recv_process_i2c_messages_failed_test	tests/asd_msg_tests.c	/^void asd_msg_on_msg_recv_process_i2c_messages_failed_test(void** state)$/;"	f
asd_msg_on_msg_recv_process_jtag_failed_test	tests/asd_msg_tests.c	/^void asd_msg_on_msg_recv_process_jtag_failed_test(void** state)$/;"	f
asd_msg_on_msg_recv_process_msg_i2c_msg_failed_unlock_test	tests/asd_msg_tests.c	/^void asd_msg_on_msg_recv_process_msg_i2c_msg_failed_unlock_test(void** state)$/;"	f
asd_msg_on_msg_recv_process_msg_process_i2c_msg_failed_lock_test	tests/asd_msg_tests.c	/^void asd_msg_on_msg_recv_process_msg_process_i2c_msg_failed_lock_test($/;"	f
asd_msg_on_msg_recv_process_msg_process_i2c_msg_failed_test	tests/asd_msg_tests.c	/^void asd_msg_on_msg_recv_process_msg_process_i2c_msg_failed_test(void** state)$/;"	f
asd_msg_on_msg_recv_read_scan_determine_shift_end_state_failed_test	tests/asd_msg_tests.c	/^void asd_msg_on_msg_recv_read_scan_determine_shift_end_state_failed_test($/;"	f
asd_msg_on_msg_recv_read_scan_jtag_shift_64_bits_test	tests/asd_msg_tests.c	/^void asd_msg_on_msg_recv_read_scan_jtag_shift_64_bits_test(void** state)$/;"	f
asd_msg_on_msg_recv_read_scan_jtag_shift_failed_test	tests/asd_msg_tests.c	/^void asd_msg_on_msg_recv_read_scan_jtag_shift_failed_test(void** state)$/;"	f
asd_msg_on_msg_recv_read_scan_jtag_shift_test	tests/asd_msg_tests.c	/^void asd_msg_on_msg_recv_read_scan_jtag_shift_test(void** state)$/;"	f
asd_msg_on_msg_recv_read_scan_response_buffer_full_test	tests/asd_msg_tests.c	/^void asd_msg_on_msg_recv_read_scan_response_buffer_full_test(void** state)$/;"	f
asd_msg_on_msg_recv_read_status_no_data_test	tests/asd_msg_tests.c	/^void asd_msg_on_msg_recv_read_status_no_data_test(void** state)$/;"	f
asd_msg_on_msg_recv_read_status_response_buffer_full_test	tests/asd_msg_tests.c	/^void asd_msg_on_msg_recv_read_status_response_buffer_full_test(void** state)$/;"	f
asd_msg_on_msg_recv_read_status_target_read_failure_test	tests/asd_msg_tests.c	/^void asd_msg_on_msg_recv_read_status_target_read_failure_test(void** state)$/;"	f
asd_msg_on_msg_recv_read_status_test	tests/asd_msg_tests.c	/^void asd_msg_on_msg_recv_read_status_test(void** state)$/;"	f
asd_msg_on_msg_recv_read_write_scan_determine_shift_end_state_failed_test	tests/asd_msg_tests.c	/^void asd_msg_on_msg_recv_read_write_scan_determine_shift_end_state_failed_test($/;"	f
asd_msg_on_msg_recv_read_write_scan_invalid_packet_test	tests/asd_msg_tests.c	/^void asd_msg_on_msg_recv_read_write_scan_invalid_packet_test(void** state)$/;"	f
asd_msg_on_msg_recv_read_write_scan_jtag_shift_failed_test	tests/asd_msg_tests.c	/^void asd_msg_on_msg_recv_read_write_scan_jtag_shift_failed_test(void** state)$/;"	f
asd_msg_on_msg_recv_read_write_scan_jtag_shift_test	tests/asd_msg_tests.c	/^void asd_msg_on_msg_recv_read_write_scan_jtag_shift_test(void** state)$/;"	f
asd_msg_on_msg_recv_read_write_scan_response_buffer_full_test	tests/asd_msg_tests.c	/^void asd_msg_on_msg_recv_read_write_scan_response_buffer_full_test(void** state)$/;"	f
asd_msg_on_msg_recv_read_write_scan_response_failed_test	tests/asd_msg_tests.c	/^void asd_msg_on_msg_recv_read_write_scan_response_failed_test(void** state)$/;"	f
asd_msg_on_msg_recv_send_error_failed_test	tests/asd_msg_tests.c	/^void asd_msg_on_msg_recv_send_error_failed_test(void** state)$/;"	f
asd_msg_on_msg_recv_send_response_failure_test	tests/asd_msg_tests.c	/^void asd_msg_on_msg_recv_send_response_failure_test(void** state)$/;"	f
asd_msg_on_msg_recv_set_tap_state_failed_test	tests/asd_msg_tests.c	/^void asd_msg_on_msg_recv_set_tap_state_failed_test(void** state)$/;"	f
asd_msg_on_msg_recv_set_tap_state_test	tests/asd_msg_tests.c	/^void asd_msg_on_msg_recv_set_tap_state_test(void** state)$/;"	f
asd_msg_on_msg_recv_tap_reset_failed_test	tests/asd_msg_tests.c	/^void asd_msg_on_msg_recv_tap_reset_failed_test(void** state)$/;"	f
asd_msg_on_msg_recv_tap_reset_test	tests/asd_msg_tests.c	/^void asd_msg_on_msg_recv_tap_reset_test(void** state)$/;"	f
asd_msg_on_msg_recv_target_init_failed_cleanup_failed_test	tests/asd_msg_tests.c	/^void asd_msg_on_msg_recv_target_init_failed_cleanup_failed_test(void** state)$/;"	f
asd_msg_on_msg_recv_target_init_failed_test	tests/asd_msg_tests.c	/^void asd_msg_on_msg_recv_target_init_failed_test(void** state)$/;"	f
asd_msg_on_msg_recv_unexpected_write_pins_index_test	tests/asd_msg_tests.c	/^void asd_msg_on_msg_recv_unexpected_write_pins_index_test(void** state)$/;"	f
asd_msg_on_msg_recv_unknown_command_test	tests/asd_msg_tests.c	/^void asd_msg_on_msg_recv_unknown_command_test(void** state)$/;"	f
asd_msg_on_msg_recv_unsupported_cmd_stat_test	tests/asd_msg_tests.c	/^void asd_msg_on_msg_recv_unsupported_cmd_stat_test(void** state)$/;"	f
asd_msg_on_msg_recv_unsupported_type_test	tests/asd_msg_tests.c	/^void asd_msg_on_msg_recv_unsupported_type_test(void** state)$/;"	f
asd_msg_on_msg_recv_wait_cycles_failed_test	tests/asd_msg_tests.c	/^void asd_msg_on_msg_recv_wait_cycles_failed_test(void** state)$/;"	f
asd_msg_on_msg_recv_wait_cycles_invalid_packet_test	tests/asd_msg_tests.c	/^void asd_msg_on_msg_recv_wait_cycles_invalid_packet_test(void** state)$/;"	f
asd_msg_on_msg_recv_wait_cycles_test	tests/asd_msg_tests.c	/^void asd_msg_on_msg_recv_wait_cycles_test(void** state)$/;"	f
asd_msg_on_msg_recv_wait_prdy_failed_test	tests/asd_msg_tests.c	/^void asd_msg_on_msg_recv_wait_prdy_failed_test(void** state)$/;"	f
asd_msg_on_msg_recv_wait_prdy_test	tests/asd_msg_tests.c	/^void asd_msg_on_msg_recv_wait_prdy_test(void** state)$/;"	f
asd_msg_on_msg_recv_wait_sync_failed_test	tests/asd_msg_tests.c	/^void asd_msg_on_msg_recv_wait_sync_failed_test(void** state)$/;"	f
asd_msg_on_msg_recv_wait_sync_invalid_packet_test	tests/asd_msg_tests.c	/^void asd_msg_on_msg_recv_wait_sync_invalid_packet_test(void** state)$/;"	f
asd_msg_on_msg_recv_wait_sync_test	tests/asd_msg_tests.c	/^void asd_msg_on_msg_recv_wait_sync_test(void** state)$/;"	f
asd_msg_on_msg_recv_wait_sync_timeout_test	tests/asd_msg_tests.c	/^void asd_msg_on_msg_recv_wait_sync_timeout_test(void** state)$/;"	f
asd_msg_on_msg_recv_write_cfg_dr_postfix_invalid_packet_test	tests/asd_msg_tests.c	/^void asd_msg_on_msg_recv_write_cfg_dr_postfix_invalid_packet_test(void** state)$/;"	f
asd_msg_on_msg_recv_write_cfg_dr_postfix_set_padding_failed_test	tests/asd_msg_tests.c	/^void asd_msg_on_msg_recv_write_cfg_dr_postfix_set_padding_failed_test($/;"	f
asd_msg_on_msg_recv_write_cfg_dr_postfix_set_padding_test	tests/asd_msg_tests.c	/^void asd_msg_on_msg_recv_write_cfg_dr_postfix_set_padding_test(void** state)$/;"	f
asd_msg_on_msg_recv_write_cfg_dr_prefix_invalid_packet_test	tests/asd_msg_tests.c	/^void asd_msg_on_msg_recv_write_cfg_dr_prefix_invalid_packet_test(void** state)$/;"	f
asd_msg_on_msg_recv_write_cfg_dr_prefix_set_padding_failed_test	tests/asd_msg_tests.c	/^void asd_msg_on_msg_recv_write_cfg_dr_prefix_set_padding_failed_test($/;"	f
asd_msg_on_msg_recv_write_cfg_dr_prefix_set_padding_test	tests/asd_msg_tests.c	/^void asd_msg_on_msg_recv_write_cfg_dr_prefix_set_padding_test(void** state)$/;"	f
asd_msg_on_msg_recv_write_cfg_ir_postfix_invalid_packet_test	tests/asd_msg_tests.c	/^void asd_msg_on_msg_recv_write_cfg_ir_postfix_invalid_packet_test(void** state)$/;"	f
asd_msg_on_msg_recv_write_cfg_ir_postfix_set_padding_failed_test	tests/asd_msg_tests.c	/^void asd_msg_on_msg_recv_write_cfg_ir_postfix_set_padding_failed_test($/;"	f
asd_msg_on_msg_recv_write_cfg_ir_postfix_set_padding_test	tests/asd_msg_tests.c	/^void asd_msg_on_msg_recv_write_cfg_ir_postfix_set_padding_test(void** state)$/;"	f
asd_msg_on_msg_recv_write_cfg_ir_prefix_invalid_packet_test	tests/asd_msg_tests.c	/^void asd_msg_on_msg_recv_write_cfg_ir_prefix_invalid_packet_test(void** state)$/;"	f
asd_msg_on_msg_recv_write_cfg_ir_prefix_set_padding_failed_test	tests/asd_msg_tests.c	/^void asd_msg_on_msg_recv_write_cfg_ir_prefix_set_padding_failed_test($/;"	f
asd_msg_on_msg_recv_write_cfg_ir_prefix_set_padding_test	tests/asd_msg_tests.c	/^void asd_msg_on_msg_recv_write_cfg_ir_prefix_set_padding_test(void** state)$/;"	f
asd_msg_on_msg_recv_write_cfg_jtag_tck_invalid_packet_test	tests/asd_msg_tests.c	/^void asd_msg_on_msg_recv_write_cfg_jtag_tck_invalid_packet_test(void** state)$/;"	f
asd_msg_on_msg_recv_write_cfg_prdy_timeout_invalid_test	tests/asd_msg_tests.c	/^void asd_msg_on_msg_recv_write_cfg_prdy_timeout_invalid_test(void** state)$/;"	f
asd_msg_on_msg_recv_write_cfg_set_prdy_timeout_test	tests/asd_msg_tests.c	/^void asd_msg_on_msg_recv_write_cfg_set_prdy_timeout_test(void** state)$/;"	f
asd_msg_on_msg_recv_write_cfg_tck_1_test	tests/asd_msg_tests.c	/^void asd_msg_on_msg_recv_write_cfg_tck_1_test(void** state)$/;"	f
asd_msg_on_msg_recv_write_cfg_tck_2_test	tests/asd_msg_tests.c	/^void asd_msg_on_msg_recv_write_cfg_tck_2_test(void** state)$/;"	f
asd_msg_on_msg_recv_write_cfg_tck_4_test	tests/asd_msg_tests.c	/^void asd_msg_on_msg_recv_write_cfg_tck_4_test(void** state)$/;"	f
asd_msg_on_msg_recv_write_cfg_tck_64_test	tests/asd_msg_tests.c	/^void asd_msg_on_msg_recv_write_cfg_tck_64_test(void** state)$/;"	f
asd_msg_on_msg_recv_write_cfg_tck_8_test	tests/asd_msg_tests.c	/^void asd_msg_on_msg_recv_write_cfg_tck_8_test(void** state)$/;"	f
asd_msg_on_msg_recv_write_cfg_tck_invalid_prescale_test	tests/asd_msg_tests.c	/^void asd_msg_on_msg_recv_write_cfg_tck_invalid_prescale_test(void** state)$/;"	f
asd_msg_on_msg_recv_write_cfg_tck_set_failed_test	tests/asd_msg_tests.c	/^void asd_msg_on_msg_recv_write_cfg_tck_set_failed_test(void** state)$/;"	f
asd_msg_on_msg_recv_write_event_cfg_failure_test	tests/asd_msg_tests.c	/^void asd_msg_on_msg_recv_write_event_cfg_failure_test(void** state)$/;"	f
asd_msg_on_msg_recv_write_event_cfg_no_data_test	tests/asd_msg_tests.c	/^void asd_msg_on_msg_recv_write_event_cfg_no_data_test(void** state)$/;"	f
asd_msg_on_msg_recv_write_event_cfg_test	tests/asd_msg_tests.c	/^void asd_msg_on_msg_recv_write_event_cfg_test(void** state)$/;"	f
asd_msg_on_msg_recv_write_event_cfg_unkown_test	tests/asd_msg_tests.c	/^void asd_msg_on_msg_recv_write_event_cfg_unkown_test(void** state)$/;"	f
asd_msg_on_msg_recv_write_pins_failure_test	tests/asd_msg_tests.c	/^void asd_msg_on_msg_recv_write_pins_failure_test(void** state)$/;"	f
asd_msg_on_msg_recv_write_pins_no_data_test	tests/asd_msg_tests.c	/^void asd_msg_on_msg_recv_write_pins_no_data_test(void** state)$/;"	f
asd_msg_on_msg_recv_write_pins_test	tests/asd_msg_tests.c	/^void asd_msg_on_msg_recv_write_pins_test(void** state)$/;"	f
asd_msg_on_msg_recv_write_scan_determine_shift_end_state_failed_test	tests/asd_msg_tests.c	/^void asd_msg_on_msg_recv_write_scan_determine_shift_end_state_failed_test($/;"	f
asd_msg_on_msg_recv_write_scan_invalid_packet_test	tests/asd_msg_tests.c	/^void asd_msg_on_msg_recv_write_scan_invalid_packet_test(void** state)$/;"	f
asd_msg_on_msg_recv_write_scan_jtag_shift_failed_test	tests/asd_msg_tests.c	/^void asd_msg_on_msg_recv_write_scan_jtag_shift_failed_test(void** state)$/;"	f
asd_msg_on_msg_recv_write_scan_jtag_shift_test	tests/asd_msg_tests.c	/^void asd_msg_on_msg_recv_write_scan_jtag_shift_test(void** state)$/;"	f
asd_msg_read	asd_msg.c	/^STATUS asd_msg_read(ASD_MSG* state, void* conn, bool* data_pending)$/;"	f
asd_msg_read_bad_state_test	tests/asd_msg_tests.c	/^void asd_msg_read_bad_state_test(void** state)$/;"	f
asd_msg_read_break_from_asd_msg_on_msg_recv_test	tests/asd_msg_tests.c	/^void asd_msg_read_break_from_asd_msg_on_msg_recv_test(void** state)$/;"	f
asd_msg_read_header_and_buffer_data_pending_success_test	tests/asd_msg_tests.c	/^void asd_msg_read_header_and_buffer_data_pending_success_test(void** state)$/;"	f
asd_msg_read_header_and_buffer_success_test	tests/asd_msg_tests.c	/^void asd_msg_read_header_and_buffer_success_test(void** state)$/;"	f
asd_msg_read_header_not_complete_test	tests/asd_msg_tests.c	/^void asd_msg_read_header_not_complete_test(void** state)$/;"	f
asd_msg_read_header_only_success_test	tests/asd_msg_tests.c	/^void asd_msg_read_header_only_success_test(void** state)$/;"	f
asd_msg_read_header_read_failure_test	tests/asd_msg_tests.c	/^void asd_msg_read_header_read_failure_test(void** state)$/;"	f
asd_msg_read_invalid_params_test	tests/asd_msg_tests.c	/^void asd_msg_read_invalid_params_test(void** state)$/;"	f
asd_msg_read_invalid_size_test	tests/asd_msg_tests.c	/^void asd_msg_read_invalid_size_test(void** state)$/;"	f
asd_state	asd_main.h	/^typedef struct asd_state$/;"	s
asd_state	asd_main.h	/^} asd_state;$/;"	t	typeref:struct:asd_state
asd_version	asd_msg.h	/^static char asd_version[] = "ASD_BMC_v1.4.4";$/;"	v
asd_write_set_active_chain_event	asd_msg.c	/^STATUS asd_write_set_active_chain_event(ASD_MSG* state, uint8_t scan_chain)$/;"	f
auth_client_handshake	authenticate.c	/^STATUS auth_client_handshake(Session* session, ExtNet* net_state,$/;"	f
auth_client_handshake_calls_client_handshake_successfully_test	tests/authenticate_tests.c	/^void auth_client_handshake_calls_client_handshake_successfully_test($/;"	f
auth_client_handshake_invalid_handler_client_handshake_returns_error_test	tests/authenticate_tests.c	/^void auth_client_handshake_invalid_handler_client_handshake_returns_error_test($/;"	f
auth_handshake_req_t	auth_pam.h	/^} __attribute__((packed)) auth_handshake_req_t;$/;"	t	typeref:struct:__anon20
auth_handshake_resp_t	auth_pam.h	/^} __attribute__((packed)) auth_handshake_resp_t;$/;"	t	typeref:struct:__anon21
auth_handshake_response	auth_pam.c	/^static STATUS auth_handshake_response(ExtNet* net_state,$/;"	f	file:
auth_handshake_ret_t	auth_pam.h	/^} __attribute__((packed)) auth_handshake_ret_t;$/;"	t	typeref:enum:__anon19
auth_hdlr_type_t	authenticate.h	/^} auth_hdlr_type_t;$/;"	t	typeref:enum:__anon16
auth_hdlrs_t	authenticate.h	/^} auth_hdlrs_t;$/;"	t	typeref:struct:__anon17
auth_hdr_version	auth_pam.h	/^    unsigned char auth_hdr_version;$/;"	m	struct:__anon20
auth_init	authenticate.c	/^STATUS auth_init(auth_hdlr_type_t e_type, void* p_hdlr_data)$/;"	f
auth_init_calls_init_successfully_test	tests/authenticate_tests.c	/^void auth_init_calls_init_successfully_test(void** state)$/;"	f
auth_init_invalid_handler_init_returns_error_test	tests/authenticate_tests.c	/^void auth_init_invalid_handler_init_returns_error_test(void** state)$/;"	f
auth_init_invalid_handler_type_returns_error_test	tests/authenticate_tests.c	/^void auth_init_invalid_handler_type_returns_error_test(void** state)$/;"	f
auth_none	auth_none.c	/^STATUS auth_none(Session* session, ExtNet* net_state, extnet_conn_t* p_extconn)$/;"	f
auth_none_returns_success_test	tests/auth_none_tests.c	/^void auth_none_returns_success_test(void** state)$/;"	f
auth_password	auth_pam.h	/^    unsigned char auth_password[MAX_PW_LEN];$/;"	m	struct:__anon20
auth_ret_t	auth_pam.c	/^} auth_ret_t;$/;"	t	typeref:enum:__anon18	file:
auth_track_attempt	auth_pam.c	/^static auth_ret_t auth_track_attempt(auth_ret_t err_code)$/;"	f	file:
authenticate_client	auth_pam.c	/^static auth_ret_t authenticate_client(char* cp_buf, int n_num_read)$/;"	f	file:
authnone_hdlrs	auth_none.c	/^auth_hdlrs_t authnone_hdlrs = {authnone_init, auth_none};$/;"	v
authnone_hdlrs	tests/authenticate_tests.c	/^auth_hdlrs_t authnone_hdlrs = {fake_authnone_init, fake_auth_none};$/;"	v
authnone_init	auth_none.c	/^STATUS authnone_init(void* p_hdlr_data)$/;"	f
authnone_init_returns_success_test	tests/auth_none_tests.c	/^void authnone_init_returns_success_test(void** state)$/;"	f
authpam_client_handshake	auth_pam.c	/^STATUS authpam_client_handshake(Session* session, ExtNet* net_state,$/;"	f
authpam_client_handshake_data_pending_error_test	tests/auth_pam_tests.c	/^void authpam_client_handshake_data_pending_error_test(void** state)$/;"	f
authpam_client_handshake_fail_to_send_result_test	tests/auth_pam_tests.c	/^void authpam_client_handshake_fail_to_send_result_test(void** state)$/;"	f
authpam_client_handshake_get_random_bytes_failure_test	tests/auth_pam_tests.c	/^void authpam_client_handshake_get_random_bytes_failure_test(void** state)$/;"	f
authpam_client_handshake_locked_out_test	tests/auth_pam_tests.c	/^void authpam_client_handshake_locked_out_test(void** state)$/;"	f
authpam_client_handshake_pam_authenticate_failure_test	tests/auth_pam_tests.c	/^void authpam_client_handshake_pam_authenticate_failure_test(void** state)$/;"	f
authpam_client_handshake_pam_end_failure_test	tests/auth_pam_tests.c	/^void authpam_client_handshake_pam_end_failure_test(void** state)$/;"	f
authpam_client_handshake_pam_start_failure_test	tests/auth_pam_tests.c	/^void authpam_client_handshake_pam_start_failure_test(void** state)$/;"	f
authpam_client_handshake_params_test	tests/auth_pam_tests.c	/^void authpam_client_handshake_params_test(void** state)$/;"	f
authpam_client_handshake_passphrase_too_big_test	tests/auth_pam_tests.c	/^void authpam_client_handshake_passphrase_too_big_test(void** state)$/;"	f
authpam_client_handshake_recv_failure_test	tests/auth_pam_tests.c	/^void authpam_client_handshake_recv_failure_test(void** state)$/;"	f
authpam_client_handshake_session_already_authenticated_test	tests/auth_pam_tests.c	/^void authpam_client_handshake_session_already_authenticated_test(void** state)$/;"	f
authpam_client_handshake_strip_null_test	tests/auth_pam_tests.c	/^void authpam_client_handshake_strip_null_test(void** state)$/;"	f
authpam_client_handshake_success_test	tests/auth_pam_tests.c	/^void authpam_client_handshake_success_test(void** state)$/;"	f
authpam_hdlrs	auth_pam.c	/^auth_hdlrs_t authpam_hdlrs = {authpam_init, authpam_client_handshake};$/;"	v
authpam_hdlrs	tests/authenticate_tests.c	/^auth_hdlrs_t authpam_hdlrs = {fake_authpam_init, fake_auth_pam};$/;"	v
authpam_init	auth_pam.c	/^STATUS authpam_init(void* p_hdlr_data)$/;"	f
authpam_init_success_test	tests/auth_pam_tests.c	/^void authpam_init_success_test(void** state)$/;"	f
b_authenticated	session.h	/^    bool b_authenticated;  \/\/ True if session is authenticated.$/;"	m	struct:__anon35
b_data_pending	session.h	/^    bool b_data_pending;   \/\/ Hint that more data is pending for the$/;"	m	struct:__anon35
b_initialized	session.h	/^    bool b_initialized;$/;"	m	struct:Session
bitbang_data	jtag_handler.h	/^    struct tck_bitbang bitbang_data[MAX_WAIT_CYCLES];$/;"	m	struct:JTAG_Handler	typeref:struct:JTAG_Handler::tck_bitbang
bitbang_packet	tests/jtag.h	/^struct bitbang_packet$/;"	s
bmc_version	asd_msg.h	/^    char bmc_version[120];$/;"	m	struct:ASD_MSG
bmc_version_size	asd_msg.h	/^    int bmc_version_size;$/;"	m	struct:ASD_MSG
break_all	target_handler.h	/^    bool break_all;$/;"	m	struct:event_configuration
buffer	asd_common.h	/^    uint8_t buffer[ASD_I2C_BUFFER_LEN];$/;"	m	struct:asd_i2c_msg
buffer	asd_common.h	/^    unsigned char buffer[MAX_DATA_SIZE];$/;"	m	struct:asd_message
buffer_to_hex	logging.c	/^void buffer_to_hex(unsigned int number_of_bits, unsigned int number_of_bytes,$/;"	f
build_responses	asd_msg.c	/^STATUS build_responses(ASD_MSG* state, int* response_cnt,$/;"	f
build_responses_i2c_msg_get_asd_i2c_msg_failed_test	tests/asd_msg_tests.c	/^void build_responses_i2c_msg_get_asd_i2c_msg_failed_test(void** state)$/;"	f
bus	asd_common.h	/^    uint8_t bus;$/;"	m	struct:i2c_options
bus	dbus_helper.h	/^    sd_bus* bus;$/;"	m	struct:Dbus_Handle
callb	dbus_helper.c	/^bool callb;$/;"	v
callb	tests/dbus_helper_tests.c	/^bool callb = false;$/;"	v
callb_ptr	tests/dbus_helper_tests.c	/^Power_State* callb_ptr = NULL;$/;"	v
callb_state	tests/dbus_helper_tests.c	/^Power_State callb_state = STATE_UNKNOWN;$/;"	v
callback_state	asd_msg.h	/^    void* callback_state;$/;"	m	struct:ASD_MSG
calloc_fail	tests/auth_pam_tests.c	/^static bool calloc_fail[MAX_COMMANDS];$/;"	v	file:
calloc_fail_mode	tests/auth_pam_tests.c	/^static bool calloc_fail_mode = false;$/;"	v	file:
calloc_index	tests/auth_pam_tests.c	/^int calloc_index = 0;$/;"	v
chain_mode	config.h	/^    JTAG_CHAIN_SELECT_MODE chain_mode;$/;"	m	struct:jtag_config
chains	jtag_handler.h	/^    JTAG_Chain_State chains[MAX_SCAN_CHAINS];$/;"	m	struct:JTAG_Handler
chip	target_handler.h	/^    struct gpiod_chip* chip;$/;"	m	struct:Target_Control_GPIO	typeref:struct:Target_Control_GPIO::gpiod_chip
chip	tests/target_handler_tests.c	/^    struct gpiod_chip* chip;$/;"	m	struct:gpiod_line	typeref:struct:gpiod_line::gpiod_chip	file:
chip_name	tests/target_handler_tests.c	/^    char* chip_name;$/;"	m	struct:_gpiod_line_data	file:
chipname_size	tests/target_handler_tests.c	/^    size_t chipname_size;$/;"	m	struct:_gpiod_line_data	file:
cleanup	ext_network.h	/^    void (*cleanup)(void);$/;"	m	struct:__anon26
cleanup	ext_tls.c	/^void cleanup(SSL_CTX* ctx)$/;"	f
client_handshake	authenticate.h	/^    STATUS(*client_handshake)$/;"	m	struct:__anon17
close_connection	asd_main.c	/^STATUS close_connection(asd_state* state)$/;"	f
close_connection_already_closed_test	tests/asd_main_tests.c	/^void close_connection_already_closed_test(void** state)$/;"	f
cmd_stat	asd_common.h	/^    uint8_t cmd_stat : 8;$/;"	m	struct:message_header
command_index	tests/asd_msg_tests.c	/^int command_index = 0;$/;"	v
command_index	tests/jtag_test_tests.c	/^int command_index = 0;$/;"	v
command_result	tests/asd_msg_tests.c	/^STATUS command_result[MAX_COMMANDS];$/;"	v
command_result	tests/jtag_test_tests.c	/^STATUS command_result[MAX_COMMANDS];$/;"	v
config	asd_main.h	/^    config config;$/;"	m	struct:asd_state
config	config.h	/^typedef struct config$/;"	s
config	config.h	/^} config;$/;"	t	typeref:struct:config
config	i2c_handler.h	/^    i2c_config* config;$/;"	m	struct:I2C_Handler
consumer	tests/target_handler_tests.c	/^    char consumer[32];$/;"	m	struct:gpiod_line	file:
continue_loop	jtag_test.c	/^bool continue_loop = true;$/;"	v
controller_mode	tests/jtag_drv.h	/^    __u32 controller_mode;$/;"	m	struct:controller_mode_param
controller_mode_param	jtag_handler.h	72;"	d
controller_mode_param	tests/jtag_drv.h	/^struct controller_mode_param$/;"	s
copy_asd_to_i2c	i2c_msg_builder.c	/^STATUS copy_asd_to_i2c(const asd_i2c_msg* asd, struct i2c_msg* i2c)$/;"	f
copy_asd_to_i2c_tests	tests/i2c_msg_builder_tests.c	/^void copy_asd_to_i2c_tests(void** state)$/;"	f
copy_i2c_to_asd	i2c_msg_builder.c	/^STATUS copy_i2c_to_asd(asd_i2c_msg* asd, struct i2c_msg* i2c)$/;"	f
copy_i2c_to_asd_tests	tests/i2c_msg_builder_tests.c	/^void copy_i2c_to_asd_tests(void** state)$/;"	f
cp_certkeyfile	asd_main.h	/^    char* cp_certkeyfile;$/;"	m	struct:session_options
cp_net_bind_device	asd_main.h	/^    char* cp_net_bind_device;$/;"	m	struct:session_options
create_JTAGHandler_helper	tests/jtag_handler_tests.c	/^JTAG_Handler* create_JTAGHandler_helper()$/;"	f
credentials_are_valid	auth_pam.c	/^static auth_ret_t credentials_are_valid(unsigned char* cp_password,$/;"	f	file:
data	tests/jtag.h	/^    struct tck_bitbang* data;$/;"	m	struct:bitbang_packet	typeref:struct:bitbang_packet::tck_bitbang
data_buffer	tests/asd_msg_tests.c	/^unsigned char data_buffer[MAX_DATA_SIZE];$/;"	v
data_json_map	target_handler.h	/^typedef struct data_json_map$/;"	s
data_json_map	target_handler.h	/^} data_json_map;$/;"	t	typeref:struct:data_json_map
data_size	asd_msg.h	/^    ssize_t data_size;$/;"	m	struct:incoming_msg
dbus	target_handler.h	/^    Dbus_Handle* dbus;$/;"	m	struct:Target_Control_Handle
dbus	vprobe_handler.h	/^    Dbus_Handle* dbus;$/;"	m	struct:vProbe_Handler
dbus_call_set_property_async	dbus_helper.c	/^STATUS dbus_call_set_property_async(const Dbus_Handle* state,$/;"	f
dbus_dbus_gethotstate_off_state_unknown_success_test	tests/dbus_helper_tests.c	/^void dbus_dbus_gethotstate_off_state_unknown_success_test(void** state)$/;"	f
dbus_dbus_gethotstate_on_state_unknown_success_test	tests/dbus_helper_tests.c	/^void dbus_dbus_gethotstate_on_state_unknown_success_test(void** state)$/;"	f
dbus_deinitialize	dbus_helper.c	/^STATUS dbus_deinitialize(Dbus_Handle* state)$/;"	f
dbus_deinitialize_null_param_test	tests/dbus_helper_tests.c	/^void dbus_deinitialize_null_param_test(void** state)$/;"	f
dbus_deinitialize_success_test	tests/dbus_helper_tests.c	/^void dbus_deinitialize_success_test(void** state)$/;"	f
dbus_get_asd_interface_paths	dbus_helper.c	/^STATUS dbus_get_asd_interface_paths(const Dbus_Handle* state,$/;"	f
dbus_get_path	dbus_helper.c	/^STATUS dbus_get_path(const Dbus_Handle* state, char* name, char* path)$/;"	f
dbus_get_platform_id	dbus_helper.c	/^STATUS dbus_get_platform_id(const Dbus_Handle* state, uint64_t* pid)$/;"	f
dbus_get_platform_path	dbus_helper.c	/^STATUS dbus_get_platform_path(const Dbus_Handle* state, char* path)$/;"	f
dbus_get_powerstate	dbus_helper.c	/^STATUS dbus_get_powerstate(Dbus_Handle* state, int* value)$/;"	f
dbus_helper	dbus_helper.c	/^Dbus_Handle* dbus_helper()$/;"	f
dbus_helper_malloc_fail_test	tests/dbus_helper_tests.c	/^void dbus_helper_malloc_fail_test(void** state)$/;"	f
dbus_helper_success_test	tests/dbus_helper_tests.c	/^void dbus_helper_success_test(void** state)$/;"	f
dbus_initialize	dbus_helper.c	/^STATUS dbus_initialize(Dbus_Handle* state)$/;"	f
dbus_initialize_fail_test	tests/dbus_helper_tests.c	/^void dbus_initialize_fail_test(void** state)$/;"	f
dbus_initialize_fail_to_dbus_gethotstate	tests/dbus_helper_tests.c	/^void dbus_initialize_fail_to_dbus_gethotstate(void** state)$/;"	f
dbus_initialize_fail_to_get_fd_test	tests/dbus_helper_tests.c	/^void dbus_initialize_fail_to_get_fd_test(void** state)$/;"	f
dbus_initialize_fail_to_sd_bus_add_match_test	tests/dbus_helper_tests.c	/^void dbus_initialize_fail_to_sd_bus_add_match_test(void** state)$/;"	f
dbus_initialize_null_param_test	tests/dbus_helper_tests.c	/^void dbus_initialize_null_param_test(void** state)$/;"	f
dbus_initialize_success_test	tests/dbus_helper_tests.c	/^void dbus_initialize_success_test(void** state)$/;"	f
dbus_power_off	dbus_helper.c	/^STATUS dbus_power_off(Dbus_Handle* state)$/;"	f
dbus_power_on	dbus_helper.c	/^STATUS dbus_power_on(Dbus_Handle* state)$/;"	f
dbus_power_reset	dbus_helper.c	/^STATUS dbus_power_reset(Dbus_Handle* state)$/;"	f
dbus_power_reset_async_failure1_test	tests/dbus_helper_tests.c	/^void dbus_power_reset_async_failure1_test(void** state)$/;"	f
dbus_power_reset_async_failure2_test	tests/dbus_helper_tests.c	/^void dbus_power_reset_async_failure2_test(void** state)$/;"	f
dbus_power_reset_async_failure3_test	tests/dbus_helper_tests.c	/^void dbus_power_reset_async_failure3_test(void** state)$/;"	f
dbus_power_reset_async_failure4_test	tests/dbus_helper_tests.c	/^void dbus_power_reset_async_failure4_test(void** state)$/;"	f
dbus_power_reset_async_failure5_test	tests/dbus_helper_tests.c	/^void dbus_power_reset_async_failure5_test(void** state)$/;"	f
dbus_power_reset_callback_success_test	tests/dbus_helper_tests.c	/^void dbus_power_reset_callback_success_test(void** state)$/;"	f
dbus_power_reset_null_param_test	tests/dbus_helper_tests.c	/^void dbus_power_reset_null_param_test(void** state)$/;"	f
dbus_power_reset_process_failure1_test	tests/dbus_helper_tests.c	/^void dbus_power_reset_process_failure1_test(void** state)$/;"	f
dbus_power_reset_process_wait_success_test	tests/dbus_helper_tests.c	/^void dbus_power_reset_process_wait_success_test(void** state)$/;"	f
dbus_power_reset_success_test	tests/dbus_helper_tests.c	/^void dbus_power_reset_success_test(void** state)$/;"	f
dbus_power_reset_wait_failure_test	tests/dbus_helper_tests.c	/^void dbus_power_reset_wait_failure_test(void** state)$/;"	f
dbus_power_toggle	dbus_helper.c	/^STATUS dbus_power_toggle(Dbus_Handle* state)$/;"	f
dbus_power_toggle_null_param_test	tests/dbus_helper_tests.c	/^void dbus_power_toggle_null_param_test(void** state)$/;"	f
dbus_power_toggle_off_success_test	tests/dbus_helper_tests.c	/^void dbus_power_toggle_off_success_test(void** state)$/;"	f
dbus_power_toggle_on_success_test	tests/dbus_helper_tests.c	/^void dbus_power_toggle_on_success_test(void** state)$/;"	f
dbus_process_event	dbus_helper.c	/^STATUS dbus_process_event(Dbus_Handle* state, ASD_EVENT* event)$/;"	f
dbus_process_event_fail_sd_bus_process_test	tests/dbus_helper_tests.c	/^void dbus_process_event_fail_sd_bus_process_test(void** state)$/;"	f
dbus_process_event_state_equal_test	tests/dbus_helper_tests.c	/^void dbus_process_event_state_equal_test(void** state)$/;"	f
dbus_process_event_state_off_test	tests/dbus_helper_tests.c	/^void dbus_process_event_state_off_test(void** state)$/;"	f
dbus_process_event_state_on_test	tests/dbus_helper_tests.c	/^void dbus_process_event_state_on_test(void** state)$/;"	f
dbus_read_asd_config	dbus_helper.c	/^STATUS dbus_read_asd_config(const Dbus_Handle* state, const char* interface,$/;"	f
default_bus	config.h	/^    uint8_t default_bus;$/;"	m	struct:i2c_config
deinit_asd_state	asd_main.c	/^void deinit_asd_state(asd_state* state)$/;"	f
deinit_asd_state_test	tests/asd_main_tests.c	/^void deinit_asd_state_test(void** state)$/;"	f
deinit_gpios	tests/target_handler_tests.c	/^static inline void deinit_gpios(Target_Control_Handle* handle)$/;"	f	file:
deinitialize_gpios	target_handler.c	/^STATUS deinitialize_gpios(Target_Control_Handle* state)$/;"	f
determine_shift_end_state	asd_msg.c	/^STATUS determine_shift_end_state(ASD_MSG* state, ScanType scan_type,$/;"	f
determine_shift_end_state_end_of_packet_test	tests/asd_msg_tests.c	/^void determine_shift_end_state_end_of_packet_test(void** state)$/;"	f
determine_shift_end_state_get_jtag_state_failed_test	tests/asd_msg_tests.c	/^void determine_shift_end_state_get_jtag_state_failed_test(void** state)$/;"	f
determine_shift_end_state_hw_mode_jtag_pau_dr_test	tests/asd_msg_tests.c	/^void determine_shift_end_state_hw_mode_jtag_pau_dr_test(void** state)$/;"	f
determine_shift_end_state_hw_mode_jtag_pau_ir_test	tests/asd_msg_tests.c	/^void determine_shift_end_state_hw_mode_jtag_pau_ir_test(void** state)$/;"	f
determine_shift_end_state_invalid_param_test	tests/asd_msg_tests.c	/^void determine_shift_end_state_invalid_param_test(void** state)$/;"	f
determine_shift_end_state_next_is_not_read_scan_test	tests/asd_msg_tests.c	/^void determine_shift_end_state_next_is_not_read_scan_test(void** state)$/;"	f
determine_shift_end_state_next_is_not_readwrite_scan_test	tests/asd_msg_tests.c	/^void determine_shift_end_state_next_is_not_readwrite_scan_test(void** state)$/;"	f
determine_shift_end_state_next_is_not_write_scan_test	tests/asd_msg_tests.c	/^void determine_shift_end_state_next_is_not_write_scan_test(void** state)$/;"	f
determine_shift_end_state_next_is_tap_state_cmd_test	tests/asd_msg_tests.c	/^void determine_shift_end_state_next_is_tap_state_cmd_test(void** state)$/;"	f
direction	target_handler.h	/^    GPIO_DIRECTION direction;$/;"	m	struct:Target_Control_GPIO
direction	tests/jtag.h	/^    __u8 direction;$/;"	m	struct:jtag_xfer
direction	tests/target_handler_tests.c	/^    int direction;$/;"	m	struct:gpiod_line	file:
do_bus_select_command	asd_msg.c	/^STATUS do_bus_select_command(I2C_Handler* i2c_handler,$/;"	f
do_failed_logon_attempt	tests/auth_pam_tests.c	/^void do_failed_logon_attempt()$/;"	f
do_read_command	asd_msg.c	/^STATUS do_read_command(uint8_t cmd, I2C_Msg_Builder* builder,$/;"	f
do_read_command_i2c_msg_add_failed_test	tests/asd_msg_tests.c	/^void do_read_command_i2c_msg_add_failed_test(void** state)$/;"	f
do_set_sclk_command	asd_msg.c	/^STATUS do_set_sclk_command(I2C_Handler* i2c_handler, struct packet_data* packet)$/;"	f
do_write_command	asd_msg.c	/^STATUS do_write_command(uint8_t cmd, I2C_Msg_Builder* builder,$/;"	f
do_write_command_get_backet_data_failed_test	tests/asd_msg_tests.c	/^void do_write_command_get_backet_data_failed_test(void** state)$/;"	f
do_write_command_i2c_msg_add_failed_test	tests/asd_msg_tests.c	/^void do_write_command_i2c_msg_add_failed_test(void** state)$/;"	f
drPost	jtag_handler.h	/^    unsigned int drPost;$/;"	m	struct:JTAGShiftPadding
drPre	jtag_handler.h	/^    unsigned int drPre;$/;"	m	struct:JTAGShiftPadding
dr_shift_size	jtag_test.h	/^    unsigned int dr_shift_size;$/;"	m	struct:jtag_test_args
dummy	tests/asd_msg_tests.c	/^int dummy = 0;$/;"	v
e_auth_type	asd_main.h	/^    auth_hdlr_type_t e_auth_type;$/;"	m	struct:session_options
e_extnet_type	asd_main.h	/^    extnet_hdlr_type_t e_extnet_type;$/;"	m	struct:session_options
edge	target_handler.h	/^    GPIO_EDGE edge;$/;"	m	struct:Target_Control_GPIO
enable	asd_common.h	/^    bool enable;$/;"	m	struct:i2c_options
enable_i2c	config.h	/^    bool enable_i2c;$/;"	m	struct:i2c_config
enc_bit	asd_common.h	/^    uint8_t enc_bit : 1;$/;"	m	struct:message_header
end_tap_state	tests/jtag_drv.h	/^    __u32 end_tap_state;$/;"	m	struct:scan_xfer
endstate	tests/jtag.h	/^    __u8 endstate;$/;"	m	struct:jtag_tap_state
endstate	tests/jtag.h	/^    __u8 endstate;$/;"	m	struct:jtag_xfer
ensure_client_authenticated	asd_main.c	/^STATUS ensure_client_authenticated(asd_state* state, extnet_conn_t* p_extconn)$/;"	f
ensure_client_authenticated_already_authenticated_test	tests/asd_main_tests.c	/^void ensure_client_authenticated_already_authenticated_test(void** state)$/;"	f
ensure_client_authenticated_auth_client_handshake_failure_test	tests/asd_main_tests.c	/^void ensure_client_authenticated_auth_client_handshake_failure_test($/;"	f
ensure_client_authenticated_connect_failure_memcpy_fail_test	tests/asd_main_tests.c	/^void ensure_client_authenticated_connect_failure_memcpy_fail_test(void** state)$/;"	f
ensure_client_authenticated_connect_failure_test	tests/asd_main_tests.c	/^void ensure_client_authenticated_connect_failure_test(void** state)$/;"	f
ensure_client_authenticated_invalid_params_test	tests/asd_main_tests.c	/^void ensure_client_authenticated_invalid_params_test(void** state)$/;"	f
ensure_client_authenticated_session_auth_complete_failure_test	tests/asd_main_tests.c	/^void ensure_client_authenticated_session_auth_complete_failure_test($/;"	f
ensure_client_authenticated_success_test	tests/asd_main_tests.c	/^void ensure_client_authenticated_success_test(void** state)$/;"	f
enum_strings	target_handler.h	/^    const char* (*enum_strings)[];$/;"	m	struct:data_json_map
event_cfg	target_handler.h	/^    event_configuration event_cfg;$/;"	m	struct:Target_Control_Handle
event_configuration	target_handler.h	/^typedef struct event_configuration$/;"	s
event_configuration	target_handler.h	/^} event_configuration;$/;"	t	typeref:struct:event_configuration
event_fd	asd_main.h	/^    int event_fd;$/;"	m	struct:asd_state
expect_ERR_error_string_n	tests/ext_tls_tests.c	/^void expect_ERR_error_string_n()$/;"	f
expect_OpenSSL_add_ssl_algorithms	tests/ext_tls_tests.c	/^void expect_OpenSSL_add_ssl_algorithms()$/;"	f
expect_RAND_bytes_success	tests/auth_pam_tests.c	/^void expect_RAND_bytes_success()$/;"	f
expect_SSL_CTX_check_private_key	tests/ext_tls_tests.c	/^void expect_SSL_CTX_check_private_key(bool success)$/;"	f
expect_SSL_CTX_new	tests/ext_tls_tests.c	/^void expect_SSL_CTX_new(bool success)$/;"	f
expect_SSL_CTX_set_cipher_list	tests/ext_tls_tests.c	/^void expect_SSL_CTX_set_cipher_list(bool success)$/;"	f
expect_SSL_CTX_set_options	tests/ext_tls_tests.c	/^void expect_SSL_CTX_set_options()$/;"	f
expect_SSL_CTX_use_PrivateKey_file	tests/ext_tls_tests.c	/^void expect_SSL_CTX_use_PrivateKey_file(bool success, char* privatekey)$/;"	f
expect_SSL_CTX_use_certificate_file	tests/ext_tls_tests.c	/^void expect_SSL_CTX_use_certificate_file(bool success, char* certfile)$/;"	f
expect_SSL_accept	tests/ext_tls_tests.c	/^int expect_SSL_accept(acceptFailType type)$/;"	f
expect_SSL_get_peer_certificate	tests/ext_tls_tests.c	/^void expect_SSL_get_peer_certificate(bool success)$/;"	f
expect_SSL_load_error_strings	tests/ext_tls_tests.c	/^void expect_SSL_load_error_strings()$/;"	f
expect_SSL_new	tests/ext_tls_tests.c	/^void expect_SSL_new(bool success)$/;"	f
expect_SSL_read	tests/ext_tls_tests.c	/^void expect_SSL_read(int result, int expected_size, int ssl_error,$/;"	f
expect_SSL_set_fd	tests/ext_tls_tests.c	/^void expect_SSL_set_fd(bool success, int expected_fd)$/;"	f
expect_SSL_write	tests/ext_tls_tests.c	/^void expect_SSL_write(int result, int expect_num_bytes, int ssl_error)$/;"	f
expect_any_ASD_initialize_log_settings	tests/asd_main_tests.c	/^void expect_any_ASD_initialize_log_settings()$/;"	f
expect_any_asd_msg_init	tests/asd_main_tests.c	/^void expect_any_asd_msg_init(ASD_MSG* sdk)$/;"	f
expect_any_auth_init	tests/asd_main_tests.c	/^void expect_any_auth_init()$/;"	f
expect_any_eventfd	tests/asd_main_tests.c	/^void expect_any_eventfd()$/;"	f
expect_any_extnet_init	tests/asd_main_tests.c	/^void expect_any_extnet_init()$/;"	f
expect_any_extnet_open_external_socket	tests/asd_main_tests.c	/^void expect_any_extnet_open_external_socket()$/;"	f
expect_any_ioctl_helper	tests/jtag_handler_tests.c	/^void expect_any_ioctl_helper()$/;"	f
expect_any_session_init	tests/asd_main_tests.c	/^void expect_any_session_init()$/;"	f
expect_asd_init	tests/asd_main_tests.c	/^void expect_asd_init()$/;"	f
expect_asd_msg_event	tests/asd_main_tests.c	/^void expect_asd_msg_event(STATUS result)$/;"	f
expect_asd_msg_free	tests/asd_main_tests.c	/^void expect_asd_msg_free(STATUS result)$/;"	f
expect_asd_msg_get_fds	tests/asd_main_tests.c	/^void expect_asd_msg_get_fds(STATUS result, int index)$/;"	f
expect_asd_msg_read	tests/asd_main_tests.c	/^void expect_asd_msg_read(STATUS result)$/;"	f
expect_auth_client_handshake	tests/asd_main_tests.c	/^void expect_auth_client_handshake(STATUS result)$/;"	f
expect_authenticate	tests/auth_pam_tests.c	/^void expect_authenticate(bool success, char* passphrase)$/;"	f
expect_bind	tests/ext_network_tests.c	/^void expect_bind(int result, int fd, int len)$/;"	f
expect_cleanup	tests/ext_tls_tests.c	/^void expect_cleanup()$/;"	f
expect_default_ASD_initialize_log_settings	tests/asd_main_tests.c	/^void expect_default_ASD_initialize_log_settings()$/;"	f
expect_default_bmc_version	tests/asd_msg_tests.c	/^void expect_default_bmc_version()$/;"	f
expect_extnet_accept_connection	tests/asd_main_tests.c	/^void expect_extnet_accept_connection()$/;"	f
expect_extnet_recv	tests/asd_main_tests.c	/^void expect_extnet_recv(int result, size_t num, bool pending)$/;"	f
expect_extnet_recv_failure	tests/auth_pam_tests.c	/^void expect_extnet_recv_failure()$/;"	f
expect_extnet_recv_success	tests/auth_pam_tests.c	/^void expect_extnet_recv_success(bool data_pending, char* data_read,$/;"	f
expect_extnet_send	tests/auth_pam_tests.c	/^void expect_extnet_send(bool success, auth_handshake_ret_t c_resp)$/;"	f
expect_exttls_init	tests/ext_tls_tests.c	/^void expect_exttls_init(char* certfile)$/;"	f
expect_get_power_state	tests/dbus_helper_tests.c	/^void expect_get_power_state(const char* state)$/;"	f
expect_getpeername	tests/asd_main_tests.c	/^void expect_getpeername(int result)$/;"	f
expect_getpeername_check_fd	tests/asd_main_tests.c	/^void expect_getpeername_check_fd(int result, int fd)$/;"	f
expect_listen	tests/ext_network_tests.c	/^void expect_listen(int result, int socket, int sessions)$/;"	f
expect_on_client_connect	tests/asd_main_tests.c	/^void expect_on_client_connect(ASD_MSG* asd_msg, STATUS result)$/;"	f
expect_on_client_disconnect	tests/asd_main_tests.c	/^void expect_on_client_disconnect(STATUS result)$/;"	f
expect_pam_authenticate	tests/auth_pam_tests.c	/^void expect_pam_authenticate(bool success)$/;"	f
expect_pam_end	tests/auth_pam_tests.c	/^void expect_pam_end(bool success)$/;"	f
expect_pam_start	tests/auth_pam_tests.c	/^void expect_pam_start(bool success, pam_handle_t* pamh)$/;"	f
expect_poll	tests/asd_main_tests.c	/^void expect_poll(int timeout, int result)$/;"	f
expect_power_off	tests/dbus_helper_tests.c	/^void expect_power_off()$/;"	f
expect_power_on	tests/dbus_helper_tests.c	/^void expect_power_on()$/;"	f
expect_power_reboot	tests/dbus_helper_tests.c	/^void expect_power_reboot()$/;"	f
expect_power_reboot_failure1	tests/dbus_helper_tests.c	/^void expect_power_reboot_failure1()$/;"	f
expect_power_reboot_failure2	tests/dbus_helper_tests.c	/^void expect_power_reboot_failure2()$/;"	f
expect_power_reset	tests/dbus_helper_tests.c	/^void expect_power_reset()$/;"	f
expect_process_all_client_messages	tests/asd_main_tests.c	/^void expect_process_all_client_messages(int* fds, int num_fds,$/;"	f
expect_process_client_message	tests/asd_main_tests.c	/^void expect_process_client_message(extnet_conn_t* conn, int fd, STATUS result)$/;"	f
expect_process_new_client	tests/asd_main_tests.c	/^void expect_process_new_client(asd_state* asd, ExtNet* extnet)$/;"	f
expect_read	tests/asd_main_tests.c	/^void expect_read(int fd, int result, uint64_t value)$/;"	f
expect_session_already_authenticated	tests/asd_main_tests.c	/^void expect_session_already_authenticated(STATUS result)$/;"	f
expect_session_auth_complete	tests/asd_main_tests.c	/^void expect_session_auth_complete(STATUS result)$/;"	f
expect_session_close	tests/asd_main_tests.c	/^void expect_session_close(STATUS result)$/;"	f
expect_session_data_pending	tests/asd_main_tests.c	/^void expect_session_data_pending(STATUS result)$/;"	f
expect_session_get_authenticated_conn	tests/asd_main_tests.c	/^void expect_session_get_authenticated_conn(STATUS result)$/;"	f
expect_session_get_authenticated_conn	tests/auth_pam_tests.c	/^void expect_session_get_authenticated_conn(STATUS status)$/;"	f
expect_session_get_data_pending	tests/asd_main_tests.c	/^void expect_session_get_data_pending(STATUS result, bool pending)$/;"	f
expect_session_getfds	tests/asd_main_tests.c	/^void expect_session_getfds(STATUS result, int index)$/;"	f
expect_session_lookup_conn	tests/asd_main_tests.c	/^void expect_session_lookup_conn(extnet_conn_t* conn, int expected_fd)$/;"	f
expect_session_open	tests/asd_main_tests.c	/^void expect_session_open()$/;"	f
expect_set_config_defaults	tests/asd_main_tests.c	/^void expect_set_config_defaults(STATUS result)$/;"	f
expect_setsocketopt	tests/ext_network_tests.c	/^void expect_setsocketopt(int optname, int result, int expected_socket,$/;"	f
expect_setsockopt	tests/ext_tls_tests.c	/^void expect_setsockopt(bool success, int expected_fd)$/;"	f
expect_socket_create	tests/ext_network_tests.c	/^void expect_socket_create(int socket_result)$/;"	f
extconn	session.h	/^    extnet_conn_t extconn; \/\/ External Connection$/;"	m	struct:__anon35
extnet	asd_main.h	/^    ExtNet* extnet;$/;"	m	struct:asd_state
extnet	session.h	/^    ExtNet* extnet;$/;"	m	struct:Session
extnet	tests/session_tests.c	/^static ExtNet extnet;$/;"	v	file:
extnet_accept_connection	ext_network.c	/^STATUS extnet_accept_connection(ExtNet* state, int ext_listen_sockfd,$/;"	f
extnet_accept_connection_failure_test	tests/ext_network_tests.c	/^void extnet_accept_connection_failure_test(void** state)$/;"	f
extnet_accept_connection_invalid_params_test	tests/ext_network_tests.c	/^void extnet_accept_connection_invalid_params_test(void** state)$/;"	f
extnet_accept_connection_on_accept_failure_test	tests/ext_network_tests.c	/^void extnet_accept_connection_on_accept_failure_test(void** state)$/;"	f
extnet_accept_connection_success_test	tests/ext_network_tests.c	/^void extnet_accept_connection_success_test(void** state)$/;"	f
extnet_close_client	ext_network.c	/^STATUS extnet_close_client(ExtNet* state, extnet_conn_t* pconn)$/;"	f
extnet_close_client_already_closed_test	tests/ext_network_tests.c	/^void extnet_close_client_already_closed_test(void** state)$/;"	f
extnet_close_client_failure_test	tests/ext_network_tests.c	/^void extnet_close_client_failure_test(void** state)$/;"	f
extnet_close_client_invalid_params_test	tests/ext_network_tests.c	/^void extnet_close_client_invalid_params_test(void** state)$/;"	f
extnet_close_client_socket_close_failure_test	tests/ext_network_tests.c	/^void extnet_close_client_socket_close_failure_test(void** state)$/;"	f
extnet_close_client_success_test	tests/ext_network_tests.c	/^void extnet_close_client_success_test(void** state)$/;"	f
extnet_conn_t	ext_network.h	/^} extnet_conn_t;$/;"	t	typeref:struct:__anon24
extnet_hdlr_type_t	ext_network.h	/^} extnet_hdlr_type_t;$/;"	t	typeref:enum:__anon25
extnet_hdlrs_t	ext_network.h	/^} extnet_hdlrs_t;$/;"	t	typeref:struct:__anon26
extnet_init	ext_network.c	/^ExtNet* extnet_init(extnet_hdlr_type_t e_type, void* p_hdlr_data,$/;"	f
extnet_init_client	ext_network.c	/^STATUS extnet_init_client(ExtNet* state, extnet_conn_t* pconn)$/;"	f
extnet_init_client_failure_test	tests/ext_network_tests.c	/^void extnet_init_client_failure_test(void** state)$/;"	f
extnet_init_client_invalid_params_test	tests/ext_network_tests.c	/^void extnet_init_client_invalid_params_test(void** state)$/;"	f
extnet_init_client_success_test	tests/ext_network_tests.c	/^void extnet_init_client_success_test(void** state)$/;"	f
extnet_init_handler_init_fail_test	tests/ext_network_tests.c	/^void extnet_init_handler_init_fail_test(void** state)$/;"	f
extnet_init_invalid_params_test	tests/ext_network_tests.c	/^void extnet_init_invalid_params_test(void** state)$/;"	f
extnet_init_malloc_fail_test	tests/ext_network_tests.c	/^void extnet_init_malloc_fail_test(void** state)$/;"	f
extnet_init_non_encrypted_success_test	tests/ext_network_tests.c	/^void extnet_init_non_encrypted_success_test(void** state)$/;"	f
extnet_init_tls_success_test	tests/ext_network_tests.c	/^void extnet_init_tls_success_test(void** state)$/;"	f
extnet_init_unsupported_type_test	tests/ext_network_tests.c	/^void extnet_init_unsupported_type_test(void** state)$/;"	f
extnet_is_client_closed	ext_network.c	/^bool extnet_is_client_closed(ExtNet* state, extnet_conn_t* pconn)$/;"	f
extnet_is_client_closed_invalid_params_test	tests/ext_network_tests.c	/^void extnet_is_client_closed_invalid_params_test(void** state)$/;"	f
extnet_is_client_closed_success_test	tests/ext_network_tests.c	/^void extnet_is_client_closed_success_test(void** state)$/;"	f
extnet_open_external_socket	ext_network.c	/^STATUS extnet_open_external_socket(ExtNet* state, const char* cp_bind_if,$/;"	f
extnet_open_external_socket_bind_fail_test	tests/ext_network_tests.c	/^void extnet_open_external_socket_bind_fail_test(void** state)$/;"	f
extnet_open_external_socket_create_fail_test	tests/ext_network_tests.c	/^void extnet_open_external_socket_create_fail_test(void** state)$/;"	f
extnet_open_external_socket_invalid_params_test	tests/ext_network_tests.c	/^void extnet_open_external_socket_invalid_params_test(void** state)$/;"	f
extnet_open_external_socket_listen_fail_test	tests/ext_network_tests.c	/^void extnet_open_external_socket_listen_fail_test(void** state)$/;"	f
extnet_open_external_socket_setsockopt_SO_BINDTODEVICE_fail_test	tests/ext_network_tests.c	/^void extnet_open_external_socket_setsockopt_SO_BINDTODEVICE_fail_test($/;"	f
extnet_open_external_socket_setsockopt_SO_REUSEADDR_fail_test	tests/ext_network_tests.c	/^void extnet_open_external_socket_setsockopt_SO_REUSEADDR_fail_test(void** state)$/;"	f
extnet_open_external_socket_setsockopt_TCP_NODELAY_fail_test	tests/ext_network_tests.c	/^void extnet_open_external_socket_setsockopt_TCP_NODELAY_fail_test(void** state)$/;"	f
extnet_open_external_socket_success_test	tests/ext_network_tests.c	/^void extnet_open_external_socket_success_test(void** state)$/;"	f
extnet_recv	ext_network.c	/^int extnet_recv(ExtNet* state, extnet_conn_t* pconn, void* pv_buf,$/;"	f
extnet_recv_invalid_params_test	tests/ext_network_tests.c	/^void extnet_recv_invalid_params_test(void** state)$/;"	f
extnet_recv_success_test	tests/ext_network_tests.c	/^void extnet_recv_success_test(void** state)$/;"	f
extnet_send	ext_network.c	/^int extnet_send(ExtNet* state, extnet_conn_t* pconn, void* pv_buf,$/;"	f
extnet_send_invalid_params_test	tests/ext_network_tests.c	/^void extnet_send_invalid_params_test(void** state)$/;"	f
extnet_send_success_test	tests/ext_network_tests.c	/^void extnet_send_success_test(void** state)$/;"	f
exttcp_cleanup	ext_tcp.c	/^void exttcp_cleanup(void)$/;"	f
exttcp_cleanup_returns_without_issue_test	tests/ext_tcp_tests.c	/^void exttcp_cleanup_returns_without_issue_test(void** state)$/;"	f
exttcp_init	ext_tcp.c	/^STATUS exttcp_init(void* p_hdlr_data)$/;"	f
exttcp_init_client	ext_tcp.c	/^STATUS exttcp_init_client(extnet_conn_t* pconn)$/;"	f
exttcp_init_client_returns_success_test	tests/ext_tcp_tests.c	/^void exttcp_init_client_returns_success_test(void** state)$/;"	f
exttcp_init_returns_success_test	tests/ext_tcp_tests.c	/^void exttcp_init_returns_success_test(void** state)$/;"	f
exttcp_on_accept	ext_tcp.c	/^STATUS exttcp_on_accept(void* net_state, extnet_conn_t* pconn)$/;"	f
exttcp_on_accept_returns_success_test	tests/ext_tcp_tests.c	/^void exttcp_on_accept_returns_success_test(void** state)$/;"	f
exttcp_on_close_client	ext_tcp.c	/^STATUS exttcp_on_close_client(extnet_conn_t* pconn)$/;"	f
exttcp_on_close_client_returns_success_test	tests/ext_tcp_tests.c	/^void exttcp_on_close_client_returns_success_test(void** state)$/;"	f
exttcp_recv	ext_tcp.c	/^int exttcp_recv(extnet_conn_t* pconn, void* pv_buf, size_t sz_len,$/;"	f
exttcp_recv_returns_calls_recv_test	tests/ext_tcp_tests.c	/^void exttcp_recv_returns_calls_recv_test(void** state)$/;"	f
exttcp_recv_returns_error_on_invalid_buffer_pointer_test	tests/ext_tcp_tests.c	/^void exttcp_recv_returns_error_on_invalid_buffer_pointer_test(void** state)$/;"	f
exttcp_recv_returns_error_on_invalid_connection_pointer_test	tests/ext_tcp_tests.c	/^void exttcp_recv_returns_error_on_invalid_connection_pointer_test(void** state)$/;"	f
exttcp_recv_returns_error_on_invalid_socket_fd_test	tests/ext_tcp_tests.c	/^void exttcp_recv_returns_error_on_invalid_socket_fd_test(void** state)$/;"	f
exttcp_send	ext_tcp.c	/^int exttcp_send(extnet_conn_t* pconn, void* pv_buf, size_t sz_len)$/;"	f
exttcp_send_returns_calls_recv_test	tests/ext_tcp_tests.c	/^void exttcp_send_returns_calls_recv_test(void** state)$/;"	f
exttcp_send_returns_error_on_invalid_buffer_pointer_test	tests/ext_tcp_tests.c	/^void exttcp_send_returns_error_on_invalid_buffer_pointer_test(void** state)$/;"	f
exttcp_send_returns_error_on_invalid_connection_pointer_test	tests/ext_tcp_tests.c	/^void exttcp_send_returns_error_on_invalid_connection_pointer_test(void** state)$/;"	f
exttcp_send_returns_error_on_invalid_socket_fd_test	tests/ext_tcp_tests.c	/^void exttcp_send_returns_error_on_invalid_socket_fd_test(void** state)$/;"	f
exttls_cleanup	ext_tls.c	/^void exttls_cleanup(void)$/;"	f
exttls_cleanup_success_test	tests/ext_tls_tests.c	/^void exttls_cleanup_success_test(void** state)$/;"	f
exttls_has_read_error	ext_tls.c	/^static STATUS exttls_has_read_error(SSL* ssl, int n_errcode)$/;"	f	file:
exttls_has_read_error_closed	ext_tls.c	/^static STATUS exttls_has_read_error_closed(SSL* ssl, int n_errcode)$/;"	f	file:
exttls_has_write_error	ext_tls.c	/^STATUS exttls_has_write_error(SSL* ssl, int n_errcode)$/;"	f
exttls_init	ext_tls.c	/^STATUS exttls_init(void* p_hdlr_data)$/;"	f
exttls_init_SSL_CTX_check_private_key_failure_test	tests/ext_tls_tests.c	/^void exttls_init_SSL_CTX_check_private_key_failure_test(void** state)$/;"	f
exttls_init_SSL_CTX_use_PrivateKey_file_failure_test	tests/ext_tls_tests.c	/^void exttls_init_SSL_CTX_use_PrivateKey_file_failure_test(void** state)$/;"	f
exttls_init_SSL_CTX_use_certificate_file_failure_test	tests/ext_tls_tests.c	/^void exttls_init_SSL_CTX_use_certificate_file_failure_test(void** state)$/;"	f
exttls_init_SSL_ctx_new_failed_test	tests/ext_tls_tests.c	/^void exttls_init_SSL_ctx_new_failed_test(void** state)$/;"	f
exttls_init_client	ext_tls.c	/^STATUS exttls_init_client(extnet_conn_t* pconn)$/;"	f
exttls_init_client_invalid_params_test	tests/ext_tls_tests.c	/^void exttls_init_client_invalid_params_test(void** state)$/;"	f
exttls_init_client_success_test	tests/ext_tls_tests.c	/^void exttls_init_client_success_test(void** state)$/;"	f
exttls_init_invalid_params_test	tests/ext_tls_tests.c	/^void exttls_init_invalid_params_test(void** state)$/;"	f
exttls_init_no_valid_cipher_found_test	tests/ext_tls_tests.c	/^void exttls_init_no_valid_cipher_found_test(void** state)$/;"	f
exttls_init_success_test	tests/ext_tls_tests.c	/^void exttls_init_success_test(void** state)$/;"	f
exttls_on_accept	ext_tls.c	/^STATUS exttls_on_accept(void* net_state, extnet_conn_t* pconn)$/;"	f
exttls_on_accept_SSL_accept_fatal_failure_test	tests/ext_tls_tests.c	/^void exttls_on_accept_SSL_accept_fatal_failure_test(void** state)$/;"	f
exttls_on_accept_SSL_accept_not_successful_test	tests/ext_tls_tests.c	/^void exttls_on_accept_SSL_accept_not_successful_test(void** state)$/;"	f
exttls_on_accept_SSL_accept_timeout_test	tests/ext_tls_tests.c	/^void exttls_on_accept_SSL_accept_timeout_test(void** state)$/;"	f
exttls_on_accept_SSL_get_peer_certificate_failure_test	tests/ext_tls_tests.c	/^void exttls_on_accept_SSL_get_peer_certificate_failure_test(void** state)$/;"	f
exttls_on_accept_SSL_set_fd_failure_test	tests/ext_tls_tests.c	/^void exttls_on_accept_SSL_set_fd_failure_test(void** state)$/;"	f
exttls_on_accept_invalid_params_test	tests/ext_tls_tests.c	/^void exttls_on_accept_invalid_params_test(void** state)$/;"	f
exttls_on_accept_invalid_socket_test	tests/ext_tls_tests.c	/^void exttls_on_accept_invalid_socket_test(void** state)$/;"	f
exttls_on_accept_setsockopt_failure_test	tests/ext_tls_tests.c	/^void exttls_on_accept_setsockopt_failure_test(void** state)$/;"	f
exttls_on_accept_ssl_new_failure_test	tests/ext_tls_tests.c	/^void exttls_on_accept_ssl_new_failure_test(void** state)$/;"	f
exttls_on_accept_success_test	tests/ext_tls_tests.c	/^void exttls_on_accept_success_test(void** state)$/;"	f
exttls_on_close_client	ext_tls.c	/^STATUS exttls_on_close_client(extnet_conn_t* pconn)$/;"	f
exttls_on_close_client_invalid_params_test	tests/ext_tls_tests.c	/^void exttls_on_close_client_invalid_params_test(void** state)$/;"	f
exttls_on_close_client_success_test	tests/ext_tls_tests.c	/^void exttls_on_close_client_success_test(void** state)$/;"	f
exttls_recv	ext_tls.c	/^int exttls_recv(extnet_conn_t* pconn, void* pv_buf, size_t sz_len,$/;"	f
exttls_recv_errors_test	tests/ext_tls_tests.c	/^void exttls_recv_errors_test(void** state)$/;"	f
exttls_recv_invalid_params_test	tests/ext_tls_tests.c	/^void exttls_recv_invalid_params_test(void** state)$/;"	f
exttls_recv_success_test	tests/ext_tls_tests.c	/^void exttls_recv_success_test(void** state)$/;"	f
exttls_send	ext_tls.c	/^int exttls_send(extnet_conn_t* pconn, void* pv_buf, size_t sz_len)$/;"	f
exttls_send_errors_test	tests/ext_tls_tests.c	/^void exttls_send_errors_test(void** state)$/;"	f
exttls_send_invalid_params_test	tests/ext_tls_tests.c	/^void exttls_send_invalid_params_test(void** state)$/;"	f
exttls_send_success_test	tests/ext_tls_tests.c	/^void exttls_send_success_test(void** state)$/;"	f
fake_auth_none	tests/authenticate_tests.c	/^STATUS fake_auth_none(Session* session, ExtNet* state, extnet_conn_t* p_extconn)$/;"	f
fake_auth_none_was_called	tests/authenticate_tests.c	/^bool fake_auth_none_was_called = false;$/;"	v
fake_auth_pam	tests/authenticate_tests.c	/^STATUS fake_auth_pam(Session* session, ExtNet* state, extnet_conn_t* p_extconn)$/;"	f
fake_auth_pam_was_called	tests/authenticate_tests.c	/^bool fake_auth_pam_was_called = false;$/;"	v
fake_authnone_init	tests/authenticate_tests.c	/^STATUS fake_authnone_init(void* p_hdlr_data)$/;"	f
fake_authnone_init_was_called	tests/authenticate_tests.c	/^bool fake_authnone_init_was_called = false;$/;"	v
fake_authpam_init	tests/authenticate_tests.c	/^STATUS fake_authpam_init(void* p_hdlr_data)$/;"	f
fake_authpam_init_was_called	tests/authenticate_tests.c	/^bool fake_authpam_init_was_called = false;$/;"	v
fake_exttcp_cleanup	tests/ext_network_tests.c	/^void fake_exttcp_cleanup(void)$/;"	f
fake_exttcp_init	tests/ext_network_tests.c	/^STATUS fake_exttcp_init(void* p_hdlr_data)$/;"	f
fake_exttcp_init_client	tests/ext_network_tests.c	/^STATUS fake_exttcp_init_client(extnet_conn_t* pconn)$/;"	f
fake_exttcp_on_accept	tests/ext_network_tests.c	/^STATUS fake_exttcp_on_accept(void* net_state, extnet_conn_t* pconn)$/;"	f
fake_exttcp_on_close_client	tests/ext_network_tests.c	/^STATUS fake_exttcp_on_close_client(extnet_conn_t* pconn)$/;"	f
fake_exttcp_recv	tests/ext_network_tests.c	/^int fake_exttcp_recv(extnet_conn_t* pconn, void* pv_buf, size_t sz_len,$/;"	f
fake_exttcp_send	tests/ext_network_tests.c	/^int fake_exttcp_send(extnet_conn_t* pconn, void* pv_buf, size_t sz_len)$/;"	f
fd	dbus_helper.h	/^    int fd;$/;"	m	struct:Dbus_Handle
fd	target_handler.h	/^    int fd;$/;"	m	struct:Target_Control_GPIO
fd	tests/target_handler_tests.c	/^    int fd;$/;"	m	struct:gpiod_chip	file:
fd_handle	tests/target_handler_tests.c	/^    struct line_fd_handle* fd_handle;$/;"	m	struct:gpiod_line	typeref:struct:gpiod_line::line_fd_handle	file:
feature	tests/jtag.h	/^    __u32 feature;$/;"	m	struct:jtag_mode
find_gpio	target_handler.c	/^STATUS find_gpio(char* gpio_name, int* gpio_number)$/;"	f
find_gpio_base	target_handler.c	/^STATUS find_gpio_base(char* gpio_name, int* gpio_base)$/;"	f
find_pattern	jtag_test.c	/^unsigned int find_pattern(const unsigned char* haystack,$/;"	f
find_pattern_found_returns_value	tests/jtag_test_tests.c	/^static void find_pattern_found_returns_value(void** state)$/;"	f	file:
find_pattern_not_found_returns_0	tests/jtag_test_tests.c	/^static void find_pattern_not_found_returns_0(void** state)$/;"	f	file:
flock_i2c	asd_msg.c	/^STATUS flock_i2c(ASD_MSG* state, int op)$/;"	f
fname_json	target_handler.h	/^    const char* fname_json;$/;"	m	struct:data_json_map
force_stop	asd_common.h	/^    bool force_stop;$/;"	m	struct:asd_i2c_msg
free_fail	tests/asd_main_tests.c	/^static bool free_fail;$/;"	v	file:
from	tests/jtag.h	/^    __u8 from;$/;"	m	struct:jtag_tap_state
from	tests/jtag.h	/^    __u8 from;$/;"	m	struct:jtag_xfer
from_state	tests/jtag_drv.h	/^    __u32 from_state;$/;"	m	struct:tap_state_param
ftype	target_handler.h	/^    char ftype;$/;"	m	struct:data_json_map
getTestMsg	tests/i2c_msg_builder_tests.c	/^void getTestMsg(uint8_t address, asd_i2c_msg* msg)$/;"	f
get_default_args	tests/jtag_test_tests.c	/^jtag_test_args get_default_args()$/;"	f
get_fake_message	tests/asd_msg_tests.c	/^void get_fake_message(uint32_t type, struct asd_message* msg)$/;"	f
get_message_size	asd_msg.c	/^int get_message_size(struct asd_message* s_message)$/;"	f
get_packet_data	asd_msg.c	/^void* get_packet_data(struct packet_data* packet, int bytes_wanted)$/;"	f
get_pin_events	target_handler.c	/^static inline void get_pin_events(Target_Control_GPIO gpio, short* events)$/;"	f	file:
get_random_string	auth_pam.c	/^static STATUS get_random_string(unsigned char* cp_buf, int n_sz)$/;"	f	file:
get_scan_length	asd_msg.c	/^static void get_scan_length(const unsigned char cmd, uint8_t* num_of_bits,$/;"	f	file:
get_tck_param	tests/jtag_drv.h	/^struct get_tck_param$/;"	s
global_i2c_config	tests/asd_msg_tests.c	/^static i2c_config global_i2c_config;$/;"	v	file:
global_i2c_config	tests/i2c_handler_tests.c	/^static i2c_config global_i2c_config;$/;"	v	file:
gpio_export	gpio.c	/^STATUS gpio_export(int gpio, int* gpio_fd)$/;"	f
gpio_export_already_exported_test	tests/gpio_tests.c	/^void gpio_export_already_exported_test(void** state)$/;"	f
gpio_export_fail_test	tests/gpio_tests.c	/^void gpio_export_fail_test(void** state)$/;"	f
gpio_export_failed_to_get_fd_after_export_test	tests/gpio_tests.c	/^void gpio_export_failed_to_get_fd_after_export_test(void** state)$/;"	f
gpio_export_invalid_param_test	tests/gpio_tests.c	/^void gpio_export_invalid_param_test(void** state)$/;"	f
gpio_export_open_fail_test	tests/gpio_tests.c	/^void gpio_export_open_fail_test(void** state)$/;"	f
gpio_export_success_test	tests/gpio_tests.c	/^void gpio_export_success_test(void** state)$/;"	f
gpio_get_value	gpio.c	/^STATUS gpio_get_value(int fd, int* value)$/;"	f
gpio_get_value_invalid_parameter_test	tests/gpio_tests.c	/^void gpio_get_value_invalid_parameter_test(void** state)$/;"	f
gpio_get_value_success_asserted_test	tests/gpio_tests.c	/^void gpio_get_value_success_asserted_test(void** state)$/;"	f
gpio_get_value_success_deasserted_test	tests/gpio_tests.c	/^void gpio_get_value_success_deasserted_test(void** state)$/;"	f
gpio_set_active_low	gpio.c	/^STATUS gpio_set_active_low(int gpio, bool active_low)$/;"	f
gpio_set_active_low_doesnt_exist_test	tests/gpio_tests.c	/^void gpio_set_active_low_doesnt_exist_test(void** state)$/;"	f
gpio_set_active_low_success_test	tests/gpio_tests.c	/^void gpio_set_active_low_success_test(void** state)$/;"	f
gpio_set_active_low_write_fail_test	tests/gpio_tests.c	/^void gpio_set_active_low_write_fail_test(void** state)$/;"	f
gpio_set_direction	gpio.c	/^STATUS gpio_set_direction(int gpio, GPIO_DIRECTION direction)$/;"	f
gpio_set_direction_doesnt_exist_test	tests/gpio_tests.c	/^void gpio_set_direction_doesnt_exist_test(void** state)$/;"	f
gpio_set_direction_high_test	tests/gpio_tests.c	/^void gpio_set_direction_high_test(void** state)$/;"	f
gpio_set_direction_in_test	tests/gpio_tests.c	/^void gpio_set_direction_in_test(void** state)$/;"	f
gpio_set_direction_low_test	tests/gpio_tests.c	/^void gpio_set_direction_low_test(void** state)$/;"	f
gpio_set_direction_out_test	tests/gpio_tests.c	/^void gpio_set_direction_out_test(void** state)$/;"	f
gpio_set_edge	gpio.c	/^STATUS gpio_set_edge(int gpio, GPIO_EDGE edge)$/;"	f
gpio_set_edge_both_test	tests/gpio_tests.c	/^void gpio_set_edge_both_test(void** state)$/;"	f
gpio_set_edge_doesnt_exist_test	tests/gpio_tests.c	/^void gpio_set_edge_doesnt_exist_test(void** state)$/;"	f
gpio_set_edge_falling_test	tests/gpio_tests.c	/^void gpio_set_edge_falling_test(void** state)$/;"	f
gpio_set_edge_none_test	tests/gpio_tests.c	/^void gpio_set_edge_none_test(void** state)$/;"	f
gpio_set_edge_rising_test	tests/gpio_tests.c	/^void gpio_set_edge_rising_test(void** state)$/;"	f
gpio_set_value	gpio.c	/^STATUS gpio_set_value(int fd, int value)$/;"	f
gpio_set_value_success_test	tests/gpio_tests.c	/^void gpio_set_value_success_test(void** state)$/;"	f
gpio_set_value_write_fail_test	tests/gpio_tests.c	/^void gpio_set_value_write_fail_test(void** state)$/;"	f
gpio_unexport	gpio.c	/^STATUS gpio_unexport(int gpio)$/;"	f
gpio_unexport_fail_test	tests/gpio_tests.c	/^void gpio_unexport_fail_test(void** state)$/;"	f
gpio_unexport_not_exported_test	tests/gpio_tests.c	/^void gpio_unexport_not_exported_test(void** state)$/;"	f
gpio_unexport_open_fail_test	tests/gpio_tests.c	/^void gpio_unexport_open_fail_test(void** state)$/;"	f
gpio_unexport_success_test	tests/gpio_tests.c	/^void gpio_unexport_success_test(void** state)$/;"	f
gpiochip0	tests/target_handler_tests.c	/^struct gpiod_chip gpiochip0 = {$/;"	v	typeref:struct:gpiod_chip
gpiod_chip	tests/target_handler_tests.c	/^struct gpiod_chip$/;"	s	file:
gpiod_line	tests/target_handler_tests.c	/^struct gpiod_line$/;"	s	file:
gpiod_line_asd_data	tests/target_handler_tests.c	/^gpiod_line_data gpiod_line_asd_data[] = {$/;"	v
gpiod_line_data	tests/target_handler_tests.c	/^} gpiod_line_data;$/;"	t	typeref:struct:_gpiod_line_data	file:
gpios	target_handler.h	/^    Target_Control_GPIO gpios[NUM_GPIOS];$/;"	m	struct:Target_Control_Handle
handler	target_handler.h	/^    TargetHandlerEventFunctionPtr handler;$/;"	m	struct:Target_Control_GPIO
handlers_initialized	asd_msg.h	/^    bool handlers_initialized;$/;"	m	struct:ASD_MSG
header	asd_common.h	/^    struct message_header header;$/;"	m	struct:asd_message	typeref:struct:asd_message::message_header
headerType	asd_common.h	/^} headerType;$/;"	t	typeref:enum:__anon4
host_fd	asd_main.h	/^    int host_fd;$/;"	m	struct:asd_state
human_readable	jtag_test.h	/^    unsigned long long int human_readable;$/;"	m	struct:jtag_test_args
human_readable	tests/jtag_test_tests.c	/^unsigned long long human_readable = 0xdeadbeefbad4f00d;$/;"	v
i2c	asd_main.h	/^    i2c_options i2c;$/;"	m	struct:asd_args
i2c	config.h	/^    i2c_config i2c;$/;"	m	struct:config
i2c_bus	i2c_handler.h	/^    uint8_t i2c_bus;$/;"	m	struct:I2C_Handler
i2c_bus_allowed	i2c_handler.c	/^bool i2c_bus_allowed(I2C_Handler* state, uint8_t bus)$/;"	f
i2c_bus_select	i2c_handler.c	/^STATUS i2c_bus_select(I2C_Handler* state, uint8_t bus)$/;"	f
i2c_bus_select_close_test	tests/i2c_handler_tests.c	/^void i2c_bus_select_close_test()$/;"	f
i2c_bus_select_disallowed_bus_test	tests/i2c_handler_tests.c	/^void i2c_bus_select_disallowed_bus_test()$/;"	f
i2c_bus_select_i2c_disabled_test	tests/i2c_handler_tests.c	/^void i2c_bus_select_i2c_disabled_test()$/;"	f
i2c_bus_select_i2c_open_driver_test	tests/i2c_handler_tests.c	/^void i2c_bus_select_i2c_open_driver_test(void** state)$/;"	f
i2c_bus_select_max_bus_test	tests/i2c_handler_tests.c	/^void i2c_bus_select_max_bus_test()$/;"	f
i2c_bus_select_no_op_test	tests/i2c_handler_tests.c	/^void i2c_bus_select_no_op_test()$/;"	f
i2c_bus_select_null_state_test	tests/i2c_handler_tests.c	/^void i2c_bus_select_null_state_test()$/;"	f
i2c_bus_select_open_test	tests/i2c_handler_tests.c	/^void i2c_bus_select_open_test(void** state)$/;"	f
i2c_close_driver	i2c_handler.c	/^void i2c_close_driver(I2C_Handler* state)$/;"	f
i2c_config	config.h	/^typedef struct i2c_config$/;"	s
i2c_config	config.h	/^} i2c_config;$/;"	t	typeref:struct:i2c_config
i2c_deinitialize	i2c_handler.c	/^STATUS i2c_deinitialize(I2C_Handler* state)$/;"	f
i2c_deinitialize_closes_driver_test	tests/i2c_handler_tests.c	/^void i2c_deinitialize_closes_driver_test()$/;"	f
i2c_deinitialize_null_state_test	tests/i2c_handler_tests.c	/^void i2c_deinitialize_null_state_test()$/;"	f
i2c_driver_handle	i2c_handler.h	/^    int i2c_driver_handle;$/;"	m	struct:I2C_Handler
i2c_enabled	i2c_handler.c	/^bool i2c_enabled(I2C_Handler* state)$/;"	f
i2c_handler	asd_msg.h	/^    I2C_Handler* i2c_handler;$/;"	m	struct:ASD_MSG
i2c_initialize	i2c_handler.c	/^STATUS i2c_initialize(I2C_Handler* state)$/;"	f
i2c_initialize_i2c_disabled_test	tests/i2c_handler_tests.c	/^void i2c_initialize_i2c_disabled_test()$/;"	f
i2c_initialize_initializes_default_bus_test	tests/i2c_handler_tests.c	/^void i2c_initialize_initializes_default_bus_test()$/;"	f
i2c_initialize_null_state_test	tests/i2c_handler_tests.c	/^void i2c_initialize_null_state_test()$/;"	f
i2c_lock_unlock_test	tests/asd_msg_tests.c	/^void i2c_lock_unlock_test(void** state)$/;"	f
i2c_msg_add	i2c_msg_builder.c	/^STATUS i2c_msg_add(I2C_Msg_Builder* state, asd_i2c_msg* msg)$/;"	f
i2c_msg_add_null_asd_i2c_msg_returns_error_test	tests/i2c_msg_builder_tests.c	/^void i2c_msg_add_null_asd_i2c_msg_returns_error_test(void** state)$/;"	f
i2c_msg_add_null_state_returns_error_test	tests/i2c_msg_builder_tests.c	/^void i2c_msg_add_null_state_returns_error_test()$/;"	f
i2c_msg_add_one_message_test	tests/i2c_msg_builder_tests.c	/^void i2c_msg_add_one_message_test(void** state)$/;"	f
i2c_msg_add_three_messages_test	tests/i2c_msg_builder_tests.c	/^void i2c_msg_add_three_messages_test(void** state)$/;"	f
i2c_msg_deinitialize	i2c_msg_builder.c	/^STATUS i2c_msg_deinitialize(I2C_Msg_Builder* state)$/;"	f
i2c_msg_deinitialize_frees_i2c_rdwr_ioctl_data_test	tests/i2c_msg_builder_tests.c	/^void i2c_msg_deinitialize_frees_i2c_rdwr_ioctl_data_test()$/;"	f
i2c_msg_deinitialize_null_state_returns_error_test	tests/i2c_msg_builder_tests.c	/^void i2c_msg_deinitialize_null_state_returns_error_test()$/;"	f
i2c_msg_get_asd_i2c_msg	i2c_msg_builder.c	/^STATUS i2c_msg_get_asd_i2c_msg(I2C_Msg_Builder* state, uint32_t index,$/;"	f
i2c_msg_get_asd_i2c_msg_invalid_index_test	tests/i2c_msg_builder_tests.c	/^void i2c_msg_get_asd_i2c_msg_invalid_index_test(void** state)$/;"	f
i2c_msg_get_asd_i2c_msg_mode	tests/asd_msg_tests.c	/^static bool i2c_msg_get_asd_i2c_msg_mode = false;$/;"	v	file:
i2c_msg_get_asd_i2c_msg_null_asd_i2c_msg_returns_error_test	tests/i2c_msg_builder_tests.c	/^void i2c_msg_get_asd_i2c_msg_null_asd_i2c_msg_returns_error_test(void** state)$/;"	f
i2c_msg_get_asd_i2c_msg_null_state_returns_error_test	tests/i2c_msg_builder_tests.c	/^void i2c_msg_get_asd_i2c_msg_null_state_returns_error_test()$/;"	f
i2c_msg_get_asd_i2c_msg_test	tests/i2c_msg_builder_tests.c	/^void i2c_msg_get_asd_i2c_msg_test(void** state)$/;"	f
i2c_msg_get_count	i2c_msg_builder.c	/^STATUS i2c_msg_get_count(I2C_Msg_Builder* state, uint32_t* count)$/;"	f
i2c_msg_get_count_mode	tests/asd_msg_tests.c	/^static bool i2c_msg_get_count_mode = false;$/;"	v	file:
i2c_msg_get_count_null_count_returns_error_test	tests/i2c_msg_builder_tests.c	/^void i2c_msg_get_count_null_count_returns_error_test(void** state)$/;"	f
i2c_msg_get_count_null_state_returns_error_test	tests/i2c_msg_builder_tests.c	/^void i2c_msg_get_count_null_state_returns_error_test()$/;"	f
i2c_msg_get_count_three_messages_test	tests/i2c_msg_builder_tests.c	/^void i2c_msg_get_count_three_messages_test(void** state)$/;"	f
i2c_msg_initialize	i2c_msg_builder.c	/^STATUS i2c_msg_initialize(I2C_Msg_Builder* state)$/;"	f
i2c_msg_initialize_creates_i2c_rdwr_ioctl_data_test	tests/i2c_msg_builder_tests.c	/^void i2c_msg_initialize_creates_i2c_rdwr_ioctl_data_test()$/;"	f
i2c_msg_initialize_null_state_returns_error_test	tests/i2c_msg_builder_tests.c	/^void i2c_msg_initialize_null_state_returns_error_test()$/;"	f
i2c_msg_reset	i2c_msg_builder.c	/^STATUS i2c_msg_reset(I2C_Msg_Builder* state)$/;"	f
i2c_msg_reset_null_state_returns_error_test	tests/i2c_msg_builder_tests.c	/^void i2c_msg_reset_null_state_returns_error_test()$/;"	f
i2c_msg_reset_test	tests/i2c_msg_builder_tests.c	/^void i2c_msg_reset_test()$/;"	f
i2c_open_driver	i2c_handler.c	/^STATUS i2c_open_driver(I2C_Handler* state, uint8_t bus)$/;"	f
i2c_options	asd_common.h	/^typedef struct i2c_options$/;"	s
i2c_options	asd_common.h	/^} i2c_options;$/;"	t	typeref:struct:i2c_options
i2c_read_write	i2c_handler.c	/^STATUS i2c_read_write(I2C_Handler* state, void* msg_set)$/;"	f
i2c_read_write_i2c_not_enabled_test	tests/i2c_handler_tests.c	/^void i2c_read_write_i2c_not_enabled_test()$/;"	f
i2c_read_write_ioclt_fail_test	tests/i2c_handler_tests.c	/^void i2c_read_write_ioclt_fail_test()$/;"	f
i2c_read_write_null_msg_set_test	tests/i2c_handler_tests.c	/^void i2c_read_write_null_msg_set_test()$/;"	f
i2c_read_write_null_state_test	tests/i2c_handler_tests.c	/^void i2c_read_write_null_state_test()$/;"	f
i2c_read_write_success_test	tests/i2c_handler_tests.c	/^void i2c_read_write_success_test()$/;"	f
i2c_set_sclk	i2c_handler.c	/^STATUS i2c_set_sclk(I2C_Handler* state, uint16_t sclk)$/;"	f
i2c_set_sclk_i2c_enabled_test	tests/i2c_handler_tests.c	/^void i2c_set_sclk_i2c_enabled_test()$/;"	f
i2c_set_sclk_i2c_not_enabled_test	tests/i2c_handler_tests.c	/^void i2c_set_sclk_i2c_not_enabled_test()$/;"	f
i2c_set_sclk_null_state_test	tests/i2c_handler_tests.c	/^void i2c_set_sclk_null_state_test()$/;"	f
id	session.h	/^    int id;$/;"	m	struct:__anon35
idcode	jtag_test.h	/^    unsigned int idcode[MAX_TAPS_SUPPORTED];$/;"	m	struct:uncore_info
in_msg	asd_msg.h	/^    struct incoming_msg in_msg;$/;"	m	struct:ASD_MSG	typeref:struct:ASD_MSG::incoming_msg
incoming_msg	asd_msg.h	/^typedef struct incoming_msg$/;"	s
incoming_msg	asd_msg.h	/^} incoming_msg;$/;"	t	typeref:struct:incoming_msg
init	authenticate.h	/^    STATUS (*init)(void* p_hdlr_data);$/;"	m	struct:__anon17
init	ext_network.h	/^    STATUS (*init)(void* p_hdlr_data);$/;"	m	struct:__anon26
init_asd_state	asd_main.c	/^STATUS init_asd_state(asd_state* state)$/;"	f
init_asd_state_handles_auth_init_failure_test	tests/asd_main_tests.c	/^static void init_asd_state_handles_auth_init_failure_test(void** state)$/;"	f	file:
init_asd_state_handles_eventfd_failure_test	tests/asd_main_tests.c	/^void init_asd_state_handles_eventfd_failure_test(void** state)$/;"	f
init_asd_state_handles_extnet_init_failure_test	tests/asd_main_tests.c	/^static void init_asd_state_handles_extnet_init_failure_test(void** state)$/;"	f	file:
init_asd_state_handles_extnet_open_external_socket_failure_test	tests/asd_main_tests.c	/^static void init_asd_state_handles_extnet_open_external_socket_failure_test($/;"	f	file:
init_asd_state_handles_session_init_failure_test	tests/asd_main_tests.c	/^static void init_asd_state_handles_session_init_failure_test(void** state)$/;"	f	file:
init_asd_state_handles_set_config_defaults_failure_test	tests/asd_main_tests.c	/^    init_asd_state_handles_set_config_defaults_failure_test(void** state)$/;"	f	file:
init_asd_state_returns_true_test	tests/asd_main_tests.c	/^static void init_asd_state_returns_true_test(void** state)$/;"	f	file:
init_client	ext_network.h	/^    STATUS (*init_client)(extnet_conn_t* pconn);$/;"	m	struct:__anon26
init_gpios	tests/target_handler_tests.c	/^static inline void init_gpios(Target_Control_Handle* handle)$/;"	f	file:
init_jtag	jtag_test.c	/^JTAG_Handler* init_jtag(jtag_test_args* args)$/;"	f
init_jtag_JTAG_initialize_fail_returns_null_test	tests/jtag_test_tests.c	/^static void init_jtag_JTAG_initialize_fail_returns_null_test(void** state)$/;"	f	file:
init_jtag_JTAG_set_jtag_tck_fail_returns_null_test	tests/jtag_test_tests.c	/^static void init_jtag_JTAG_set_jtag_tck_fail_returns_null_test(void** state)$/;"	f	file:
init_jtag_null_jtag_check_test	tests/jtag_test_tests.c	/^static void init_jtag_null_jtag_check_test(void** state)$/;"	f	file:
init_jtag_success_test	tests/jtag_test_tests.c	/^static void init_jtag_success_test(void** state)$/;"	f	file:
init_logging_map	asd_msg.c	/^void init_logging_map(ASD_MSG* state)$/;"	f
init_session_and_check_success	tests/session_tests.c	/^Session* init_session_and_check_success()$/;"	f
init_ssl_context	ext_tls.c	/^static SSL_CTX* init_ssl_context(const char* cp_certfile,$/;"	f	file:
initialize_gpio	target_handler.c	/^STATUS initialize_gpio(Target_Control_GPIO* gpio)$/;"	f
initialize_gpiod	target_handler.c	/^STATUS initialize_gpiod(Target_Control_GPIO* gpio)$/;"	f
initialize_gpios	target_handler.c	/^STATUS initialize_gpios(Target_Control_Handle* state)$/;"	f
initialize_jtag_chains	jtag_handler.c	/^void initialize_jtag_chains(JTAG_Handler* state)$/;"	f
initialize_powergood_pin_handler	target_handler.c	/^STATUS initialize_powergood_pin_handler(Target_Control_Handle* state)$/;"	f
initialized	target_handler.h	/^    bool initialized;$/;"	m	struct:Target_Control_Handle
initialized	vprobe_handler.h	/^    bool initialized;$/;"	m	struct:vProbe_Handler
instance	asd_msg.c	/^static ASD_MSG* instance = NULL;$/;"	v	file:
int_value	tests/jtag.h	/^    __u32 int_value;$/;"	m	union:pad_config
interrupt_handler	jtag_test.c	/^void interrupt_handler(int dummy)$/;"	f
interrupt_handler_test	tests/jtag_test_tests.c	/^static void interrupt_handler_test(void** state)$/;"	f	file:
ioctl_arg_controller_mode_param	tests/jtag_handler_tests.c	/^struct controller_mode_param* ioctl_arg_controller_mode_param;$/;"	v	typeref:struct:controller_mode_param
ioctl_arg_index	tests/jtag_handler_tests.c	/^static int ioctl_arg_index = 0;$/;"	v	file:
ioctl_arg_scan_xfr	tests/jtag_handler_tests.c	/^struct scan_xfer* ioctl_arg_scan_xfr;$/;"	v	typeref:struct:scan_xfer
ioctl_arg_set_tck_param	tests/jtag_handler_tests.c	/^struct set_tck_param* ioctl_arg_set_tck_param;$/;"	v	typeref:struct:set_tck_param
ioctl_arg_tap_state_param	tests/jtag_handler_tests.c	/^struct tap_state_param* ioctl_arg_tap_state_param;$/;"	v	typeref:struct:tap_state_param
ioctl_arg_tck_bitbang	tests/jtag_handler_tests.c	/^struct tck_bitbang* ioctl_arg_tck_bitbang;$/;"	v	typeref:struct:tck_bitbang
ioctl_arg_types	tests/jtag_handler_tests.c	/^static IoctlArgType ioctl_arg_types[MAX_IOCTLS] = {IoctlArgType_UInt};$/;"	v	file:
ioctl_args	tests/jtag_handler_tests.c	/^static unsigned int ioctl_args;$/;"	v	file:
ioctl_data_ptr	tests/i2c_handler_tests.c	/^struct i2c_rdwr_ioctl_data* ioctl_data_ptr;$/;"	v	typeref:struct:i2c_rdwr_ioctl_data
ipc_asd_log_map	asd_msg.h	/^    IPC_LogType ipc_asd_log_map[6];$/;"	m	struct:ASD_MSG
irPost	jtag_handler.h	/^    unsigned int irPost;$/;"	m	struct:JTAGShiftPadding
irPre	jtag_handler.h	/^    unsigned int irPre;$/;"	m	struct:JTAGShiftPadding
ir_shift_size	jtag_test.h	/^    unsigned int ir_shift_size;$/;"	m	struct:jtag_test_args
ir_value	jtag_test.h	/^    unsigned int ir_value;$/;"	m	struct:jtag_test_args
is_master_probe	target_handler.h	/^    bool is_master_probe;$/;"	m	struct:Target_Control_Handle
jtag	config.h	/^    jtag_config jtag;$/;"	m	struct:config
jtag_cap_dr	jtag_handler.h	53;"	d
jtag_cap_dr	tests/jtag_drv.h	/^    jtag_cap_dr,$/;"	e	enum:jtag_states
jtag_cap_ir	jtag_handler.h	60;"	d
jtag_cap_ir	tests/jtag_drv.h	/^    jtag_cap_ir,$/;"	e	enum:jtag_states
jtag_chain_mode	asd_msg.h	/^    JTAG_CHAIN_SELECT_MODE jtag_chain_mode;$/;"	m	struct:ASD_MSG
jtag_config	config.h	/^typedef struct jtag_config$/;"	s
jtag_config	config.h	/^} jtag_config;$/;"	t	typeref:struct:jtag_config
jtag_ex1_dr	jtag_handler.h	55;"	d
jtag_ex1_dr	tests/jtag_drv.h	/^    jtag_ex1_dr,$/;"	e	enum:jtag_states
jtag_ex1_ir	jtag_handler.h	62;"	d
jtag_ex1_ir	tests/jtag_drv.h	/^    jtag_ex1_ir,$/;"	e	enum:jtag_states
jtag_ex2_dr	jtag_handler.h	57;"	d
jtag_ex2_dr	tests/jtag_drv.h	/^    jtag_ex2_dr,$/;"	e	enum:jtag_states
jtag_ex2_ir	jtag_handler.h	64;"	d
jtag_ex2_ir	tests/jtag_drv.h	/^    jtag_ex2_ir,$/;"	e	enum:jtag_states
jtag_handler	asd_msg.h	/^    JTAG_Handler* jtag_handler;$/;"	m	struct:ASD_MSG
jtag_mode	tests/jtag.h	/^struct jtag_mode$/;"	s
jtag_pau_dr	jtag_handler.h	56;"	d
jtag_pau_dr	tests/jtag_drv.h	/^    jtag_pau_dr,$/;"	e	enum:jtag_states
jtag_pau_ir	jtag_handler.h	63;"	d
jtag_pau_ir	tests/jtag_drv.h	/^    jtag_pau_ir,$/;"	e	enum:jtag_states
jtag_reset	tests/jtag.h	/^enum jtag_reset$/;"	g
jtag_rti	jtag_handler.h	51;"	d
jtag_rti	tests/jtag_drv.h	/^    jtag_rti,$/;"	e	enum:jtag_states
jtag_sel_dr	jtag_handler.h	52;"	d
jtag_sel_dr	tests/jtag_drv.h	/^    jtag_sel_dr,$/;"	e	enum:jtag_states
jtag_sel_ir	jtag_handler.h	59;"	d
jtag_sel_ir	tests/jtag_drv.h	/^    jtag_sel_ir,$/;"	e	enum:jtag_states
jtag_shf_dr	jtag_handler.h	54;"	d
jtag_shf_dr	tests/jtag_drv.h	/^    jtag_shf_dr,$/;"	e	enum:jtag_states
jtag_shf_ir	jtag_handler.h	61;"	d
jtag_shf_ir	tests/jtag_drv.h	/^    jtag_shf_ir,$/;"	e	enum:jtag_states
jtag_states	jtag_handler.h	49;"	d
jtag_states	tests/jtag_drv.h	/^enum jtag_states$/;"	g
jtag_states	tests/jtag_drv.h	/^} jtag_states;$/;"	v	typeref:enum:jtag_states
jtag_tap_state	tests/jtag.h	/^struct jtag_tap_state$/;"	s
jtag_tapstate	tests/jtag.h	/^enum jtag_tapstate$/;"	g
jtag_test	jtag_test.c	/^bool jtag_test(JTAG_Handler* jtag, uncore_info* uncore, jtag_test_args* args)$/;"	f
jtag_test_args	jtag_test.h	/^typedef struct jtag_test_args$/;"	s
jtag_test_args	jtag_test.h	/^} jtag_test_args;$/;"	t	typeref:struct:jtag_test_args
jtag_test_goto_shift_dr_fail_test	tests/jtag_test_tests.c	/^static void jtag_test_goto_shift_dr_fail_test(void** state)$/;"	f	file:
jtag_test_invalid_tdo_fail_test	tests/jtag_test_tests.c	/^static void jtag_test_invalid_tdo_fail_test(void** state)$/;"	f	file:
jtag_test_jtag_shift_dr_fail_test	tests/jtag_test_tests.c	/^static void jtag_test_jtag_shift_dr_fail_test(void** state)$/;"	f	file:
jtag_test_jtag_shift_ir_fail_test	tests/jtag_test_tests.c	/^static void jtag_test_jtag_shift_ir_fail_test(void** state)$/;"	f	file:
jtag_test_jtag_shift_ir_value_test	tests/jtag_test_tests.c	/^static void jtag_test_jtag_shift_ir_value_test(void** state)$/;"	f	file:
jtag_test_main	jtag_test.c	/^int jtag_test_main(int argc, char** argv)$/;"	f
jtag_test_main_basic_fail_test	tests/jtag_test_tests.c	/^static void jtag_test_main_basic_fail_test(void** state)$/;"	f	file:
jtag_test_main_basic_success_test	tests/jtag_test_tests.c	/^static void jtag_test_main_basic_success_test(void** state)$/;"	f	file:
jtag_test_main_jtag_deinit_fail_test	tests/jtag_test_tests.c	/^static void jtag_test_main_jtag_deinit_fail_test(void** state)$/;"	f	file:
jtag_test_shift_ir_fail_test	tests/jtag_test_tests.c	/^static void jtag_test_shift_ir_fail_test(void** state)$/;"	f	file:
jtag_test_shift_ir_memcpy_fail_test	tests/jtag_test_tests.c	/^static void jtag_test_shift_ir_memcpy_fail_test(void** state)$/;"	f	file:
jtag_test_shift_ir_second_memcpy_fail_test	tests/jtag_test_tests.c	/^static void jtag_test_shift_ir_second_memcpy_fail_test(void** state)$/;"	f	file:
jtag_test_success_test	tests/jtag_test_tests.c	/^static void jtag_test_success_test(void** state)$/;"	f	file:
jtag_tlr	jtag_handler.h	50;"	d
jtag_tlr	tests/jtag_drv.h	/^    jtag_tlr,$/;"	e	enum:jtag_states
jtag_upd_dr	jtag_handler.h	58;"	d
jtag_upd_dr	tests/jtag_drv.h	/^    jtag_upd_dr,$/;"	e	enum:jtag_states
jtag_upd_ir	jtag_handler.h	65;"	d
jtag_upd_ir	tests/jtag_drv.h	/^    jtag_upd_ir$/;"	e	enum:jtag_states
jtag_xfer	tests/jtag.h	/^struct jtag_xfer$/;"	s
jtag_xfer_direction	tests/jtag.h	/^enum jtag_xfer_direction$/;"	g
jtag_xfer_type	tests/jtag.h	/^enum jtag_xfer_type$/;"	g
label	tests/target_handler_tests.c	/^    char label[32];$/;"	m	struct:gpiod_chip	file:
length	asd_common.h	/^    uint8_t length;$/;"	m	struct:asd_i2c_msg
length	tests/jtag.h	/^    __u32 length;$/;"	m	struct:bitbang_packet
length	tests/jtag.h	/^    __u32 length;$/;"	m	struct:jtag_xfer
length	tests/jtag_drv.h	/^    __u32 length;$/;"	m	struct:scan_xfer
line	target_handler.h	/^    struct gpiod_line* line;$/;"	m	struct:Target_Control_GPIO	typeref:struct:Target_Control_GPIO::gpiod_line
line_dummy	tests/target_handler_tests.c	/^struct gpiod_line line_dummy = {$/;"	v	typeref:struct:gpiod_line
lines	tests/target_handler_tests.c	/^    struct gpiod_line** lines;$/;"	m	struct:gpiod_chip	typeref:struct:gpiod_chip::gpiod_line	file:
log_client_address	asd_main.c	/^void log_client_address(const extnet_conn_t* p_extcon)$/;"	f
log_level	asd_main.h	/^    ASD_LogLevel log_level;$/;"	m	struct:asd_args
log_level	jtag_test.h	/^    ASD_LogLevel log_level;$/;"	m	struct:jtag_test_args
log_streams	asd_main.h	/^    ASD_LogStream log_streams;$/;"	m	struct:asd_args
log_streams	jtag_test.h	/^    ASD_LogStream log_streams;$/;"	m	struct:jtag_test_args
loggingCallback	logging.c	/^static LogFunctionPtr loggingCallback = NULL;$/;"	v	file:
logging_level	asd_common.h	/^            uint8_t logging_level : 3;$/;"	m	struct:remote_logging_config::__anon10::__anon11
logging_stream	asd_common.h	/^            uint8_t logging_stream : 3;$/;"	m	struct:remote_logging_config::__anon10::__anon11
loop_forever	jtag_test.h	/^    bool loop_forever;$/;"	m	struct:jtag_test_args
lsb_from_msg_size	asd_msg.c	/^uint8_t lsb_from_msg_size(u_int32_t response_cnt)$/;"	f
main	asd_main.c	/^int main(int argc, char** argv)$/;"	f
main	jtag_test.c	/^int main(int argc, char** argv)$/;"	f
main	tests/asd_main_tests.c	/^int main()$/;"	f
main	tests/asd_msg_tests.c	/^int main()$/;"	f
main	tests/auth_none_tests.c	/^int main()$/;"	f
main	tests/auth_pam_tests.c	/^int main()$/;"	f
main	tests/authenticate_tests.c	/^int main()$/;"	f
main	tests/config_tests.c	/^int main()$/;"	f
main	tests/dbus_helper_tests.c	/^int main()$/;"	f
main	tests/ext_network_tests.c	/^int main()$/;"	f
main	tests/ext_tcp_tests.c	/^int main()$/;"	f
main	tests/ext_tls_tests.c	/^int main()$/;"	f
main	tests/gpio_tests.c	/^int main()$/;"	f
main	tests/i2c_handler_tests.c	/^int main()$/;"	f
main	tests/i2c_msg_builder_tests.c	/^int main()$/;"	f
main	tests/jtag_handler_tests.c	/^int main()$/;"	f
main	tests/jtag_test_tests.c	/^int main(void)$/;"	f
main	tests/logging_tests.c	/^int main()$/;"	f
main	tests/mem_helper_test.c	/^int main()$/;"	f
main	tests/session_tests.c	/^int main()$/;"	f
main	tests/target_handler_tests.c	/^int main()$/;"	f
malloc_fail	tests/asd_main_tests.c	/^static bool malloc_fail[MAX_COMMANDS];$/;"	v	file:
malloc_fail	tests/asd_msg_tests.c	/^static bool malloc_fail[MAX_COMMANDS];$/;"	v	file:
malloc_fail	tests/auth_pam_tests.c	/^static bool malloc_fail[MAX_COMMANDS];$/;"	v	file:
malloc_fail	tests/dbus_helper_tests.c	/^static bool malloc_fail = false;$/;"	v	file:
malloc_fail	tests/ext_network_tests.c	/^static bool malloc_fail = false;$/;"	v	file:
malloc_fail	tests/i2c_handler_tests.c	/^static bool malloc_fail = false;$/;"	v	file:
malloc_fail	tests/i2c_msg_builder_tests.c	/^static bool malloc_fail = false;$/;"	v	file:
malloc_fail	tests/jtag_handler_tests.c	/^static bool malloc_fail = false;$/;"	v	file:
malloc_fail	tests/logging_tests.c	/^static bool malloc_fail = false;$/;"	v	file:
malloc_fail	tests/session_tests.c	/^static bool malloc_fail = false;$/;"	v	file:
malloc_fail	tests/target_handler_tests.c	/^static bool malloc_fail = false;$/;"	v	file:
malloc_fail_mode	tests/asd_main_tests.c	/^static bool malloc_fail_mode = false;$/;"	v	file:
malloc_fail_mode	tests/asd_msg_tests.c	/^static bool malloc_fail_mode = false;$/;"	v	file:
malloc_fail_mode	tests/auth_pam_tests.c	/^static bool malloc_fail_mode = false;$/;"	v	file:
malloc_index	tests/asd_main_tests.c	/^int malloc_index = 0;$/;"	v
malloc_index	tests/asd_msg_tests.c	/^int malloc_index = 0;$/;"	v
malloc_index	tests/auth_pam_tests.c	/^int malloc_index = 0;$/;"	v
manual_mode	jtag_test.h	/^    bool manual_mode;$/;"	m	struct:jtag_test_args
match_callback	dbus_helper.c	/^int match_callback(sd_bus_message* msg, void* userdata, sd_bus_error* error)$/;"	f
match_callback_discard_non_get_power_messages_test	tests/dbus_helper_tests.c	/^void match_callback_discard_non_get_power_messages_test(void** state)$/;"	f
match_callback_fail_to_sd_bus_message_enter_container_test	tests/dbus_helper_tests.c	/^void match_callback_fail_to_sd_bus_message_enter_container_test(void** state)$/;"	f
match_callback_fail_to_sd_bus_message_enter_container_variant_test	tests/dbus_helper_tests.c	/^void match_callback_fail_to_sd_bus_message_enter_container_variant_test($/;"	f
match_callback_fail_to_sd_bus_message_exit_container_test	tests/dbus_helper_tests.c	/^void match_callback_fail_to_sd_bus_message_exit_container_test(void** state)$/;"	f
match_callback_fail_to_sd_bus_message_read_test	tests/dbus_helper_tests.c	/^void match_callback_fail_to_sd_bus_message_read_test(void** state)$/;"	f
match_callback_fail_to_sd_bus_message_skip_test	tests/dbus_helper_tests.c	/^void match_callback_fail_to_sd_bus_message_skip_test(void** state)$/;"	f
match_callback_fail_to_sd_bus_read_variant_test	tests/dbus_helper_tests.c	/^void match_callback_fail_to_sd_bus_read_variant_test(void** state)$/;"	f
match_callback_test_power_off	tests/dbus_helper_tests.c	/^void match_callback_test_power_off(void** state)$/;"	f
match_callback_test_power_on	tests/dbus_helper_tests.c	/^void match_callback_test_power_on(void** state)$/;"	f
memcpy_success_dest_null_test	tests/mem_helper_test.c	/^void memcpy_success_dest_null_test(void** state)$/;"	f
memcpy_success_size_fail_test	tests/mem_helper_test.c	/^void memcpy_success_size_fail_test(void** state)$/;"	f
memcpy_success_src_null_test	tests/mem_helper_test.c	/^void memcpy_success_src_null_test(void** state)$/;"	f
memcpy_success_test	tests/mem_helper_test.c	/^void memcpy_success_test(void** state)$/;"	f
message_header	asd_common.h	/^struct message_header$/;"	s
mode	config.h	/^    JTAG_DRIVER_MODE mode;$/;"	m	struct:jtag_config
mode	jtag_test.h	/^    int mode;$/;"	m	struct:jtag_test_args
mode	tests/jtag.h	/^    __u32 mode;$/;"	m	struct:jtag_mode
mode	tests/jtag_drv.h	/^    __u8 mode;$/;"	m	struct:controller_mode_param
mode	tests/jtag_drv.h	/^    __u8 mode;$/;"	m	struct:get_tck_param
mode	tests/jtag_drv.h	/^    __u8 mode;$/;"	m	struct:scan_xfer
mode	tests/jtag_drv.h	/^    __u8 mode;$/;"	m	struct:set_tck_param
mode	tests/jtag_drv.h	/^    __u8 mode;$/;"	m	struct:tap_state_param
msb_from_msg_size	asd_msg.c	/^uint8_t msb_from_msg_size(u_int32_t response_cnt)$/;"	f
msg	asd_msg.h	/^    struct asd_message msg;$/;"	m	struct:incoming_msg	typeref:struct:incoming_msg::asd_message
msg_sent	tests/asd_msg_tests.c	/^struct asd_message msg_sent;$/;"	v	typeref:struct:asd_message
msg_set	i2c_msg_builder.h	/^    void* msg_set;$/;"	m	struct:I2C_Msg_Builder
n_authenticated_id	session.h	/^    int n_authenticated_id; \/\/ only one session may be authenticated.$/;"	m	struct:Session
n_max_sessions	ext_network.h	/^    int n_max_sessions;$/;"	m	struct:ExtNet
n_port_number	asd_main.h	/^    uint16_t n_port_number;$/;"	m	struct:session_options
name	target_handler.h	/^    char name[30];$/;"	m	struct:Target_Control_GPIO
name	tests/target_handler_tests.c	/^    char name[32];$/;"	m	struct:gpiod_chip	file:
name	tests/target_handler_tests.c	/^    char name[32];$/;"	m	struct:gpiod_line	file:
name	tests/target_handler_tests.c	/^    char* name;$/;"	m	struct:_gpiod_line_data	file:
next_data	asd_msg.h	/^    unsigned char* next_data;$/;"	m	struct:packet_data
numIterations	jtag_test.h	/^    int numIterations;$/;"	m	struct:jtag_test_args
numUncores	jtag_test.h	/^    unsigned int numUncores;$/;"	m	struct:uncore_info
num_lines	tests/target_handler_tests.c	/^    unsigned int num_lines;$/;"	m	struct:gpiod_chip	file:
number	target_handler.h	/^    int number;$/;"	m	struct:Target_Control_GPIO
offset	target_handler.h	/^    size_t offset;$/;"	m	struct:data_json_map
offset	tests/target_handler_tests.c	/^    int offset;$/;"	m	struct:_gpiod_line_data	file:
offset	tests/target_handler_tests.c	/^    unsigned int offset;$/;"	m	struct:gpiod_line	file:
on_accept	ext_network.h	/^    STATUS (*on_accept)(void* net_state, extnet_conn_t* pconn);$/;"	m	struct:__anon26
on_client_connect	asd_main.c	/^STATUS on_client_connect(asd_state* state, extnet_conn_t* p_extcon)$/;"	f
on_client_connect_asd_msg_init_failure_test	tests/asd_main_tests.c	/^void on_client_connect_asd_msg_init_failure_test(void** state)$/;"	f
on_client_connect_invalid_params_test	tests/asd_main_tests.c	/^void on_client_connect_invalid_params_test(void** state)$/;"	f
on_client_connect_set_config_defaults_failure_test	tests/asd_main_tests.c	/^void on_client_connect_set_config_defaults_failure_test(void** state)$/;"	f
on_client_connect_success_test	tests/asd_main_tests.c	/^void on_client_connect_success_test(void** state)$/;"	f
on_client_disconnect	asd_main.c	/^STATUS on_client_disconnect(asd_state* state)$/;"	f
on_client_disconnect_asd_msg_free_failure_test	tests/asd_main_tests.c	/^void on_client_disconnect_asd_msg_free_failure_test(void** state)$/;"	f
on_client_disconnect_invalid_params_test	tests/asd_main_tests.c	/^void on_client_disconnect_invalid_params_test(void** state)$/;"	f
on_client_disconnect_set_config_defaults_failure_test	tests/asd_main_tests.c	/^void on_client_disconnect_set_config_defaults_failure_test(void** state)$/;"	f
on_client_disconnect_success_test	tests/asd_main_tests.c	/^void on_client_disconnect_success_test(void** state)$/;"	f
on_close_client	ext_network.h	/^    STATUS (*on_close_client)(extnet_conn_t* pconn);$/;"	m	struct:__anon26
on_connection_aborted	asd_main.c	/^void on_connection_aborted(void)$/;"	f
on_platform_reset_event	target_handler.c	/^STATUS on_platform_reset_event(Target_Control_Handle* state, ASD_EVENT* event)$/;"	f
on_power_event	target_handler.c	/^STATUS on_power_event(Target_Control_Handle* state, ASD_EVENT* event)$/;"	f
on_prdy_event	target_handler.c	/^STATUS on_prdy_event(Target_Control_Handle* state, ASD_EVENT* event)$/;"	f
on_xdp_present_event	target_handler.c	/^STATUS on_xdp_present_event(Target_Control_Handle* state, ASD_EVENT* event)$/;"	f
open_drain	tests/target_handler_tests.c	/^    bool open_drain;$/;"	m	struct:gpiod_line	file:
open_source	tests/target_handler_tests.c	/^    bool open_source;$/;"	m	struct:gpiod_line	file:
option	dbus_helper.c	/^static const ASD_LogOption option = ASD_LogOption_None;$/;"	v	file:
option	i2c_handler.c	/^static const ASD_LogOption option = ASD_LogOption_None;$/;"	v	file:
option	jtag_handler.c	/^static const ASD_LogOption option = ASD_LogOption_None;$/;"	v	file:
option	jtag_test.c	/^const ASD_LogOption option = ASD_LogOption_None;$/;"	v
option	target_handler.c	/^static const ASD_LogOption option = ASD_LogOption_None;$/;"	v	file:
option	vprobe_handler.c	/^static const ASD_LogOption option = ASD_LogOption_None;$/;"	v	file:
origin_id	asd_common.h	/^    uint8_t origin_id : 3;$/;"	m	struct:message_header
out_msg	asd_msg.h	/^    struct asd_message out_msg;$/;"	m	struct:ASD_MSG	typeref:struct:ASD_MSG::asd_message
p_hdlr_data	ext_network.h	/^    void* p_hdlr_data; \/\/ handler private data pointer$/;"	m	struct:__anon24
p_hdlrs	authenticate.c	/^    auth_hdlrs_t* p_hdlrs;$/;"	m	struct:__anon15	file:
p_hdlrs	ext_network.h	/^    extnet_hdlrs_t* p_hdlrs;$/;"	m	struct:ExtNet
packet_data	asd_msg.h	/^struct packet_data$/;"	s
padDataOne	jtag_handler.h	/^    unsigned char padDataOne[IRMAXPADSIZE \/ 8];$/;"	m	struct:JTAG_Handler
padDataZero	jtag_handler.h	/^    unsigned char padDataZero[IRMAXPADSIZE \/ 8];$/;"	m	struct:JTAG_Handler
pad_config	tests/jtag.h	/^union pad_config$/;"	u
pad_data	tests/jtag.h	/^        __u32 pad_data : 1;$/;"	m	struct:pad_config::__anon41
padding	tests/jtag.h	/^    __u32 padding;$/;"	m	struct:jtag_xfer
pam_conversation_function	auth_pam.c	/^int pam_conversation_function(int numMsg, const struct pam_message** msg,$/;"	f
pam_conversation_function_calloc_fail_test	tests/auth_pam_tests.c	/^void pam_conversation_function_calloc_fail_test(void** state)$/;"	f
pam_conversation_function_invalid_params_test	tests/auth_pam_tests.c	/^void pam_conversation_function_invalid_params_test(void** state)$/;"	f
pam_conversation_function_malloc_fail_test	tests/auth_pam_tests.c	/^void pam_conversation_function_malloc_fail_test(void** state)$/;"	f
pam_conversation_function_missing_message_echo_off_msg_test	tests/auth_pam_tests.c	/^void pam_conversation_function_missing_message_echo_off_msg_test(void** state)$/;"	f
pam_conversation_function_strcpy_fail_test	tests/auth_pam_tests.c	/^void pam_conversation_function_strcpy_fail_test(void** state)$/;"	f
pam_conversation_function_success_test	tests/auth_pam_tests.c	/^void pam_conversation_function_success_test(void** state)$/;"	f
parse_arguments	jtag_test.c	/^bool parse_arguments(int argc, char** argv, jtag_test_args* args)$/;"	f
parse_arguments_dr_overshift_test	tests/jtag_test_tests.c	/^static void parse_arguments_dr_overshift_test(void** state)$/;"	f	file:
parse_arguments_dr_size_test	tests/jtag_test_tests.c	/^static void parse_arguments_dr_size_test(void** state)$/;"	f	file:
parse_arguments_hardware_mode_test	tests/jtag_test_tests.c	/^static void parse_arguments_hardware_mode_test(void** state)$/;"	f	file:
parse_arguments_invalid_test	tests/jtag_test_tests.c	/^static void parse_arguments_invalid_test(void** state)$/;"	f	file:
parse_arguments_ir_size_message_test	tests/jtag_test_tests.c	/^static void parse_arguments_ir_size_message_test(void** state)$/;"	f	file:
parse_arguments_ir_size_test	tests/jtag_test_tests.c	/^static void parse_arguments_ir_size_test(void** state)$/;"	f	file:
parse_arguments_ir_value_test	tests/jtag_test_tests.c	/^static void parse_arguments_ir_value_test(void** state)$/;"	f	file:
parse_arguments_log_level_test	tests/jtag_test_tests.c	/^static void parse_arguments_log_level_test(void** state)$/;"	f	file:
parse_arguments_log_streams_test	tests/jtag_test_tests.c	/^static void parse_arguments_log_streams_test(void** state)$/;"	f	file:
parse_arguments_loop_forever_test	tests/jtag_test_tests.c	/^static void parse_arguments_loop_forever_test(void** state)$/;"	f	file:
parse_arguments_memcpy_error	tests/jtag_test_tests.c	/^static void parse_arguments_memcpy_error(void** state)$/;"	f	file:
parse_arguments_num_iterations_test	tests/jtag_test_tests.c	/^static void parse_arguments_num_iterations_test(void** state)$/;"	f	file:
parse_arguments_sets_defaults_test	tests/jtag_test_tests.c	/^static void parse_arguments_sets_defaults_test(void** state)$/;"	f	file:
parse_arguments_tck_test	tests/jtag_test_tests.c	/^static void parse_arguments_tck_test(void** state)$/;"	f	file:
perform_shift	jtag_handler.c	/^STATUS perform_shift(JTAG_Handler* state, unsigned int number_of_bits,$/;"	f
platform_init	target_handler.c	/^STATUS platform_init(Target_Control_Handle* state)$/;"	f
platform_override_gpio	target_handler.c	/^STATUS platform_override_gpio(const Dbus_Handle* dbus, char* interface,$/;"	f
post_pad_number	tests/jtag.h	/^        __u32 post_pad_number : 12;$/;"	m	struct:pad_config::__anon41
power_state	dbus_helper.h	/^    Power_State power_state;$/;"	m	struct:Dbus_Handle
prdy_timeout	asd_msg.h	/^    unsigned char prdy_timeout;$/;"	m	struct:ASD_MSG
pre_pad_number	tests/jtag.h	/^        __u32 pre_pad_number : 12;$/;"	m	struct:pad_config::__anon41
print_test_results	jtag_test.c	/^void print_test_results(uint64_t iterations, uint64_t micro_seconds,$/;"	f
print_test_results_test	tests/jtag_test_tests.c	/^static void print_test_results_test(void** state)$/;"	f	file:
probesConfig	vprobe_handler.h	/^    char probesConfig[MAX_DATA_SIZE];$/;"	m	struct:vProbe_Handler
process_all_client_messages	asd_main.c	/^STATUS process_all_client_messages(asd_state* state,$/;"	f
process_all_client_messages_failure_test	tests/asd_main_tests.c	/^void process_all_client_messages_failure_test(void** state)$/;"	f
process_all_client_messages_invalid_params_test	tests/asd_main_tests.c	/^void process_all_client_messages_invalid_params_test(void** state)$/;"	f
process_all_client_messages_success_test	tests/asd_main_tests.c	/^void process_all_client_messages_success_test(void** state)$/;"	f
process_all_gpio_events	asd_main.c	/^STATUS process_all_gpio_events(asd_state* state, const struct pollfd* poll_fds,$/;"	f
process_client_message	asd_main.c	/^STATUS process_client_message(asd_state* state, const struct pollfd poll_fd)$/;"	f
process_client_message_asd_msg_read_failure_test	tests/asd_main_tests.c	/^void process_client_message_asd_msg_read_failure_test(void** state)$/;"	f
process_client_message_invalid_params_test	tests/asd_main_tests.c	/^void process_client_message_invalid_params_test(void** state)$/;"	f
process_client_message_session_get_data_pending_failure_test	tests/asd_main_tests.c	/^void process_client_message_session_get_data_pending_failure_test(void** state)$/;"	f
process_client_message_session_lookup_conn_failure_test	tests/asd_main_tests.c	/^void process_client_message_session_lookup_conn_failure_test(void** state)$/;"	f
process_client_message_session_set_data_pending_failure_test	tests/asd_main_tests.c	/^void process_client_message_session_set_data_pending_failure_test(void** state)$/;"	f
process_client_message_success_test	tests/asd_main_tests.c	/^void process_client_message_success_test(void** state)$/;"	f
process_command_line	asd_main.c	/^bool process_command_line(int argc, char** argv, asd_args* args)$/;"	f
process_command_line_log_level_test	tests/asd_main_tests.c	/^static void process_command_line_log_level_test(void** state)$/;"	f	file:
process_command_line_log_streams_test	tests/asd_main_tests.c	/^static void process_command_line_log_streams_test(void** state)$/;"	f	file:
process_command_line_log_to_syslog_test	tests/asd_main_tests.c	/^void process_command_line_log_to_syslog_test(void** state)$/;"	f
process_command_line_port_number_test	tests/asd_main_tests.c	/^void process_command_line_port_number_test(void** state)$/;"	f
process_command_line_set_i2c_test	tests/asd_main_tests.c	/^void process_command_line_set_i2c_test(void** state)$/;"	f
process_command_line_set_key_file_test	tests/asd_main_tests.c	/^void process_command_line_set_key_file_test(void** state)$/;"	f
process_command_line_set_net_bind_device_test	tests/asd_main_tests.c	/^void process_command_line_set_net_bind_device_test(void** state)$/;"	f
process_command_line_set_unsecure_mode_test	tests/asd_main_tests.c	/^void process_command_line_set_unsecure_mode_test(void** state)$/;"	f
process_command_line_sets_defaults_test	tests/asd_main_tests.c	/^void process_command_line_sets_defaults_test(void** state)$/;"	f
process_command_line_unknown_arg_test	tests/asd_main_tests.c	/^static void process_command_line_unknown_arg_test(void** state)$/;"	f	file:
process_i2c_messages	asd_msg.c	/^STATUS process_i2c_messages(ASD_MSG* state, struct asd_message* in_msg)$/;"	f
process_i2c_messages_invalid_in_msg_test	tests/asd_msg_tests.c	/^void process_i2c_messages_invalid_in_msg_test(void** state)$/;"	f
process_i2c_messages_msg_builder_fail_test	tests/asd_msg_tests.c	/^void process_i2c_messages_msg_builder_fail_test(void** state)$/;"	f
process_i2c_messages_null_param_checks_test	tests/asd_msg_tests.c	/^void process_i2c_messages_null_param_checks_test(void** state)$/;"	f
process_i2c_msg_handles_build_responses_buffer_full_failed_test	tests/asd_msg_tests.c	/^void process_i2c_msg_handles_build_responses_buffer_full_failed_test($/;"	f
process_i2c_msg_handles_build_responses_buffer_full_test	tests/asd_msg_tests.c	/^void process_i2c_msg_handles_build_responses_buffer_full_test(void** state)$/;"	f
process_i2c_msg_handles_build_responses_failed_test	tests/asd_msg_tests.c	/^void process_i2c_msg_handles_build_responses_failed_test(void** state)$/;"	f
process_i2c_msg_handles_bus_select_command_error_test	tests/asd_msg_tests.c	/^void process_i2c_msg_handles_bus_select_command_error_test(void** state)$/;"	f
process_i2c_msg_handles_bus_select_command_test	tests/asd_msg_tests.c	/^void process_i2c_msg_handles_bus_select_command_test(void** state)$/;"	f
process_i2c_msg_handles_i2c_msg_initialize_test	tests/asd_msg_tests.c	/^void process_i2c_msg_handles_i2c_msg_initialize_test(void** state)$/;"	f
process_i2c_msg_handles_i2c_msg_reset_failed_test	tests/asd_msg_tests.c	/^void process_i2c_msg_handles_i2c_msg_reset_failed_test(void** state)$/;"	f
process_i2c_msg_handles_i2c_read_write_failed_test	tests/asd_msg_tests.c	/^void process_i2c_msg_handles_i2c_read_write_failed_test(void** state)$/;"	f
process_i2c_msg_handles_invalid_bus_select_command_test	tests/asd_msg_tests.c	/^void process_i2c_msg_handles_invalid_bus_select_command_test(void** state)$/;"	f
process_i2c_msg_handles_invalid_set_sclk_command_test	tests/asd_msg_tests.c	/^void process_i2c_msg_handles_invalid_set_sclk_command_test(void** state)$/;"	f
process_i2c_msg_handles_multiple_commands_test	tests/asd_msg_tests.c	/^void process_i2c_msg_handles_multiple_commands_test(void** state)$/;"	f
process_i2c_msg_handles_read_command_short_packet_error_test	tests/asd_msg_tests.c	/^void process_i2c_msg_handles_read_command_short_packet_error_test(void** state)$/;"	f
process_i2c_msg_handles_read_command_test	tests/asd_msg_tests.c	/^void process_i2c_msg_handles_read_command_test(void** state)$/;"	f
process_i2c_msg_handles_set_sclk_command_error_test	tests/asd_msg_tests.c	/^void process_i2c_msg_handles_set_sclk_command_error_test(void** state)$/;"	f
process_i2c_msg_handles_set_sclk_command_test	tests/asd_msg_tests.c	/^void process_i2c_msg_handles_set_sclk_command_test(void** state)$/;"	f
process_i2c_msg_handles_unknown_command_test	tests/asd_msg_tests.c	/^void process_i2c_msg_handles_unknown_command_test(void** state)$/;"	f
process_i2c_msg_handles_write_command_short_packet_error_test	tests/asd_msg_tests.c	/^void process_i2c_msg_handles_write_command_short_packet_error_test(void** state)$/;"	f
process_i2c_msg_handles_write_command_test	tests/asd_msg_tests.c	/^void process_i2c_msg_handles_write_command_test(void** state)$/;"	f
process_jtag_message	asd_msg.c	/^STATUS process_jtag_message(ASD_MSG* state, struct asd_message* s_message)$/;"	f
process_message	asd_msg.c	/^void process_message(ASD_MSG* state)$/;"	f
process_new_client	asd_main.c	/^STATUS process_new_client(asd_state* state, struct pollfd* poll_fds,$/;"	f
process_new_client_accept_connection_failure_test	tests/asd_main_tests.c	/^void process_new_client_accept_connection_failure_test(void** state)$/;"	f
process_new_client_auth_none_success_test	tests/asd_main_tests.c	/^void process_new_client_auth_none_success_test(void** state)$/;"	f
process_new_client_invalid_params_test	tests/asd_main_tests.c	/^void process_new_client_invalid_params_test(void** state)$/;"	f
process_new_client_session_open_test	tests/asd_main_tests.c	/^void process_new_client_session_open_test(void** state)$/;"	f
read	asd_common.h	/^    bool read;$/;"	m	struct:asd_i2c_msg
read_data	asd_main.c	/^STATUS read_data(asd_state* state, extnet_conn_t* p_extconn, void* buffer,$/;"	f
read_data_extnet_recv_failure_0_test	tests/asd_main_tests.c	/^void read_data_extnet_recv_failure_0_test(void** state)$/;"	f
read_data_extnet_recv_failure_neg1_test	tests/asd_main_tests.c	/^void read_data_extnet_recv_failure_neg1_test(void** state)$/;"	f
read_data_invalid_params_test	tests/asd_main_tests.c	/^void read_data_invalid_params_test(void** state)$/;"	f
read_data_success_test	tests/asd_main_tests.c	/^void read_data_success_test(void** state)$/;"	f
read_flag	tests/target_handler_tests.c	/^bool read_flag = true;$/;"	v
read_function	asd_msg.h	/^    ReadFunctionPtr read_function;$/;"	m	struct:ASD_MSG
read_index	asd_msg.h	/^    ssize_t read_index;$/;"	m	struct:incoming_msg
read_openbmc_version	asd_msg.c	/^STATUS read_openbmc_version(ASD_MSG* state)$/;"	f
read_openbmc_version_null_failure_test	tests/asd_msg_tests.c	/^void read_openbmc_version_null_failure_test(void** state)$/;"	f
read_openbmc_version_read_memcpy_safe_failed_test	tests/asd_msg_tests.c	/^void read_openbmc_version_read_memcpy_safe_failed_test(void** state)$/;"	f
read_openbmc_version_read_minus_test	tests/asd_msg_tests.c	/^void read_openbmc_version_read_minus_test(void** state)$/;"	f
read_pin_value	target_handler.c	/^static inline void read_pin_value(Target_Control_GPIO gpio, int* value,$/;"	f	file:
read_state	asd_msg.h	/^    ReadState read_state;$/;"	m	struct:incoming_msg
read_status	asd_msg.c	/^STATUS read_status(ASD_MSG* state, const ReadType index, uint8_t pin,$/;"	f
recv	ext_network.h	/^    int (*recv)(extnet_conn_t* pconn, void* pv_buf, size_t sz_len,$/;"	m	struct:__anon26
remoteConfigs	vprobe_handler.h	/^    uint8_t remoteConfigs;$/;"	m	struct:vProbe_Handler
remoteMessageCalledWithLevel	tests/logging_tests.c	/^ASD_LogLevel remoteMessageCalledWithLevel = ASD_LogLevel_Off;$/;"	v
remoteMessageCalledWithMessage	tests/logging_tests.c	/^char remoteMessageCalledWithMessage[256] = "";$/;"	v
remoteMessageCalledWithStream	tests/logging_tests.c	/^ASD_LogStream remoteMessageCalledWithStream = ASD_LogStream_None;$/;"	v
remoteProbes	vprobe_handler.h	/^    uint8_t remoteProbes;$/;"	m	struct:vProbe_Handler
remote_logging	config.h	/^    remote_logging_config remote_logging;$/;"	m	struct:config
remote_logging_config	asd_common.h	/^typedef struct remote_logging_config$/;"	s
remote_logging_config	asd_common.h	/^} __attribute__((packed)) remote_logging_config;$/;"	t	typeref:struct:remote_logging_config
report_MBP	target_handler.h	/^    bool report_MBP;$/;"	m	struct:event_configuration
report_PLTRST	target_handler.h	/^    bool report_PLTRST;$/;"	m	struct:event_configuration
report_PRDY	target_handler.h	/^    bool report_PRDY;$/;"	m	struct:event_configuration
request_processing_loop	asd_main.c	/^STATUS request_processing_loop(asd_state* state)$/;"	f
request_processing_loop_expect_process_new_client_test	tests/asd_main_tests.c	/^void request_processing_loop_expect_process_new_client_test(void** state)$/;"	f
request_processing_loop_gpio_failure_test	tests/asd_main_tests.c	/^void request_processing_loop_gpio_failure_test(void** state)$/;"	f
request_processing_loop_poll_failure_test	tests/asd_main_tests.c	/^void request_processing_loop_poll_failure_test(void** state)$/;"	f
request_processing_loop_process_get_session_fds_failure_test	tests/asd_main_tests.c	/^void request_processing_loop_process_get_session_fds_failure_test(void** state)$/;"	f
reserved	asd_common.h	/^    uint8_t reserved : 1;$/;"	m	struct:message_header
reset	tests/jtag.h	/^    __u8 reset;$/;"	m	struct:jtag_tap_state
reset_break	target_handler.h	/^    bool reset_break;$/;"	m	struct:event_configuration
reset_jtag_to_RTI	jtag_test.c	/^bool reset_jtag_to_RTI(JTAG_Handler* jtag)$/;"	f
reset_jtag_to_RTI_RTI_failure_test	tests/jtag_test_tests.c	/^static void reset_jtag_to_RTI_RTI_failure_test(void** state)$/;"	f	file:
reset_jtag_to_RTI_TLR_failure_test	tests/jtag_test_tests.c	/^static void reset_jtag_to_RTI_TLR_failure_test(void** state)$/;"	f	file:
reset_jtag_to_RTI_success_test	tests/jtag_test_tests.c	/^static void reset_jtag_to_RTI_success_test(void** state)$/;"	f	file:
result_code	auth_pam.h	/^    auth_handshake_ret_t result_code;$/;"	m	struct:__anon21
rsvd	tests/jtag.h	/^        __u32 rsvd : 7;$/;"	m	struct:pad_config::__anon41
scanChain	asd_common.h	/^} scanChain;$/;"	t	typeref:enum:__anon7
scan_state	jtag_handler.h	/^    JTAGScanState scan_state;$/;"	m	struct:JTAG_Chain_State
scan_xfer	tests/jtag_drv.h	/^struct scan_xfer$/;"	s
sdbus_callback	dbus_helper.c	/^int sdbus_callback(sd_bus_message* reply, void* userdata, sd_bus_error* error)$/;"	f
send	ext_network.h	/^    int (*send)(extnet_conn_t* pconn, void* pv_buf, size_t sz_len);$/;"	m	struct:__anon26
sendRemoteLoggingMessage	tests/logging_tests.c	/^static void sendRemoteLoggingMessage(ASD_LogLevel level, ASD_LogStream stream,$/;"	f	file:
send_error_message	asd_msg.c	/^void send_error_message(ASD_MSG* state, struct asd_message* input_message,$/;"	f
send_error_message_invalid_param_test	tests/asd_msg_tests.c	/^void send_error_message_invalid_param_test(void** state)$/;"	f
send_function	asd_msg.h	/^    SendFunctionPtr send_function;$/;"	m	struct:ASD_MSG
send_out_msg_on_socket	asd_main.c	/^STATUS send_out_msg_on_socket(void* state, unsigned char* buffer, size_t length)$/;"	f
send_out_msg_on_socket_no_authenticated_socket_test	tests/asd_main_tests.c	/^void send_out_msg_on_socket_no_authenticated_socket_test(void** state)$/;"	f
send_out_msg_on_socket_params_test	tests/asd_main_tests.c	/^void send_out_msg_on_socket_params_test(void** state)$/;"	f
send_out_msg_on_socket_send_failure_test	tests/asd_main_tests.c	/^void send_out_msg_on_socket_send_failure_test(void** state)$/;"	f
send_out_msg_on_socket_success_test	tests/asd_main_tests.c	/^void send_out_msg_on_socket_success_test(void** state)$/;"	f
send_pin_event	asd_msg.c	/^static STATUS send_pin_event(ASD_MSG* state, ASD_EVENT value)$/;"	f	file:
send_remote_log_message	asd_msg.c	/^void send_remote_log_message(ASD_LogLevel asd_level, ASD_LogStream asd_stream,$/;"	f
send_remote_log_message_concatenated_test	tests/asd_msg_tests.c	/^void send_remote_log_message_concatenated_test(void** state)$/;"	f
send_remote_log_message_invalid_param_test	tests/asd_msg_tests.c	/^void send_remote_log_message_invalid_param_test(void** state)$/;"	f
send_remote_log_message_test	tests/asd_msg_tests.c	/^void send_remote_log_message_test(void** state)$/;"	f
send_remote_logging_message	asd_msg.h	/^    LogFunctionPtr send_remote_logging_message;$/;"	m	struct:ASD_MSG
send_response	asd_msg.c	/^STATUS send_response(ASD_MSG* state, struct asd_message* message)$/;"	f
send_response_invalid_response_test	tests/asd_msg_tests.c	/^void send_response_invalid_response_test(void** state)$/;"	f
session	asd_main.h	/^    Session* session;$/;"	m	struct:asd_state
session	asd_main.h	/^    session_options session;$/;"	m	struct:asd_args
session_already_authenticated	session.c	/^STATUS session_already_authenticated(Session* state, extnet_conn_t* p_extconn)$/;"	f
session_already_authenticated_invalid_params_test	tests/session_tests.c	/^void session_already_authenticated_invalid_params_test(void** state)$/;"	f
session_already_authenticated_invalid_session_test	tests/session_tests.c	/^void session_already_authenticated_invalid_session_test(void** state)$/;"	f
session_already_authenticated_success_test	tests/session_tests.c	/^void session_already_authenticated_success_test(void** state)$/;"	f
session_auth_complete	session.c	/^STATUS session_auth_complete(Session* state, extnet_conn_t* p_extconn)$/;"	f
session_auth_complete_another_session_already_authenticated_test	tests/session_tests.c	/^void session_auth_complete_another_session_already_authenticated_test($/;"	f
session_auth_complete_invalid_params_test	tests/session_tests.c	/^void session_auth_complete_invalid_params_test(void** state)$/;"	f
session_auth_complete_session_not_found_test	tests/session_tests.c	/^void session_auth_complete_session_not_found_test(void** state)$/;"	f
session_auth_complete_success_test	tests/session_tests.c	/^void session_auth_complete_success_test(void** state)$/;"	f
session_close	session.c	/^STATUS session_close(Session* state, extnet_conn_t* p_extconn)$/;"	f
session_close_all	session.c	/^void session_close_all(Session* state)$/;"	f
session_close_all_invalid_params_test	tests/session_tests.c	/^void session_close_all_invalid_params_test(void** state)$/;"	f
session_close_all_success_test	tests/session_tests.c	/^void session_close_all_success_test(void** state)$/;"	f
session_close_already_closed_test	tests/session_tests.c	/^void session_close_already_closed_test(void** state)$/;"	f
session_close_expired_unauth	session.c	/^void session_close_expired_unauth(Session* state)$/;"	f
session_close_expired_unauth_closes_timed_out_connections_test	tests/session_tests.c	/^void session_close_expired_unauth_closes_timed_out_connections_test($/;"	f
session_close_expired_unauth_invalid_params_test	tests/session_tests.c	/^void session_close_expired_unauth_invalid_params_test(void** state)$/;"	f
session_close_invalid_params_test	tests/session_tests.c	/^void session_close_invalid_params_test(void** state)$/;"	f
session_close_invalid_session_test	tests/session_tests.c	/^void session_close_invalid_session_test(void** state)$/;"	f
session_close_private	session.c	/^static STATUS session_close_private(Session* state, session_t* p_sess)$/;"	f	file:
session_close_success_test	tests/session_tests.c	/^void session_close_success_test(void** state)$/;"	f
session_close_unused_socket_fd_test	tests/session_tests.c	/^void session_close_unused_socket_fd_test(void** state)$/;"	f
session_fdarr_t	session.h	/^typedef int session_fdarr_t[MAX_SESSIONS];$/;"	t
session_find_private	session.c	/^static session_t* session_find_private(Session* state, int sockfd)$/;"	f	file:
session_get_authenticated_conn	session.c	/^STATUS session_get_authenticated_conn(Session* state,$/;"	f
session_get_authenticated_conn_invalid_params_test	tests/session_tests.c	/^void session_get_authenticated_conn_invalid_params_test(void** state)$/;"	f
session_get_authenticated_conn_memcpy_fail_test	tests/session_tests.c	/^void session_get_authenticated_conn_memcpy_fail_test(void** state)$/;"	f
session_get_authenticated_conn_success_test	tests/session_tests.c	/^void session_get_authenticated_conn_success_test(void** state)$/;"	f
session_get_data_pending	session.c	/^STATUS session_get_data_pending(Session* state, extnet_conn_t* p_extconn,$/;"	f
session_get_data_pending_invalid_connection_test	tests/session_tests.c	/^void session_get_data_pending_invalid_connection_test(void** state)$/;"	f
session_get_data_pending_invalid_params_test	tests/session_tests.c	/^void session_get_data_pending_invalid_params_test(void** state)$/;"	f
session_get_data_pending_success_test	tests/session_tests.c	/^void session_get_data_pending_success_test(void** state)$/;"	f
session_getfds	session.c	/^STATUS session_getfds(Session* state, session_fdarr_t* na_fds, int* pn_fds,$/;"	f
session_getfds_invalid_params_test	tests/session_tests.c	/^void session_getfds_invalid_params_test(void** state)$/;"	f
session_getfds_success_test	tests/session_tests.c	/^void session_getfds_success_test(void** state)$/;"	f
session_init	session.c	/^Session* session_init(ExtNet* extnet)$/;"	f
session_init_call_to_extnet_init_client_fails_test	tests/session_tests.c	/^void session_init_call_to_extnet_init_client_fails_test(void** state)$/;"	f
session_init_invalid_param_test	tests/session_tests.c	/^void session_init_invalid_param_test(void** state)$/;"	f
session_init_malloc_fail_test	tests/session_tests.c	/^void session_init_malloc_fail_test(void** state)$/;"	f
session_init_success_test	tests/session_tests.c	/^void session_init_success_test(void** state)$/;"	f
session_lookup_conn	session.c	/^extnet_conn_t* session_lookup_conn(Session* state, int fd)$/;"	f
session_lookup_conn_memcpy_fail_test	tests/session_tests.c	/^void session_lookup_conn_memcpy_fail_test(void** state)$/;"	f
session_lookup_conn_not_initialized_returns_null_test	tests/session_tests.c	/^void session_lookup_conn_not_initialized_returns_null_test(void** state)$/;"	f
session_lookup_conn_success_test	tests/session_tests.c	/^void session_lookup_conn_success_test(void** state)$/;"	f
session_open	session.c	/^STATUS session_open(Session* state, extnet_conn_t* p_extconn)$/;"	f
session_open_invalid_param_returns_error_test	tests/session_tests.c	/^void session_open_invalid_param_returns_error_test(void** state)$/;"	f
session_open_no_available_sessions_test	tests/session_tests.c	/^void session_open_no_available_sessions_test(void** state)$/;"	f
session_open_not_initialized_returns_error_test	tests/session_tests.c	/^void session_open_not_initialized_returns_error_test(void** state)$/;"	f
session_open_success_test	tests/session_tests.c	/^void session_open_success_test(void** state)$/;"	f
session_options	asd_main.h	/^typedef struct session_options$/;"	s
session_options	asd_main.h	/^} session_options;$/;"	t	typeref:struct:session_options
session_set_data_pending	session.c	/^STATUS session_set_data_pending(Session* state, extnet_conn_t* p_extconn,$/;"	f
session_set_data_pending_invalid_connection_test	tests/session_tests.c	/^void session_set_data_pending_invalid_connection_test(void** state)$/;"	f
session_set_data_pending_invalid_params_test	tests/session_tests.c	/^void session_set_data_pending_invalid_params_test(void** state)$/;"	f
session_set_data_pending_success_test	tests/session_tests.c	/^void session_set_data_pending_success_test(void** state)$/;"	f
session_t	session.h	/^} session_t;$/;"	t	typeref:struct:__anon35
sessions	session.h	/^    session_t sessions[MAX_SESSIONS];$/;"	m	struct:Session
set_config_defaults	config.c	/^STATUS set_config_defaults(config* config, const i2c_options* i2c)$/;"	f
set_config_defaults_enabled_i2c_test	tests/config_tests.c	/^void set_config_defaults_enabled_i2c_test(void** state)$/;"	f
set_config_defaults_failed_test	tests/config_tests.c	/^void set_config_defaults_failed_test(void** state)$/;"	f
set_pins_type	tests/target_handler_tests.c	/^static inline void set_pins_type(Target_Control_Handle* handle, Pin_Type type)$/;"	f	file:
set_tck_param	tests/jtag_drv.h	/^struct set_tck_param$/;"	s
setup	tests/asd_main_tests.c	/^static int setup(void** state)$/;"	f	file:
setup	tests/asd_msg_tests.c	/^static int setup(void** state)$/;"	f	file:
setup	tests/auth_pam_tests.c	/^static int setup(void** state)$/;"	f	file:
setup	tests/authenticate_tests.c	/^static int setup(void** state)$/;"	f	file:
setup	tests/i2c_msg_builder_tests.c	/^static int setup(void** state)$/;"	f	file:
setup	tests/jtag_handler_tests.c	/^static int setup(void** state)$/;"	f	file:
setup	tests/jtag_test_tests.c	/^static int setup(void** state)$/;"	f	file:
setup	tests/logging_tests.c	/^static int setup(void** state)$/;"	f	file:
setup	tests/target_handler_tests.c	/^static int setup(void** state)$/;"	f	file:
sg_data	authenticate.c	/^} sg_data = {0};$/;"	v	typeref:struct:__anon15	file:
sg_data	ext_tls.c	/^} sg_data;$/;"	v	typeref:struct:__anon27	file:
shift_left	jtag_test.c	/^void shift_left(unsigned char* buffer, size_t buffer_size)$/;"	f
shift_left_test	tests/jtag_test_tests.c	/^static void shift_left_test(void** state)$/;"	f	file:
shift_left_with_carry_over_test	tests/jtag_test_tests.c	/^static void shift_left_with_carry_over_test(void** state)$/;"	f	file:
shift_padding	jtag_handler.h	/^    JTAGShiftPadding shift_padding;$/;"	m	struct:JTAG_Chain_State
shift_right	jtag_test.c	/^void shift_right(unsigned char* buffer, size_t buffer_size)$/;"	f
shift_right_test	tests/jtag_test_tests.c	/^static void shift_right_test(void** state)$/;"	f	file:
shift_right_with_carry_over_test	tests/jtag_test_tests.c	/^static void shift_right_with_carry_over_test(void** state)$/;"	f	file:
shouldLogCallback	logging.c	/^static ShouldLogFunctionPtr shouldLogCallback = NULL;$/;"	v	file:
shouldRemoteLog	tests/logging_tests.c	/^static bool shouldRemoteLog(ASD_LogLevel level, ASD_LogStream stream)$/;"	f	file:
shouldRemoteLogCalled	tests/logging_tests.c	/^bool shouldRemoteLogCalled = false;$/;"	v
shouldRemoteLogResponse	tests/logging_tests.c	/^bool shouldRemoteLogResponse = false;$/;"	v
should_remote_log	asd_msg.c	/^bool should_remote_log(ASD_LogLevel asd_level, ASD_LogStream asd_stream)$/;"	f
should_remote_log	asd_msg.h	/^    ShouldLogFunctionPtr should_remote_log;$/;"	m	struct:ASD_MSG
should_remote_log_test	tests/asd_msg_tests.c	/^void should_remote_log_test(void** state)$/;"	f
showUsage	asd_main.c	/^void showUsage(char** argv)$/;"	f
showUsage	jtag_test.c	/^void showUsage(char** argv)$/;"	f
sighandler_t	tests/ext_network_tests.c	/^typedef void (*sighandler_t)(int);$/;"	t	file:
size_lsb	asd_common.h	/^    uint8_t size_lsb : 8;$/;"	m	struct:message_header
size_msb	asd_common.h	/^    uint8_t size_msb : 5;$/;"	m	struct:message_header
snprintf_safe_failure	tests/mem_helper_test.c	/^void snprintf_safe_failure(void** state)$/;"	f
snprintf_safe_failure_integer_zero	tests/mem_helper_test.c	/^void snprintf_safe_failure_integer_zero(void** state)$/;"	f
snprintf_safe_success_mul_test2	tests/mem_helper_test.c	/^void snprintf_safe_success_mul_test2(void** state)$/;"	f
snprintf_safe_success_test	tests/mem_helper_test.c	/^void snprintf_safe_success_test(void** state)$/;"	f
snprintf_safe_success_test2	tests/mem_helper_test.c	/^void snprintf_safe_success_test2(void** state)$/;"	f
sockfd	ext_network.h	/^    int sockfd;        \/\/ File descriptor of socket$/;"	m	struct:__anon24
ssl_ctx	ext_tls.c	/^    SSL_CTX* ssl_ctx;$/;"	m	struct:__anon27	file:
state	tests/target_handler_tests.c	/^    int state;$/;"	m	struct:gpiod_line	file:
strcpy_success_dest_null_test	tests/mem_helper_test.c	/^void strcpy_success_dest_null_test(void** state)$/;"	f
strcpy_success_size_fail_test	tests/mem_helper_test.c	/^void strcpy_success_size_fail_test(void** state)$/;"	f
strcpy_success_src_null_test	tests/mem_helper_test.c	/^void strcpy_success_src_null_test(void** state)$/;"	f
strcpy_success_test	tests/mem_helper_test.c	/^void strcpy_success_test(void** state)$/;"	f
stream	dbus_helper.c	/^static const ASD_LogStream stream = ASD_LogStream_Pins;$/;"	v	file:
stream	i2c_handler.c	/^static const ASD_LogStream stream = ASD_LogStream_I2C;$/;"	v	file:
stream	jtag_handler.c	/^static const ASD_LogStream stream = ASD_LogStream_JTAG;$/;"	v	file:
stream	jtag_test.c	/^const ASD_LogStream stream = ASD_LogStream_Test;$/;"	v
stream	target_handler.c	/^static const ASD_LogStream stream = ASD_LogStream_Pins;$/;"	v	file:
stream	vprobe_handler.c	/^static const ASD_LogStream stream = ASD_LogStream_JTAG;$/;"	v	file:
streamtostring	logging.h	/^static inline char* streamtostring(ASD_LogStream stream)$/;"	f
streamtostring_test	tests/logging_tests.c	/^void streamtostring_test(void** state)$/;"	f
string_to_enum	target_handler.c	/^static inline void string_to_enum(char* str, const char* (*enum_strings)[],$/;"	f	file:
strtolevel	logging.c	/^bool strtolevel(char* input, ASD_LogLevel* output)$/;"	f
strtolevel_output	tests/asd_main_tests.c	/^ASD_LogLevel strtolevel_output = ASD_LogLevel_Off;$/;"	v
strtolevel_output	tests/jtag_test_tests.c	/^ASD_LogLevel strtolevel_output = ASD_LogLevel_Off;$/;"	v
strtolevel_result	tests/asd_main_tests.c	/^bool strtolevel_result = true;$/;"	v
strtolevel_result	tests/jtag_test_tests.c	/^bool strtolevel_result = true;$/;"	v
strtolevel_test	tests/logging_tests.c	/^void strtolevel_test(void** state)$/;"	f
strtostreams	logging.c	/^bool strtostreams(char* input, ASD_LogStream* output)$/;"	f
strtostreams_output	tests/asd_main_tests.c	/^ASD_LogStream strtostreams_output = ASD_LogStream_None;$/;"	v
strtostreams_output	tests/jtag_test_tests.c	/^ASD_LogStream strtostreams_output = ASD_LogLevel_Off;$/;"	v
strtostreams_result	tests/asd_main_tests.c	/^bool strtostreams_result = true;$/;"	v
strtostreams_result	tests/jtag_test_tests.c	/^bool strtostreams_result = true;$/;"	v
strtostreams_test	tests/logging_tests.c	/^void strtostreams_test(void** state)$/;"	f
svr_hdr_version	auth_pam.h	/^    unsigned char svr_hdr_version;$/;"	m	struct:__anon21
sw_mode	jtag_handler.h	/^    bool sw_mode;$/;"	m	struct:JTAG_Handler
t_auth_tout	session.h	/^    time_t t_auth_tout;    \/\/ Time stamp when authentication attempt times out$/;"	m	struct:__anon35
tag	asd_common.h	/^    uint8_t tag : 3;$/;"	m	struct:message_header
tap_data_pattern	jtag_test.h	/^    unsigned char tap_data_pattern[8]; \/\/ Used for tap data comparison$/;"	m	struct:jtag_test_args
tap_state	jtag_handler.h	/^    enum jtag_states tap_state;$/;"	m	struct:JTAG_Chain_State	typeref:enum:JTAG_Chain_State::jtag_states
tap_state	tests/jtag_drv.h	/^    __u32 tap_state;$/;"	m	struct:scan_xfer
tap_state_param	jtag_handler.h	73;"	d
tap_state_param	tests/jtag_drv.h	/^struct tap_state_param$/;"	s
target_deinitialize	target_handler.c	/^STATUS target_deinitialize(Target_Control_Handle* state)$/;"	f
target_deinitialize_already_initialized_test	tests/target_handler_tests.c	/^void target_deinitialize_already_initialized_test(void** state)$/;"	f
target_deinitialize_gpio_unexport_failure_test	tests/target_handler_tests.c	/^void target_deinitialize_gpio_unexport_failure_test(void** state)$/;"	f
target_deinitialize_invalid_param_test	tests/target_handler_tests.c	/^void target_deinitialize_invalid_param_test(void** state)$/;"	f
target_deinitialize_non_minus_test	tests/target_handler_tests.c	/^void target_deinitialize_non_minus_test(void** state)$/;"	f
target_deinitialize_success_test	tests/target_handler_tests.c	/^void target_deinitialize_success_test(void** state)$/;"	f
target_event	target_handler.c	/^STATUS target_event(Target_Control_Handle* state, struct pollfd poll_fd,$/;"	f
target_event_dbus_test	tests/target_handler_tests.c	/^void target_event_dbus_test(void** state)$/;"	f
target_event_invalid_state_test	tests/target_handler_tests.c	/^void target_event_invalid_state_test(void** state)$/;"	f
target_event_plat_reset_event_asserted_test	tests/target_handler_tests.c	/^void target_event_plat_reset_event_asserted_test(void** state)$/;"	f
target_event_plat_reset_event_deasserted_test	tests/target_handler_tests.c	/^void target_event_plat_reset_event_deasserted_test(void** state)$/;"	f
target_event_plat_reset_event_gpio_get_value_failure_test	tests/target_handler_tests.c	/^void target_event_plat_reset_event_gpio_get_value_failure_test(void** state)$/;"	f
target_event_plat_reset_event_gpio_set_value_failure_test	tests/target_handler_tests.c	/^void target_event_plat_reset_event_gpio_set_value_failure_test(void** state)$/;"	f
target_event_power_dbus_failed_test	tests/target_handler_tests.c	/^void target_event_power_dbus_failed_test(void** state)$/;"	f
target_event_power_dbus_test	tests/target_handler_tests.c	/^void target_event_power_dbus_test(void** state)$/;"	f
target_event_power_event_gpio_get_value_failure_test	tests/target_handler_tests.c	/^void target_event_power_event_gpio_get_value_failure_test(void** state)$/;"	f
target_event_power_event_pwrfail_test	tests/target_handler_tests.c	/^void target_event_power_event_pwrfail_test(void** state)$/;"	f
target_event_power_event_restored_test	tests/target_handler_tests.c	/^void target_event_power_event_restored_test(void** state)$/;"	f
target_event_prdy_no_breakall_test	tests/target_handler_tests.c	/^void target_event_prdy_no_breakall_test(void** state)$/;"	f
target_event_prdy_set_preq_fail_test	tests/target_handler_tests.c	/^void target_event_prdy_set_preq_fail_test(void** state)$/;"	f
target_event_prdy_toggle_preq_fail_test	tests/target_handler_tests.c	/^void target_event_prdy_toggle_preq_fail_test(void** state)$/;"	f
target_event_prdy_toggle_preq_test	tests/target_handler_tests.c	/^void target_event_prdy_toggle_preq_test(void** state)$/;"	f
target_event_to_ignore_test	tests/target_handler_tests.c	/^void target_event_to_ignore_test(void** state)$/;"	f
target_event_xdp_present_test	tests/target_handler_tests.c	/^void target_event_xdp_present_test(void** state)$/;"	f
target_fdarr_t	target_handler.h	/^typedef struct pollfd target_fdarr_t[NUM_GPIOS + NUM_DBUS_FDS];$/;"	t	typeref:struct:pollfd
target_get_fds	target_handler.c	/^STATUS target_get_fds(Target_Control_Handle* state, target_fdarr_t* fds,$/;"	f
target_get_fds_not_initialized_test	tests/target_handler_tests.c	/^void target_get_fds_not_initialized_test(void** state)$/;"	f
target_get_fds_success_test	tests/target_handler_tests.c	/^void target_get_fds_success_test(void** state)$/;"	f
target_get_i2c_config	target_handler.c	/^STATUS target_get_i2c_config(i2c_options* i2c)$/;"	f
target_handler	asd_msg.h	/^    Target_Control_Handle* target_handler;$/;"	m	struct:ASD_MSG
target_initialize	target_handler.c	/^STATUS target_initialize(Target_Control_Handle* state)$/;"	f
target_initialize_already_initialized_test	tests/target_handler_tests.c	/^void target_initialize_already_initialized_test(void** state)$/;"	f
target_initialize_debug_enable_failed_test	tests/target_handler_tests.c	/^void target_initialize_debug_enable_failed_test(void** state)$/;"	f
target_initialize_dummy_gpio_read_fail_test	tests/target_handler_tests.c	/^void target_initialize_dummy_gpio_read_fail_test(void** state)$/;"	f
target_initialize_gpio_export_failure_test	tests/target_handler_tests.c	/^void target_initialize_gpio_export_failure_test(void** state)$/;"	f
target_initialize_gpio_find_failure	tests/target_handler_tests.c	/^void target_initialize_gpio_find_failure(void** state)$/;"	f
target_initialize_gpio_set_active_low_failure_test	tests/target_handler_tests.c	/^void target_initialize_gpio_set_active_low_failure_test(void** state)$/;"	f
target_initialize_gpio_set_direction_failure_test	tests/target_handler_tests.c	/^void target_initialize_gpio_set_direction_failure_test(void** state)$/;"	f
target_initialize_gpio_set_edge_failure_test	tests/target_handler_tests.c	/^void target_initialize_gpio_set_edge_failure_test(void** state)$/;"	f
target_initialize_gpiod_chip_get_line_failure_test	tests/target_handler_tests.c	/^void target_initialize_gpiod_chip_get_line_failure_test(void** state)$/;"	f
target_initialize_gpiod_chip_open_failure_test	tests/target_handler_tests.c	/^void target_initialize_gpiod_chip_open_failure_test(void** state)$/;"	f
target_initialize_gpiod_ctxless_find_line_failure_test	tests/target_handler_tests.c	/^void target_initialize_gpiod_ctxless_find_line_failure_test(void** state)$/;"	f
target_initialize_gpiod_ctxless_find_line_not_found_test	tests/target_handler_tests.c	/^void target_initialize_gpiod_ctxless_find_line_not_found_test(void** state)$/;"	f
target_initialize_gpiod_line_event_get_fd_failure_test	tests/target_handler_tests.c	/^void target_initialize_gpiod_line_event_get_fd_failure_test(void** state)$/;"	f
target_initialize_gpiod_line_request_failure_test	tests/target_handler_tests.c	/^void target_initialize_gpiod_line_request_failure_test(void** state)$/;"	f
target_initialize_invalid_param_test	tests/target_handler_tests.c	/^void target_initialize_invalid_param_test(void** state)$/;"	f
target_initialize_powergood_pin_handler_test	tests/target_handler_tests.c	/^void target_initialize_powergood_pin_handler_test(void** state)$/;"	f
target_initialize_success_test	tests/target_handler_tests.c	/^void target_initialize_success_test(void** state)$/;"	f
target_initialize_xdp_check_failed_test	tests/target_handler_tests.c	/^void target_initialize_xdp_check_failed_test(void** state)$/;"	f
target_initialize_xdp_connected_test	tests/target_handler_tests.c	/^void target_initialize_xdp_connected_test(void** state)$/;"	f
target_read	target_handler.c	/^STATUS target_read(Target_Control_Handle* state, Pin pin, bool* asserted)$/;"	f
target_read_BMC_PRDY_N_failure_test	tests/target_handler_tests.c	/^void target_read_BMC_PRDY_N_failure_test(void** state)$/;"	f
target_read_BMC_PRDY_N_success_test	tests/target_handler_tests.c	/^void target_read_BMC_PRDY_N_success_test(void** state)$/;"	f
target_read_not_initialized_test	tests/target_handler_tests.c	/^void target_read_not_initialized_test(void** state)$/;"	f
target_read_power_pin_failed_test	tests/target_handler_tests.c	/^void target_read_power_pin_failed_test(void** state)$/;"	f
target_read_power_pin_gpio_failed_test	tests/target_handler_tests.c	/^void target_read_power_pin_gpio_failed_test(void** state)$/;"	f
target_read_power_pin_gpio_test	tests/target_handler_tests.c	/^void target_read_power_pin_gpio_test(void** state)$/;"	f
target_read_power_pin_test	tests/target_handler_tests.c	/^void target_read_power_pin_test(void** state)$/;"	f
target_read_unkown_pin_test	tests/target_handler_tests.c	/^void target_read_unkown_pin_test(void** state)$/;"	f
target_wait_PRDY	target_handler.c	/^STATUS target_wait_PRDY(Target_Control_Handle* state, const uint8_t log2time)$/;"	f
target_wait_PRDY_not_initialized_test	tests/target_handler_tests.c	/^void target_wait_PRDY_not_initialized_test(void** state)$/;"	f
target_wait_PRDY_poll_detected_test	tests/target_handler_tests.c	/^void target_wait_PRDY_poll_detected_test(void** state)$/;"	f
target_wait_PRDY_poll_error_test	tests/target_handler_tests.c	/^void target_wait_PRDY_poll_error_test(void** state)$/;"	f
target_wait_PRDY_poll_timeout_test	tests/target_handler_tests.c	/^void target_wait_PRDY_poll_timeout_test(void** state)$/;"	f
target_wait_sync	target_handler.c	/^STATUS target_wait_sync(Target_Control_Handle* state, const uint16_t timeout,$/;"	f
target_wait_sync_master_test	tests/target_handler_tests.c	/^void target_wait_sync_master_test(void** state)$/;"	f
target_wait_sync_not_initialized_test	tests/target_handler_tests.c	/^void target_wait_sync_not_initialized_test(void** state)$/;"	f
target_wait_sync_slave_test	tests/target_handler_tests.c	/^void target_wait_sync_slave_test(void** state)$/;"	f
target_write	target_handler.c	/^STATUS target_write(Target_Control_Handle* state, const Pin pin,$/;"	f
target_write_PIN_PREQ_failure_test	tests/target_handler_tests.c	/^void target_write_PIN_PREQ_failure_test(void** state)$/;"	f
target_write_PIN_PREQ_success_test	tests/target_handler_tests.c	/^void target_write_PIN_PREQ_success_test(void** state)$/;"	f
target_write_PIN_SYS_PWR_OK_success_test	tests/target_handler_tests.c	/^void target_write_PIN_SYS_PWR_OK_success_test(void** state)$/;"	f
target_write_PIN_TCK_MUX_SELECT_success_test	tests/target_handler_tests.c	/^void target_write_PIN_TCK_MUX_SELECT_success_test(void** state)$/;"	f
target_write_event_WRITE_CONFIG_BREAK_ALL_test	tests/target_handler_tests.c	/^void target_write_event_WRITE_CONFIG_BREAK_ALL_test(void** state)$/;"	f
target_write_event_WRITE_CONFIG_REPORT_MBP_test	tests/target_handler_tests.c	/^void target_write_event_WRITE_CONFIG_REPORT_MBP_test(void** state)$/;"	f
target_write_event_WRITE_CONFIG_REPORT_PLTRST_test	tests/target_handler_tests.c	/^void target_write_event_WRITE_CONFIG_REPORT_PLTRST_test(void** state)$/;"	f
target_write_event_WRITE_CONFIG_REPORT_PRDY_test	tests/target_handler_tests.c	/^void target_write_event_WRITE_CONFIG_REPORT_PRDY_test(void** state)$/;"	f
target_write_event_WRITE_CONFIG_RESET_BREAK_test	tests/target_handler_tests.c	/^void target_write_event_WRITE_CONFIG_RESET_BREAK_test(void** state)$/;"	f
target_write_event_config	target_handler.c	/^STATUS target_write_event_config(Target_Control_Handle* state,$/;"	f
target_write_event_config_not_initialized_test	tests/target_handler_tests.c	/^void target_write_event_config_not_initialized_test(void** state)$/;"	f
target_write_event_unkown_event_test	tests/target_handler_tests.c	/^void target_write_event_unkown_event_test(void** state)$/;"	f
target_write_not_initialized_test	tests/target_handler_tests.c	/^void target_write_not_initialized_test(void** state)$/;"	f
target_write_power_off_success_test	tests/target_handler_tests.c	/^void target_write_power_off_success_test(void** state)$/;"	f
target_write_power_on_and_reset_break_success_test	tests/target_handler_tests.c	/^void target_write_power_on_and_reset_break_success_test(void** state)$/;"	f
target_write_power_on_dbus_failure_test	tests/target_handler_tests.c	/^void target_write_power_on_dbus_failure_test(void** state)$/;"	f
target_write_power_on_dbus_success_test	tests/target_handler_tests.c	/^void target_write_power_on_dbus_success_test(void** state)$/;"	f
target_write_power_on_success_test	tests/target_handler_tests.c	/^void target_write_power_on_success_test(void** state)$/;"	f
target_write_power_onoff_failure_test	tests/target_handler_tests.c	/^void target_write_power_onoff_failure_test(void** state)$/;"	f
target_write_power_reset_and_reset_break_success_test	tests/target_handler_tests.c	/^void target_write_power_reset_and_reset_break_success_test(void** state)$/;"	f
target_write_power_reset_success_test	tests/target_handler_tests.c	/^void target_write_power_reset_success_test(void** state)$/;"	f
target_write_unkown_pin_test	tests/target_handler_tests.c	/^void target_write_unkown_pin_test(void** state)$/;"	f
tck	jtag_test.h	/^    unsigned int tck;$/;"	m	struct:jtag_test_args
tck	tests/jtag.h	/^    __u8 tck;$/;"	m	struct:jtag_tap_state
tck	tests/jtag_drv.h	/^    __u32 tck;$/;"	m	struct:get_tck_param
tck	tests/jtag_drv.h	/^    __u32 tck;$/;"	m	struct:set_tck_param
tck_bitbang	tests/jtag.h	/^struct tck_bitbang$/;"	s
tck_bitbang	tests/jtag_drv.h	/^struct tck_bitbang$/;"	s
tcp_hdlrs	ext_tcp.c	/^extnet_hdlrs_t tcp_hdlrs = {$/;"	v
tcp_hdlrs	tests/ext_network_tests.c	/^extnet_hdlrs_t tcp_hdlrs = {$/;"	v
tdi	tests/asd_msg_tests.c	/^unsigned char* tdi = NULL;$/;"	v
tdi	tests/jtag.h	/^    __u8 tdi;$/;"	m	struct:tck_bitbang
tdi	tests/jtag_drv.h	/^    __u8 tdi;$/;"	m	struct:tck_bitbang
tdi	tests/jtag_drv.h	/^    __u8* tdi;$/;"	m	struct:scan_xfer
tdi	tests/jtag_test_tests.c	/^unsigned char* tdi = NULL;$/;"	v
tdi_bytes	tests/jtag_drv.h	/^    __u32 tdi_bytes;$/;"	m	struct:scan_xfer
tdi_bytes	tests/jtag_test_tests.c	/^size_t tdi_bytes = 0;$/;"	v
tdio	tests/jtag.h	/^    __u64 tdio;$/;"	m	struct:jtag_xfer
tdo	tests/asd_msg_tests.c	/^unsigned char* tdo = NULL;$/;"	v
tdo	tests/jtag.h	/^    __u8 tdo;$/;"	m	struct:tck_bitbang
tdo	tests/jtag_drv.h	/^    __u8 tdo;$/;"	m	struct:tck_bitbang
tdo	tests/jtag_drv.h	/^    __u8* tdo;$/;"	m	struct:scan_xfer
tdo	tests/jtag_test_tests.c	/^unsigned char* tdo = NULL;$/;"	v
tdo_bytes	tests/asd_msg_tests.c	/^size_t tdo_bytes = 0;$/;"	v
tdo_bytes	tests/jtag_drv.h	/^    __u32 tdo_bytes;$/;"	m	struct:scan_xfer
tdo_bytes	tests/jtag_test_tests.c	/^size_t tdo_bytes = 0;$/;"	v
tdo_index	tests/asd_msg_tests.c	/^size_t tdo_index = 0;$/;"	v
tdo_index	tests/jtag_test_tests.c	/^size_t tdo_index = 0;$/;"	v
teardown	tests/asd_main_tests.c	/^static int teardown(void** state)$/;"	f	file:
teardown	tests/asd_msg_tests.c	/^static int teardown(void** state)$/;"	f	file:
teardown	tests/auth_pam_tests.c	/^static int teardown(void** state)$/;"	f	file:
teardown	tests/authenticate_tests.c	/^static int teardown(void** state)$/;"	f	file:
teardown	tests/i2c_msg_builder_tests.c	/^static int teardown(void** state)$/;"	f	file:
teardown	tests/jtag_handler_tests.c	/^static int teardown(void** state)$/;"	f	file:
teardown	tests/jtag_test_tests.c	/^static int teardown(void** state)$/;"	f	file:
teardown	tests/logging_tests.c	/^static int teardown(void** state)$/;"	f	file:
teardown	tests/target_handler_tests.c	/^static int teardown(void** state)$/;"	f	file:
temporary_syslog_buffer	tests/logging_tests.c	/^static char temporary_syslog_buffer[256];$/;"	v	file:
temporary_vfprintf_buffer	tests/logging_tests.c	/^static char temporary_vfprintf_buffer[1024];$/;"	v	file:
test_ioctl_index	tests/jtag_handler_tests.c	/^static int test_ioctl_index = 0;$/;"	v	file:
timersub	jtag_test.c	46;"	d	file:
tls_hdlrs	ext_tls.c	/^extnet_hdlrs_t tls_hdlrs = {$/;"	v
tls_hdlrs	tests/ext_network_tests.c	/^extnet_hdlrs_t tls_hdlrs = {$/;"	v
tms	tests/jtag.h	/^    __u8 tms;$/;"	m	struct:tck_bitbang
tms	tests/jtag_drv.h	/^    __u8 tms;$/;"	m	struct:tck_bitbang
to_state	tests/jtag_drv.h	/^    __u32 to_state;$/;"	m	struct:tap_state_param
total	asd_msg.h	/^    unsigned int used, total;$/;"	m	struct:packet_data
type	asd_common.h	/^    uint8_t type : 3;$/;"	m	struct:message_header
type	target_handler.h	/^    Pin_Type type;$/;"	m	struct:Target_Control_GPIO
type	tests/jtag.h	/^    __u8 type;$/;"	m	struct:jtag_xfer
uncore_discovery	jtag_test.c	/^bool uncore_discovery(JTAG_Handler* jtag, uncore_info* uncore,$/;"	f
uncore_discovery_jtag_shift_fail_test	tests/jtag_test_tests.c	/^static void uncore_discovery_jtag_shift_fail_test(void** state)$/;"	f	file:
uncore_discovery_memcpy_fail_test	tests/jtag_test_tests.c	/^static void uncore_discovery_memcpy_fail_test(void** state)$/;"	f	file:
uncore_discovery_pattern_not_found_test	tests/jtag_test_tests.c	/^static void uncore_discovery_pattern_not_found_test(void** state)$/;"	f	file:
uncore_discovery_reset_rti_fail_test	tests/jtag_test_tests.c	/^static void uncore_discovery_reset_rti_fail_test(void** state)$/;"	f	file:
uncore_discovery_shift_dr_fail_test	tests/jtag_test_tests.c	/^static void uncore_discovery_shift_dr_fail_test(void** state)$/;"	f	file:
uncore_discovery_success_test	tests/jtag_test_tests.c	/^static void uncore_discovery_success_test(void** state)$/;"	f	file:
uncore_info	jtag_test.h	/^typedef struct uncore_info$/;"	s
uncore_info	jtag_test.h	/^} uncore_info;$/;"	t	typeref:struct:uncore_info
up_to_date	tests/target_handler_tests.c	/^    bool up_to_date;$/;"	m	struct:gpiod_line	file:
use_syslog	asd_main.h	/^    bool use_syslog;$/;"	m	struct:asd_args
used	asd_msg.h	/^    unsigned int used, total;$/;"	m	struct:packet_data
used	tests/target_handler_tests.c	/^    bool used;$/;"	m	struct:gpiod_line	file:
vProbeConfigAppend	vprobe_handler.c	/^STATUS vProbeConfigAppend(char** buff, size_t* destsize, const char* str)$/;"	f
vProbeHandler	vprobe_handler.c	/^vProbe_Handler* vProbeHandler()$/;"	f
vProbe_Handler	vprobe_handler.h	/^typedef struct vProbe_Handler$/;"	s
vProbe_Handler	vprobe_handler.h	/^} vProbe_Handler;$/;"	t	typeref:struct:vProbe_Handler
vProbe_deinitialize	vprobe_handler.c	/^STATUS vProbe_deinitialize(vProbe_Handler* state)$/;"	f
vProbe_initialize	vprobe_handler.c	/^STATUS vProbe_initialize(vProbe_Handler* state)$/;"	f
value	asd_common.h	/^        unsigned char value;$/;"	m	union:remote_logging_config::__anon10
vprobe_handler	asd_msg.h	/^    vProbe_Handler* vprobe_handler;$/;"	m	struct:ASD_MSG
wrap_pin_get_value	tests/target_handler_tests.c	/^void wrap_pin_get_value(Pin_Type type, int value, STATUS result)$/;"	f
wrap_pin_get_values	tests/target_handler_tests.c	/^void wrap_pin_get_values(Target_Control_Handle* handle, Pin_Type type,$/;"	f
wrap_pin_set_values	tests/target_handler_tests.c	/^void wrap_pin_set_values(Pin_Type type, int values[], STATUS results[], int n)$/;"	f
writeCfg	asd_common.h	/^} writeCfg;$/;"	t	typeref:enum:__anon3
write_cfg	asd_msg.c	/^STATUS write_cfg(ASD_MSG* state, const writeCfg cmd, struct packet_data* packet)$/;"	f
write_event_config	asd_msg.c	/^STATUS write_event_config(ASD_MSG* state, const uint8_t data_byte)$/;"	f
write_pin_value	target_handler.c	/^static inline void write_pin_value(Target_Control_GPIO gpio, int value,$/;"	f	file:
xfer_mode	tests/jtag_drv.h	/^enum xfer_mode$/;"	g
xfer_mode	tests/jtag_drv.h	/^} xfer_mode;$/;"	v	typeref:enum:xfer_mode
