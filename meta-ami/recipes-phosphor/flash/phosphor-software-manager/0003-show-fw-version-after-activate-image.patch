diff -Naur a/image_manager.cpp b/image_manager.cpp
--- a/image_manager.cpp	2020-08-28 21:04:48.990433905 +0530
+++ b/image_manager.cpp	2020-08-28 21:07:34.206540318 +0530
@@ -228,7 +228,7 @@
     	// Clear the path, so it does not attemp to remove a non-existing path
     	tmpDirToRemove.path.clear();
         auto versionPtr = std::make_unique<Version>(
-            bus, objPath, version, purpose, imageDirPath.string(),
+            bus, objPath, version, purpose, imageDirPath.string(), currentfunctionalVersion,
             std::bind(&Manager::erase, this, std::placeholders::_1));
         versionPtr->deleteObject =
             std::make_unique<phosphor::software::manager::Delete>(bus, objPath,
diff -Naur a/item_updater.cpp b/item_updater.cpp
--- a/item_updater.cpp	2020-08-28 21:05:36.163735054 +0530
+++ b/item_updater.cpp	2020-08-28 21:10:19.389590821 +0530
@@ -126,14 +126,14 @@
                 std::make_tuple(ACTIVATION_FWD_ASSOCIATION,
                                 ACTIVATION_REV_ASSOCIATION, bmcInventoryPath));
         }
-
+        std::string currentfunctionalVersion = VersionClass::getBMCVersion(OS_RELEASE_FILE);
         activations.insert(std::make_pair(
             versionId,
             std::make_unique<Activation>(bus, path, *this, versionId,
                                          activationState, associations)));
 
         auto versionPtr = std::make_unique<VersionClass>(
-            bus, path, version, purpose, filePath,
+            bus, path, version, purpose, filePath, currentfunctionalVersion,
             std::bind(&ItemUpdater::erase, this, std::placeholders::_1));
         versionPtr->deleteObject =
             std::make_unique<phosphor::software::manager::Delete>(bus, path,
@@ -250,7 +250,7 @@
 
             // Create Version instance for this version.
             auto versionPtr = std::make_unique<VersionClass>(
-                bus, path, version, purpose, "",
+                bus, path, version, purpose, "", functionalVersion,
                 std::bind(&ItemUpdater::erase, this, std::placeholders::_1));
             auto isVersionFunctional = versionPtr->isFunctional();
             if (!isVersionFunctional)
diff -Naur a/version.hpp b/version.hpp
--- a/version.hpp	2020-08-28 21:06:13.976699934 +0530
+++ b/version.hpp	2020-08-28 21:14:55.861096679 +0530
@@ -75,7 +75,7 @@
      */
     Version(sdbusplus::bus::bus& bus, const std::string& objPath,
             const std::string& versionString, VersionPurpose versionPurpose,
-            const std::string& filePath, eraseFunc callback) :
+            const std::string& filePath, const std::string currentfunctionalVersion, eraseFunc callback) :
         VersionInherit(bus, (objPath).c_str(), true),
         eraseCallback(callback), versionStr(versionString)
     {
@@ -83,6 +83,7 @@
         purpose(versionPurpose);
         version(versionString);
         path(filePath);
+        functionalversion(currentfunctionalVersion);
         // Emit deferred signal.
         emit_object_added();
     }
