diff -Naur a/include/login_routes.hpp b/include/login_routes.hpp
--- a/include/login_routes.hpp	2021-03-02 23:19:12.271244319 +0530
+++ b/include/login_routes.hpp	2021-03-02 23:16:22.345699452 +0530
@@ -139,11 +139,12 @@
             {
                 int pamrc = pamAuthenticateUser(username, password);
                 bool isConfigureSelfOnly = pamrc == PAM_NEW_AUTHTOK_REQD;
-                if ((pamrc != PAM_SUCCESS) && !isConfigureSelfOnly)
-                {
-                    res.result(boost::beast::http::status::unauthorized);
-                }
-                else
+                //if ((pamrc != PAM_SUCCESS) && !isConfigureSelfOnly)
+                //{
+                //    res.result(boost::beast::http::status::unauthorized);
+                //}
+                //else
+		if (pamrc == PAM_SUCCESS)
                 {
                     auto session =
                         persistent_data::SessionStore::getInstance()
@@ -186,6 +187,15 @@
                         res.jsonValue = {{"token", session->sessionToken}};
                     }
                 }
+		else if(pamrc == PAM_MAXTRIES)
+                {
+                    res.result(boost::beast::http::status::locked);
+                }
+                else if ((pamrc != PAM_SUCCESS) && !isConfigureSelfOnly)
+                {
+                    res.result(boost::beast::http::status::unauthorized);
+                }
+
             }
             else
             {
diff -Naur a/include/pam_authenticate.hpp b/include/pam_authenticate.hpp
--- a/include/pam_authenticate.hpp	2021-03-02 23:19:12.271244319 +0530
+++ b/include/pam_authenticate.hpp	2021-03-02 23:16:22.341699415 +0530
@@ -6,6 +6,9 @@
 
 #include <cstring>
 #include <memory>
+#include <variant>
+#include <dbus_utility.hpp>
+
 
 // function used to get user input
 inline int pamFunctionConversation(int numMsg, const struct pam_message** msg,
@@ -49,6 +52,39 @@
     return PAM_SUCCESS;
 }
 
+//checking the UserLockedForFailedAttempt,if it is true pam_athenticate return PAM_MAXTRIES
+
+static bool pamMaxtriescheck(std::string& userName)
+{
+        const char* userNameStr = userName.c_str();
+        const char* serviceName = "xyz.openbmc_project.User.Manager";
+        std::string objPath = "/xyz/openbmc_project/user/";
+        objPath += userNameStr;
+        const char* UserObjPath = objPath.c_str();
+        std::string lockedUserIface ="xyz.openbmc_project.User.Attributes";
+        std::string lockedUserProperty = "UserLockedForFailedAttempt";
+        std::variant <bool> lockedUserValue;
+        bool UserMaxtriesReached;
+        sdbusplus::message::message getlockedUser = crow::connections::systemBus->new_method_call(serviceName,UserObjPath,
+                                                                                                "org.freedesktop.DBus.Properties","Get");
+        getlockedUser.append(lockedUserIface,lockedUserProperty);
+        try
+        {
+                sdbusplus::message::message getlockedUserResp = crow::connections::systemBus->call(getlockedUser);
+                getlockedUserResp.read(lockedUserValue);
+        }
+        catch (sdbusplus::exception_t &)
+        {
+            return false;
+        }
+        UserMaxtriesReached = std::get<bool>(lockedUserValue);
+        if(UserMaxtriesReached == true)
+        {
+                return true;
+        }
+        return false;
+}
+
 /**
  * @brief Attempt username/password authentication via PAM.
  * @param username The provided username aka account name.
@@ -63,8 +99,12 @@
         pamFunctionConversation, const_cast<char*>(passStr.c_str())};
     pam_handle_t* localAuthHandle = nullptr; // this gets set by pam_start
 
-    int retval = pam_start("webserver", userStr.c_str(), &localConversation,
+    int retval = 0;
+    bool pamMaxerror;
+    retval = pam_start("webserver", userStr.c_str(), &localConversation,
                            &localAuthHandle);
+
+
     if (retval != PAM_SUCCESS)
     {
         return retval;
@@ -74,7 +114,13 @@
                               PAM_SILENT | PAM_DISALLOW_NULL_AUTHTOK);
     if (retval != PAM_SUCCESS)
     {
-        pam_end(localAuthHandle, PAM_SUCCESS); // ignore retval
+	pam_end(localAuthHandle, PAM_SUCCESS);
+        pamMaxerror = pamMaxtriescheck(userStr);
+        if(pamMaxerror == true)
+        {
+                return PAM_MAXTRIES;
+        }
+
         return retval;
     }
 
