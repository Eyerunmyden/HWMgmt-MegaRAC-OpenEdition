diff -Naur a/app/common/directives/app-navigation.html b/app/common/directives/app-navigation.html
--- a/app/common/directives/app-navigation.html	2021-05-22 01:23:03.539128787 +0530
+++ b/app/common/directives/app-navigation.html	2021-05-22 01:24:29.358988183 +0530
@@ -104,8 +104,28 @@
               time
               settings</span></a>
         </li>
+        <li ng-class="{'active': (path == '/configuration' || path == '/configuration/smtp')}">
+          <a href="#/configuration/smtp" tabindex="{{(showConfigMenu) ? 0 : -1}}"><span>SMTP
+              settings</span></a>
+        </li>
+      </ul>
+    </li>
+
+    <li ng-class="{opened: showPEFMenu}">
+      <button ng-click="change('PEF')">
+        <icon class="nav-icon" file="icon-control.svg" aria-hidden="true"></icon>
+        <span class="nav-link">Platform Event Filter</span>
+      </button>
+      <ul class="nav__second-level btn-firmware" ng-class="{opened: (showPEFMenu)}">
+        <li ng-class="{'active': (path == '/PEF' || path == '/PEF/alertpolicy')}">
+          <a href="#/PEF/alertpolicy" tabindex="{{(showPEFMenu) ? 0 : -1}}"><span>Alert Policy settings</span></a>
+        </li>
+        <li ng-class="{'active': (path == '/PEF' || path == '/PEF/eventfilter')}">
+          <a href="#/PEF/eventfilter" tabindex="{{(showPEFMenu) ? 0 : -1}}"><span>Event Filter settings</span></a>
+        </li>
       </ul>
     </li>
+
     <li ng-class="{opened: showAccessMenu}">
       <button ng-click="change('access-control')">
         <icon class="nav-icon" file="icon-user.svg" aria-hidden="true"></icon>
diff -Naur a/app/common/directives/app-navigation.js b/app/common/directives/app-navigation.js
--- a/app/common/directives/app-navigation.js	2021-05-22 01:23:03.539128787 +0530
+++ b/app/common/directives/app-navigation.js	2021-05-22 01:24:42.630966860 +0530
@@ -27,6 +27,9 @@
                   case 'configuration':
                     $scope.showConfigMenu = !$scope.showConfigMenu;
                     break;
+                  case 'PEF':
+                    $scope.showPEFMenu = !$scope.showPEFMenu;
+                    break;
                   case 'access-control':
                     $scope.showAccessMenu = !$scope.showAccessMenu;
                     break;
diff -Naur a/app/common/services/api-utils.js b/app/common/services/api-utils.js
--- a/app/common/services/api-utils.js	2021-05-22 01:23:03.539128787 +0530
+++ b/app/common/services/api-utils.js	2021-05-22 01:26:06.254834799 +0530
@@ -2133,7 +2133,100 @@
             withCredentials: true,
             data: JSON.stringify({'data': []})
           });
-	},
+	      },
+
+        getSMTPConfigurations: function(){
+          // TO get SMTP configurations
+            return $http({
+              method: 'POST',
+              url: DataService.getHost() + '/xyz/openbmc_project/mail/alert/action/GetSmtpConfig',
+              withCredentials: true,
+              data: JSON.stringify({'data': []})
+            });
+        },
+        setSMTPConfigurations: function(data){
+          return $http({
+            method: 'POST',
+            url: DataService.getHost() + '/xyz/openbmc_project/mail/alert/action/SetSmtpConfig',
+            withCredentials: true,
+            data: JSON.stringify({'data': data})
+          });
+        },
+        getAlertPolicyConfigurations: function(){
+          return $http({
+            method: 'GET',
+            url: DataService.getHost() + '/xyz/openbmc_project/PefAlertManager/AlertPolicyTable/enumerate',
+            withCredentials: true,
+          });
+        },
+        setAlertNumber: function(num, entry){
+          var entry_string = 'Entry' + entry;
+          return $http({
+            method: 'PUT',
+            url: DataService.getHost() + '/xyz/openbmc_project/PefAlertManager/AlertPolicyTable/'+entry_string+'/attr/AlertNum',
+            data: JSON.stringify({'data': num})
+          })
+        },
+        setAlertStringKey: function(skey, entry){
+          var entry_string = 'Entry' + entry;
+          return $http({
+            method: 'PUT',
+            url: DataService.getHost() + '/xyz/openbmc_project/PefAlertManager/AlertPolicyTable/'+entry_string+'/attr/AlertStingkey',
+            data: JSON.stringify({'data': skey})
+          })
+        },
+        setChannelDestinationSelector: function(dselec, entry){
+          var entry_string = 'Entry' + entry;
+          return $http({
+            method: 'PUT',
+            url: DataService.getHost() + '/xyz/openbmc_project/PefAlertManager/AlertPolicyTable/'+entry_string+'/attr/ChannelDestSel',
+            data: JSON.stringify({'data': dselec})
+          })
+        },
+        getEventFilterConfigurations: function(){
+          return $http({
+            method: 'GET',
+            url: DataService.getHost() + '/xyz/openbmc_project/PefAlertManager/EventFilterTable/enumerate',
+            withCredentials: true,
+          });
+        },
+        getSensorNumbers: function(callback){
+          $http({
+            method: 'POST',
+            url: DataService.getHost() + '/xyz/openbmc_project/object_mapper/action/GetSubTree',
+            data: JSON.stringify({"data": ["/xyz/openbmc_project/sensors", 2, ["xyz.openbmc_project.Sensor.Value", "xyz.openbmc_project.Sensor.Threshold.Warning", "xyz.openbmc_project.Sensor.Threshold.Critical"]]})
+          }).then(function(response){
+            var data = response.data;
+            var sensor_data = data.data;
+            var sensors_with_numbers = [];
+            var idx = 0;
+            for(var i in sensor_data){
+              var temp = {};
+              var s_name = i.split('/').pop()
+
+              s_name = s_name.split('_').map(function(item) {
+                return item.toLowerCase().charAt(0).toUpperCase() + item.slice(1);
+              })
+              .reduce(function(prev, el) {
+                return prev + ' ' + el;
+              });
+
+              temp['sensor_name'] = s_name;
+              temp['sensor_ID'] = idx;
+              sensors_with_numbers.push(temp);
+              idx++;
+            }
+            callback(sensors_with_numbers);
+          });
+        },
+
+        SaveEventFilterData: function(Entry, attr, attr_data){
+          return $http({
+            method: 'PUT',
+            url: DataService.getHost() + '/xyz/openbmc_project/PefAlertManager/EventFilterTable/Entry'+Entry+'/attr/'+attr,
+            data: JSON.stringify({'data': attr_data})
+          });
+        }
       };
       return SERVICE;
     }
diff -Naur a/app/configuration/controllers/alert-policy-controller.html b/app/configuration/controllers/alert-policy-controller.html
--- a/app/configuration/controllers/alert-policy-controller.html	1970-01-01 05:30:00.000000000 +0530
+++ b/app/configuration/controllers/alert-policy-controller.html	2021-05-22 01:19:00.127559803 +0530
@@ -0,0 +1,78 @@
+<loader loading="loading"></loader>
+<div id="configuration-alertpolicy" class="page">
+  <h1 class="page-title">Alert Policy</h1>
+  <section class="section">
+    <p class="section-content">
+      Configure the Alert Policy Settings.
+    </p>
+  </section>
+  <section class="section">
+    <div class="section-header">
+      <h2 class="section-title">Alert Policy Table</h2>
+    </div>
+
+    <form name ="alert_policy_form" class="alert-policy__form" role="form" action="">
+        <fieldset class="alert-policy__fieldset pad20 row column" ng-repeat="data in alert_policy_table | orderBy:'entry'"> 
+
+            <div class="row column"> <h2 class="subhead"> Alert Policy - {{data.tmp_num}} </h2> </div>
+            <div class="column small-12 large-4">
+              <label class="control-check ldap__control-check">
+                <input type="checkbox" ng-disabled="dataService.isNotAdmin()" ng-click="data.enable_filter = data.enable_filter == 1 ? 0 : 1" ng-checked="data.enable_filter == 1" ng-model="data.enable_filter" aria-labelledby="smtp-auth-label"/>
+                <span class="control__indicator"></span>
+                <span id="smtp-auth-label" class="control__label">
+                  <strong>Enable this alert</strong>
+                </span>
+              </label>
+            </div>
+
+            <div class="column small-12 large-8">
+              <button type="button" class="btn alertsavebtn btn-primary" ng-click="saveAlertPolicydata(data.enable_filter, data.alert_policy_number, data.alert_policy_action, data.entry); savechannelData(data.channel_number, data.channel_destination, data.entry); saveAlertStringData(data.alert_string_key, data.alert_string, data.entry)" ng-disabled="dataService.isNotAdmin()">Save</button>
+            </div>
+
+            <div class="column small-12 large-4">
+              <label class="control-check ldap__control-check">
+                <input type="checkbox" ng-disabled="dataService.isNotAdmin()" ng-click="data.alert_string = data.alert_string == 1 ? 0 : 1" ng-checked="data.alert_string == 1" ng-model="data.alert_string" aria-labelledby="smtp-auth-label"/>
+                <span class="control__indicator"></span>
+                <span id="smtp-auth-label" class="control__label">
+                  <strong>Event Specific Alert String</strong>
+                </span>
+              </label>
+            </div>
+
+            <div class="column small-12 large-4">
+                <label for="alert-policy_num">Alert Policy Number</label>
+                <select name="alert-policy_num" ng-model="data.alert_policy_number" ng-options="number for number in array15" ng-disabled="dataService.isNotAdmin()">
+                </select>
+            </div>
+
+            <div class="column small-12 large-4">
+              <label for="alert-policy_num">Alert Policy Action</label>
+              <select name="channel_number" ng-model="data.alert_policy_action" ng-options="num_ac for num_ac in alert_policy_action_arr" ng-disabled="dataService.isNotAdmin()">
+              </select>
+            </div>
+
+            <div class="column small-12 large-4">
+              <label for="alert-alert_string">Alert String Key</label>
+              <select name="alert-policy_num" ng-model="data.alert_string_key" ng-options="num_skey for num_skey in array40"  ng-disabled="dataService.isNotAdmin()">
+              </select>
+            </div>
+
+            <div class="column small-12 large-4">
+              <label for="alert-channel_dest">Channel Destination</label>
+              <select name="alert-policy_num" ng-model="data.channel_destination" ng-options="chan_des for chan_des in array15" ng-disabled="dataService.isNotAdmin()">
+              </select>
+            </div>
+
+            <div class="column small-12 large-4">
+              <label for="alert-channel_dest">Channel Number</label>
+              <select name="channel_number" ng-model="data.channel_number" ng-options="chan_num for chan_num in [1,8]" ng-disabled="dataService.isNotAdmin()">
+              </select>
+            </div>
+
+            
+
+        </fieldset>
+    </form>
+
+  </section>
+</div>
diff -Naur a/app/configuration/controllers/alert-policy-controller.js b/app/configuration/controllers/alert-policy-controller.js
--- a/app/configuration/controllers/alert-policy-controller.js	1970-01-01 05:30:00.000000000 +0530
+++ b/app/configuration/controllers/alert-policy-controller.js	2021-05-22 01:19:00.127559803 +0530
@@ -0,0 +1,190 @@
+/**
+ * Controller for SMTP
+ *
+ * @module app/configuration
+ * @exports alerpolicyController
+ * @name alertpolicyController
+ */
+
+ window.angular && (function(angular) {
+    'use strict';
+  
+    angular.module('app.configuration').controller('alertpolicyController', [
+      '$scope', '$window', 'APIUtils', '$route', '$q', 'toastService',
+      function($scope, $window, APIUtils, $route, $q, toastService) {
+          $scope.alert_policy_configs = {};
+          $scope.loading = true;
+          $scope.array15 = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15];
+          $scope.array40 = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40];
+          // $scope.alert_policy_action_arr = [0,1,2,3,4];
+
+          $scope.on_alert_policy_action_set = {
+            'Always send alert to this destination' : 0,
+            'If previous successful, skip this and continue (if configured)' : 1,
+            'If previous successful, stop alerting further' : 2,
+            'If previous successful, switch to another channel (if configured)' : 3,
+            'If previous successful, switch to another destination type (if configured)' : 4,
+          }
+
+          $scope.alert_policy_action_arr = [
+            'Always send alert to this destination',
+            'If previous successful, skip this and continue (if configured)',
+            'If previous successful, stop alerting further',
+            'If previous successful, switch to another channel (if configured)',
+            'If previous successful, switch to another destination type (if configured)'
+          ];
+
+          $scope.on_alert_policy_action_get = {
+            0:'Always send alert to this destination',
+            1:'If previous successful, skip this and continue (if configured)',
+            2:'If previous successful, stop alerting further',
+            3:'If previous successful, switch to another channel (if configured)',
+            4:'If previous successful, switch to another destination type (if configured)'
+          }
+
+          $scope.alert_policy_table = [];
+
+
+          // Always send alert to this destination = 0
+          // If previous successful, skip this and continue (if configured) - 1
+          // If previous successful, stop alerting further - 2 
+          // If previous successful, switch to another channel (if configured) - 3
+          // If previous successful, switch to another destination type (if configured) - 4
+
+          var getAlertPolicydata = APIUtils.getAlertPolicyConfigurations().then(
+              function(response){
+                var response_data = response.data;
+                var alert_policy_data = response_data.data;
+                $scope.alert_policy_table = [];
+                var tmp_num = 1;
+                
+                for(var key in alert_policy_data){
+                  if(key.match(/AlertPolicyTable\/Entry\d+(_\d+)?$/ig)){
+                    var entry = key.split('/').pop();
+                    var entry_num = entry.split('Entry').pop();
+                    var alert_policy_fill_data = {};
+                    entry_num = parseInt(entry_num);
+
+                    if(entry_num > 15 && entry_num <= 30){
+                      tmp_num = entry_num - 15;
+                    }else if(entry_num > 30 && entry_num <= 45 ){
+                      tmp_num = entry_num - 30;
+                    }else if(entry_num > 45 && entry_num <= 60 ){
+                      tmp_num = entry_num - 45;
+                    }else if(entry_num <= 15){
+                      tmp_num = entry_num;
+                    }
+
+                    alert_policy_fill_data['entry'] = entry_num;
+                    alert_policy_fill_data['tmp_num'] = tmp_num;
+                    alert_policy_fill_data['channel_number'] = get_channel_number_byte(alert_policy_data[key].ChannelDestSel);
+                    alert_policy_fill_data['channel_destination'] = get_channel_dest_byte(alert_policy_data[key].ChannelDestSel);
+                    alert_policy_fill_data['alert_string'] = get_alert_string_byte(alert_policy_data[key].AlertStingkey);
+                    alert_policy_fill_data['alert_string_key'] = get_alert_string_key_byte(alert_policy_data[key].AlertStingkey);
+                    alert_policy_fill_data['enable_filter'] = get_enable_filter_byte(alert_policy_data[key].AlertNum);
+                    alert_policy_fill_data['alert_policy_number'] = get_alert_policy_number_byte(alert_policy_data[key].AlertNum);
+                    var tmp_alert_policy_action_data = get_alert_policy_action_byte(alert_policy_data[key].AlertNum);
+                    alert_policy_fill_data['alert_policy_action'] = $scope.on_alert_policy_action_get[tmp_alert_policy_action_data];
+
+                    $scope.alert_policy_table.push(alert_policy_fill_data);
+                  }
+                }
+                console.log('get alert policy', $scope.alert_policy_table);
+              },
+              function(error){
+                console.log('error', error);
+              }
+          );
+
+          function get_channel_number_byte(val){
+            return (val >> 4) & 0x0f;
+          }
+          function get_channel_dest_byte(val){
+            return val & 0x0f;
+          }
+          function get_alert_string_byte(val){
+            return ((val >> 7) & 0x01);
+          }
+          function get_alert_string_key_byte(val){
+            return (val & 0x7f);
+          }
+          function get_enable_filter_byte(val){
+            return (((val & 0x0f) >> 3) & 0x01);
+          }
+          function get_alert_policy_number_byte(val){
+            return ((val >> 4) & 0x0f);
+          }
+          function get_alert_policy_action_byte(val){
+            return (val & 0x03);
+          }
+
+          getAlertPolicydata.finally(function() {
+            $scope.loading = false;
+          });
+
+          $scope.saveAlertPolicydata = function(enable_filter, alert_policy_number, alert_policy_action, entry){
+            console.log("saveAlertPolicydata",enable_filter, alert_policy_number, alert_policy_action, entry);
+            var tmp_alert_policy_action = $scope.on_alert_policy_action_set[alert_policy_action];
+            var AlertNum = ((alert_policy_number << 4) & 0xf0) | ((enable_filter & 0x01 ) << 3) | (tmp_alert_policy_action & 0x0f);
+            if(AlertNum){
+              setAlertNumber(AlertNum, entry);
+            }
+          };
+
+          $scope.savechannelData = function(channel_number, channel_destination, entry){
+            console.log("savechannelData",channel_number, channel_destination, entry);
+            var d = channel_destination & 0x0f;
+            var a = channel_number;
+            var c = (a << 4) & 0xf0;
+            var ChannelDestSel  = c | d;
+            if(ChannelDestSel){
+              setChannelDestinationSelector(ChannelDestSel, entry);
+            }
+          };
+
+          $scope.saveAlertStringData = function(alert_string_key, alert_string, entry){
+            console.log("saveAlertStringData",alert_string_key, alert_string, entry);
+            var AlertStingkey = ((alert_string << 7) & 0x80) |  (alert_string_key  & 0x7f );
+            if(AlertStingkey){
+              setAlertStringKey(AlertStingkey, entry);
+            }
+          };
+
+          function setAlertNumber(AlertNum, entry){
+              $scope.loading = true;
+              APIUtils.setAlertNumber(AlertNum, entry).then(
+                function(response){
+                  toastService.success('Alert Policy saved successfully.');
+                  $scope.loading = false;
+                },
+                function(error){
+                  console.log(JSON.stringify(error));
+                  $scope.loading = false;
+              });
+          }
+
+          function setAlertStringKey(AlertStingkey, entry){
+            $scope.loading = true;
+            APIUtils.setAlertStringKey(AlertStingkey, entry).then(
+              function(response){
+                $scope.loading = false;
+              },
+              function(error){
+                console.log(JSON.stringify(error));
+                $scope.loading = false;
+            });
+          }
+
+          function setChannelDestinationSelector(ChannelDestSel, entry){
+            $scope.loading = true;
+            APIUtils.setChannelDestinationSelector(ChannelDestSel, entry).then(
+              function(response){},
+              function(error){
+                console.log(JSON.stringify(error));
+                $scope.loading = false;
+            });
+          }
+      }
+    ]);
+  })(angular);
+  
\ No newline at end of file
diff -Naur a/app/configuration/controllers/event-filter-controller.html b/app/configuration/controllers/event-filter-controller.html
--- a/app/configuration/controllers/event-filter-controller.html	1970-01-01 05:30:00.000000000 +0530
+++ b/app/configuration/controllers/event-filter-controller.html	2021-05-22 01:19:00.127559803 +0530
@@ -0,0 +1,149 @@
+<loader loading="loading"></loader>
+<div id="configuration-alertpolicy" class="page">
+  <h1 class="page-title">Event Filter</h1>
+  <section class="section">
+    <p class="section-content">
+      Configure the Event Filter Settings.
+    </p>
+  </section>
+  <section class="section">
+    <div class="section-header">
+      <h2 class="section-title">Event FilterTable</h2>
+    </div>
+
+    <form name ="alert_policy_form" class="alert-policy__form" role="form" action="">
+        <fieldset class="alert-policy__fieldset pad20 row column" ng-repeat="data in event_filter_table | orderBy:'custom_entry'"> 
+            <div class="row column"> <h2 class="subhead"> Event Filter - {{data.custom_entry}}</h2> </div>
+
+            <div class="column small-12 large-3">
+              <label class="control-check ldap__control-check">
+                <input type="checkbox" ng-disabled="dataService.isNotAdmin()" ng-click="data.FilterConfig = data.FilterConfig == 1 ? 0 : 1" ng-checked="data.FilterConfig == 1" ng-model="data.FilterConfig" aria-labelledby="event-enable-label"/>
+                <span class="control__indicator"></span>
+                <span id="event-enable-label" class="control__label">
+                  <strong>Enable this Filter</strong>
+                </span>
+              </label>
+            </div>
+
+            <div class="column small-12 large-3">
+                <label class="control-check ldap__control-check">
+                  <input type="checkbox" ng-disabled="dataService.isNotAdmin()" ng-click="data.EvtFilterAction = data.EvtFilterAction == 1 ? 0 : 1"  ng-checked="data.EvtFilterAction == 1" ng-model="data.EvtFilterAction" aria-labelledby="event-filter-action-label"/>
+                  <span class="control__indicator"></span>
+                  <span id="event-filter-action-label" class="control__label">
+                    <strong>Event Filter Action</strong>
+                  </span>
+                </label>
+            </div>
+
+            <div class="column small-12 large-3">
+                <label for="power-action-label">Power Action</label>
+                <select name="power-action-label" ng-model="data.custom_EvtFilterPowerAction" ng-options="number for number in ['None','Power Down', 'Power Cycle', 'Reset']" ng-disabled="dataService.isNotAdmin()">
+                </select>
+            </div>
+
+            <div class="column small-12 large-3">
+                <label for="alert-policy_num">Event Severity</label>
+                <select name="alert-policy_num" ng-model="data.custom_EventSeverity" ng-options="number for number in ['Any severity', 'New monitor state', 'New information', 'Normal state', 'Non-Critical state', 'Critical state', 'Non-Recoverable state']" ng-disabled="dataService.isNotAdmin()">
+                </select>
+            </div>
+
+            <div class="column small-12 large-3">
+              <label for="alert-policy_num">Alert Policy Group Number</label>
+              <select name="channel_number" ng-model="data.AlertPolicyNum" ng-options="num_ac for num_ac in [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]" ng-disabled="dataService.isNotAdmin()">
+                <option class="courier-bold" value="" >--Select--</option>
+              </select>
+            </div>
+
+            <div class="column small-12 large-3">
+                <label for="genid1-label">Generator ID 1</label>
+                <input id="genid1-label" name="genid1-label" type="number" min="0" max="255" ng-disabled="dataService.isNotAdmin()" ng-model="data.GenIDByte1"/>
+            </div>
+
+            <div class="column small-12 large-3">
+                <label for="genid2-label">Generator ID 2</label>
+                <input id="genid2-label" name="genid2-label" type="number" min="0" max="255" ng-disabled="dataService.isNotAdmin()" ng-model="data.GenIDByte2"/>
+            </div>
+
+            <div class="column small-12 large-3">
+                <label for="event-trigger-label">Event Trigger</label>
+                <input id="event-trigger-label" name="event-trigger-label" type="number" min="0" max="255" ng-disabled="dataService.isNotAdmin()" ng-model="data.EventTrigger"/>
+            </div>
+
+            <div class="column small-12 large-3">
+              <label for="alert-channel_dest">Sensor Type</label>
+              <select name="channel_number" ng-model="data.custom_sensor_type_name" ng-change="change_sensor_type(data.custom_sensor_type_name, data.custom_index_for_update)" ng-options="sen_type for sen_type in data.custom_sensor_type_array" ng-disabled="dataService.isNotAdmin()">
+              </select>
+            </div>
+
+            <div class="column small-12 large-3">
+              <label for="alert-channel_dest">Sensor Name</label>
+              <select name="channel_number" ng-model="data.custom_sensor_name" ng-change="add_selected_sensor(data.custom_sensor_name, data.custom_index_for_update)" ng-options="sens_name for sens_name in data.custom_sensor_name_array" ng-disabled="dataService.isNotAdmin()">
+                <option class="courier-bold" value="255" >All Sensor</option>
+              </select>
+            </div>
+
+            <div class="column small-12 large-3">
+              <label for="alert-channel_dest">Event Options</label>
+              <select name="channel_number" ng-model="ev_op" ng-options="ev_op for ev_op in ['All Events']" ng-disabled="dataService.isNotAdmin()">
+              </select>
+            </div>
+
+            <div class="column small-12 large-3">
+                <label for="event-data1andmask-label">Event Data 1 AND Mask</label>
+                <input id="event-data1andmask-label" name="event-data1andmask-label" type="number" min="0" max="65535" ng-disabled="dataService.isNotAdmin()" ng-model="data.EventData1ANDMask"/>
+            </div>
+
+            <div class="column small-12 large-3">
+                <label for="event-data1andc1-label">Event Data 1 Compare 1</label>
+                <input id="event-data1andc1-label" name="event-data1andc1-label" type="number" min="0" max="65535" ng-disabled="dataService.isNotAdmin()" ng-model="data.EventData1Cmp1"/>
+            </div>
+
+            <div class="column small-12 large-3">
+                <label for="event-data1andc2-label">Event Data 1 Compare 2</label>
+                <input id="event-data1andc2-label" name="event-data1andc2-label" type="number" min="0" max="65535" ng-disabled="dataService.isNotAdmin()" ng-model="data.EventData1Cmp2"/>
+            </div>
+
+            <!-- <div class="column small-12 large-3">
+                <label for="event-data1andoffsetmask-label">Event Data 1 and Offset Mask</label>
+                <input id="event-data1andoffsetmask-label" name="event-data1andoffsetmask-label" type="number" min="1" max="65535" ng-disabled="dataService.isNotAdmin()" ng-model="data.EventData1OffsetMask"/>
+            </div> -->
+
+            <div class="column small-12 large-3">
+                <label for="event-data2andmask-label">Event Data 2 AND Mask</label>
+                <input id="event-data2andmask-label" name="event-data2andmask-label" type="number" min="0" max="65535" ng-disabled="dataService.isNotAdmin()" ng-model="data.EventData2ANDMask"/>
+            </div>
+
+            <div class="column small-12 large-3">
+                <label for="event-data2andc1-label">Event Data 2 Compare 1</label>
+                <input id="event-data2andc1-label" name="event-data2andc1-label" type="number" min="0" max="65535" ng-disabled="dataService.isNotAdmin()" ng-model="data.EventData2Cmp1"/>
+            </div>
+
+            <div class="column small-12 large-3">
+                <label for="event-data2andc2-label">Event Data 2 Compare 2</label>
+                <input id="event-data2andc2-label" name="event-data2andc2-label" type="number" min="0" max="65535" ng-disabled="dataService.isNotAdmin()" ng-model="data.EventData2Cmp2"/>
+            </div>
+
+            <div class="column small-12 large-3">
+                <label for="event-data3andmask-label">Event Data 3 AND Mask</label>
+                <input id="event-data3andmask-label" name="event-data3andmask-label" type="number" min="0" max="65535" ng-disabled="dataService.isNotAdmin()" ng-model="data.EventData3ANDMask"/>
+            </div>
+
+            <div class="column small-12 large-3">
+                <label for="event-data3andc1-label">Event Data 3 Compare 1</label>
+                <input id="event-data3andc1-label" name="event-data3andc1-label" type="number" min="0" max="65535" ng-disabled="dataService.isNotAdmin()" ng-model="data.EventData3Cmp1"/>
+            </div>
+
+            <div class="column small-12 large-3">
+                <label for="event-data3andc2-label">Event Data 2 Compare 2</label>
+                <input id="event-data3andc2-label" name="event-data3andc2-label" type="number" min="0" max="65535" ng-disabled="dataService.isNotAdmin()" ng-model="data.EventData3Cmp2"/>
+            </div>
+
+            <div class="column small-12 large-offset-9 large-3">
+                <button type="button" class="btn eventfiltersavebtn btn-primary" ng-click="saveEventFilterData(data);" ng-disabled="dataService.isNotAdmin()">Save</button>
+            </div>
+
+        </fieldset>
+    </form>
+
+  </section>
+</div>
diff -Naur a/app/configuration/controllers/event-filter-controller.js b/app/configuration/controllers/event-filter-controller.js
--- a/app/configuration/controllers/event-filter-controller.js	1970-01-01 05:30:00.000000000 +0530
+++ b/app/configuration/controllers/event-filter-controller.js	2021-05-22 01:19:00.127559803 +0530
@@ -0,0 +1,250 @@
+/**
+ * Controller for SMTP
+ *
+ * @module app/configuration
+ * @exports eventfilterController
+ * @name eventfilterController
+ */
+
+ window.angular && (function(angular) {
+    'use strict';
+  
+    angular.module('app.configuration').controller('eventfilterController', [
+      '$scope', '$window', 'APIUtils', '$route', '$q', 'toastService',
+      function($scope, $window, APIUtils, $route, $q, toastService) {
+          $scope.alert_policy_configs = {};
+          $scope.loading = true;
+          $scope.severity = {
+            0 : 'Any severity',
+            1: 'New monitor state',
+            2 : 'New information',
+            4: 'Normal state',
+            8: 'Non-Critical state',
+            16:  'Critical state',
+            32:  'Non-Recoverable state'
+          };
+          $scope.severity_send = {
+            'Any severity': 0,
+            'New monitor state': 1,
+            'New information': 2,
+            'Normal state': 4,
+            'Non-Critical state': 8,
+            'Critical state': 16,
+            'Non-Recoverable state': 32,
+          };
+          $scope.power_Action_data = {
+            0:'None',
+            2:'Power Down',
+            8:'Power Cycle',
+            4:'Reset'
+          };
+          $scope.power_Action_data_send = {
+            'None': 0,
+            'Power Down': 2,
+            'Power Cycle': 8,
+            'Reset' : 4
+          };
+          $scope.array15 = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15];
+          $scope.ev_op = 'All Events';
+
+          var sensor_numbers = APIUtils.getSensorNumbers(function(response){
+            $scope.sensor_name_with_ID = response;
+          });
+
+          var get_Sensor_data = APIUtils.getAllSensorStatus(function(data, originalData) {
+                $scope.sensor_type_arr = ['All Sensors'];
+                $scope.sensor_name_arr = ["All Sensors"];
+                $scope.all_sensor_name_arr = [];
+                $scope.sensor_data_arr = [];
+                for(var i in data){
+                    var s_obj = {};
+                    var sensor_type_name = data[i].path.split('/')[4];
+                    s_obj['sensor_type_name'] = sensor_type_name;
+                    s_obj['sensor_type'] = data[i].SensorType;
+                    s_obj['sensor_name'] = data[i].title;
+                    if($scope.sensor_type_arr.indexOf(sensor_type_name) == -1){
+                        $scope.sensor_type_arr.push(sensor_type_name);
+                    }
+                    $scope.sensor_name_arr.push(data[i].title);
+                    $scope.sensor_data_arr.push(s_obj);
+                }
+                $scope.all_sensor_name_arr = JSON.parse(JSON.stringify($scope.sensor_name_arr));
+                getEventFilterdata();
+          });
+
+          $scope.change_sensor_type = function(sen_type, index){
+            console.log('sen_type',sen_type);
+              var selected_sensor_type = '';
+              // Empty the sensor array
+              $scope.event_filter_table[index].custom_sensor_name_array = [];
+
+              if(sen_type == 'All Sensors'){
+                $scope.event_filter_table[index].custom_sensor_name_array = $scope.all_sensor_name_arr;
+                $scope.event_filter_table[index].SensorType = 255;
+                return;
+              }
+
+              // update the sensors array with selected sensor type
+              for(var i in $scope.sensor_data_arr){
+                  if($scope.sensor_data_arr[i].sensor_type_name == sen_type){
+                    selected_sensor_type = $scope.sensor_data_arr[i].sensor_type;
+                    $scope.event_filter_table[index].custom_sensor_name_array.push($scope.sensor_data_arr[i].sensor_name);
+                  }
+              }
+              console.log($scope.event_filter_table[index].custom_sensor_name_array);
+              console.log($scope.event_filter_table[index]);
+              $scope.event_filter_table[index].SensorType = selected_sensor_type;
+          }
+
+          $scope.add_selected_sensor = function(sensor_name, index){
+            console.log('sensor_name', sensor_name, index);
+            if(sensor_name == 'All Sensors'){
+              $scope.event_filter_table[index].SensorNum = 255;
+              return;
+            }
+            for(var i in $scope.sensor_name_with_ID){
+              if($scope.sensor_name_with_ID[i].sensor_name == sensor_name){
+                console.log($scope.sensor_name_with_ID[i]);
+                $scope.event_filter_table[index].SensorNum = $scope.sensor_name_with_ID[i].sensor_ID;
+              }
+            }
+          }
+
+
+          $scope.saveEventFilterData = function(data){
+            $scope.loading = true;
+            var promises = [];
+            console.log('data', data);
+            var entry_num = data.custom_entry;
+            for(var i in data){
+              if(i.indexOf('custom_') == -1 && i.indexOf('$$') == -1){
+                // console.log(entry_num, i, data[i]);
+
+                if(i == 'EventSeverity'){
+                  var att = $scope.severity_send[data.custom_EventSeverity];
+                  promises.push(CallsaveEventFilterDataAPI(entry_num, i, att));
+                  continue;
+                }
+                if(i == 'EvtFilterAction'){
+                  var att = $scope.power_Action_data_send[data.custom_EvtFilterPowerAction];
+                  var data_to_send = data.EvtFilterAction | att;
+                  promises.push(CallsaveEventFilterDataAPI(entry_num, i, data_to_send));
+                  continue;
+                }
+                if(i == 'FilterConfig'){
+                  var att = (data.FilterConfig << 7);
+                  promises.push(CallsaveEventFilterDataAPI(entry_num, i, att));
+                  continue;
+                }
+                promises.push(CallsaveEventFilterDataAPI(entry_num, i, data[i]));
+              }
+            }
+
+            if (promises.length) {
+              $q.all(promises).then(function(){
+                toastService.success('Event Filter settings saved');
+                $scope.loading = false;
+                $route.reload();
+              }, function(){
+                $scope.loading = false;
+                toastService.error('Event Filter Settings could not be saved');
+              });
+            }
+            // console.log('save data', data);
+          }
+
+          function CallsaveEventFilterDataAPI(Entry, attr, attr_data){
+            console.log("calling", Entry, attr, attr_data);
+            return APIUtils.SaveEventFilterData(Entry, attr, attr_data).then(function(){},
+            function(error){
+              console.log(JSON.stringify(error));
+              return $q.reject();
+            })
+          }
+
+          function get_sensor_name(SensorNum){
+            if(SensorNum == 255){ return 'All Sensors'; }
+
+            for(var i in $scope.sensor_name_with_ID){
+              if($scope.sensor_name_with_ID[i].sensor_ID == SensorNum){
+                return $scope.sensor_name_with_ID[i].sensor_name;
+              }
+            }
+          }
+
+          function get_sensor_type_name(SensorType){
+            // console.log('sensor_name_with_ID', $scope.sensor_data_arr);
+            if(SensorType == 255){ return 'All Sensors'; }
+
+            for(var i in $scope.sensor_data_arr){
+              if($scope.sensor_data_arr[i].sensor_type == SensorType){
+                return $scope.sensor_data_arr[i].sensor_type_name;
+              }
+            }
+          }
+
+          function get_event_filter_action(data){
+            return data & 0x01;
+            // var poweraction = filteraction & 0x0E
+          }
+
+          function get_event_filter_power_action(data){
+            var poweraction = data & 0x0E;
+            return $scope.power_Action_data[poweraction];
+          }
+
+          function getFilterConfigdata(data){
+            console.log('getFilterConfigdata', data);
+            var tmp = (data >> 7);
+            tmp = tmp & 0x01;
+            console.log('tmp', tmp);
+            return tmp;
+          }
+
+          function get_event_Severity_data(data){
+            return $scope.severity[data];
+          }
+
+          function getEventFilterdata() {
+            $scope.loading = true;
+            APIUtils.getEventFilterConfigurations().then(
+              function(response){
+                $scope.loading = false;
+                var response_data = response.data;
+                var event_filter_data = response_data.data;
+                $scope.event_filter_table = [];
+                // console.log('$scope.sensor_type_arr', $scope.sensor_type_arr);
+                // console.log('$scope.sensor_name_arr', $scope.sensor_name_arr);
+                var i = 0;
+                for(var key in event_filter_data){
+                    if(key.match(/EventFilterTable\/Entry\d+(_\d+)?$/ig)){
+                        var entry = key.split('/').pop();
+                        var entry_num = entry.split('Entry').pop();
+                        event_filter_data[key]['custom_entry'] = parseInt(entry_num);
+                        event_filter_data[key]['custom_index_for_update'] = i;
+                        event_filter_data[key]['custom_sensor_name'] = get_sensor_name(event_filter_data[key].SensorNum);
+                        event_filter_data[key]['custom_sensor_type_name'] = get_sensor_type_name(event_filter_data[key].SensorType);
+                        event_filter_data[key]['custom_sensor_type_array'] = $scope.sensor_type_arr;
+                        event_filter_data[key]['custom_sensor_name_array'] = $scope.sensor_name_arr;
+                        event_filter_data[key]['custom_EvtFilterPowerAction'] = get_event_filter_power_action(event_filter_data[key].EvtFilterAction);
+                        event_filter_data[key]['custom_EventSeverity'] = get_event_Severity_data(event_filter_data[key].EventSeverity);
+                        event_filter_data[key].EvtFilterAction = get_event_filter_action(event_filter_data[key].EvtFilterAction);
+                        event_filter_data[key].FilterConfig = getFilterConfigdata(event_filter_data[key].FilterConfig);
+                        event_filter_data[key].EventData1OffsetMask = 65535;
+
+                        $scope.event_filter_table.push(event_filter_data[key]);
+                    }
+                  i++;
+                }
+                console.log('get event filter', $scope.event_filter_table);
+              },
+              function(error){
+                $scope.loading = false;
+                console.log('error', error);
+              }
+            );
+          };
+      }
+    ]);
+  })(angular);
+  
\ No newline at end of file
diff -Naur a/app/configuration/controllers/smtp-controller.html b/app/configuration/controllers/smtp-controller.html
--- a/app/configuration/controllers/smtp-controller.html	1970-01-01 05:30:00.000000000 +0530
+++ b/app/configuration/controllers/smtp-controller.html	2021-05-22 01:19:00.127559803 +0530
@@ -0,0 +1,78 @@
+<loader loading="loading"></loader>
+<div class="ldap" id="configuration-smtp">
+  <div class="row column">
+    <h1>SMTP</h1>
+  </div>
+  <div class="row column">
+    <p>Configure SMTP Settings</p>
+  </div>
+  <div class="row column">
+    <h2 class="subhead">
+      Settings
+    </h2>
+  </div>
+  <div class="row column">
+    <label class="control-check ldap__control-check">
+      <input type="checkbox" ng-disabled="dataService.isNotAdmin()" aria-labelledby="smtp-auth-label"
+      ng-change="smtp__configuration.$setUntouched()"
+      ng-click = "func_smtp_enable()"
+      ng-model="smtp_configs.smtp_enable" />
+      <span class="control__indicator"></span>
+      <span id="smtp-auth-label" class="control__label">
+        <strong>Enable SMTP settings</strong>
+      </span>
+    </label>
+  </div>
+  <div class="row column">
+    <form id="smtp__configuration" name="smtp__configuration" ng-class="{'submitted': submitted}"
+      class="smtp__configuration">
+      <fieldset>
+        <div class="ldap__configure-settings row column">
+          <div class="large-9 columns ldap__server-info">
+            <div class="medium-6 large-6 columns">
+              <label for="smtp_server">Server Address</label>
+              <input id="smtp_server" name="smtp_server" type="text"
+                ng-model="smtp_configs.server_address"
+                ng-disabled="!smtp_configs.smtp_enable || dataService.isNotAdmin()"
+                ng-pattern="/^\s*((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))\s*$/"
+                required />
+              <div ng-messages="smtp__configuration.smtp_server.$error" class="form-error"
+                ng-class="{'visible' : smtp__configuration.smtp_server.$touched || submitted}" role="alert">
+                <p ng-message="required">Field is required</p>
+                <p ng-message="pattern">Invalid Server Address</p>
+              </div>
+            </div>
+            <div class="medium-6 large-6 columns">
+              <label for="smtp_port">PORT</label>
+              <input id="smtp_port" name="smtp_port" type="number" min="1" max="65535" ng-disabled="!smtp_configs.smtp_enable || dataService.isNotAdmin()" ng-model="smtp_configs.port" required />
+              <div ng-messages="smtp__configuration.smtp_port.$error" class="form-error"
+                ng-class="{'visible' : smtp__configuration.smtp_port.$touched || submitted}" role="alert">
+                <p ng-message="required">Field is required</p>
+              </div>
+            </div>
+            <div class="medium-6 large-6 columns">
+              <label for="smtp_sender_email">Sender Email Address</label>
+              <input id="smtp_sender_email" ng-disabled="!smtp_configs.smtp_enable || dataService.isNotAdmin()" type="email" name="smtp_sender_email" autocomplete="off" ng-model="smtp_configs.sender_email" required />
+              <div ng-messages="smtp__configuration.smtp_sender_email.$error" class="form-error"
+                ng-class="{'visible' : smtp__configuration.smtp_sender_email.$touched || submitted}" role="alert">
+                <p ng-message="required">Field is required</p>
+              </div>
+            </div>
+            <div class="medium-6 large-6 columns">
+              <label for="smtp_reciver_email">Reciver Email Address</label>
+              <input id="smtp_reciver_email" ng-disabled="!smtp_configs.smtp_enable || dataService.isNotAdmin()" name="smtp_reciver_email" type="email" ng-model="smtp_configs.reciver_email" required />
+              <div ng-messages="smtp__configuration.smtp_reciver_email.$error" class="form-error"
+                ng-class="{'visible' : smtp__configuration.smtp_reciver_email.$touched || submitted}" role="alert">
+                <p ng-message="required">Field is required</p>
+              </div>
+            </div>
+            <div class="column smtp__configuration-buttons">
+              <button type="submit" class="btn btn-primary" ng-disabled="!smtp__configuration.$valid || dataService.isNotAdmin()"
+                ng-click="$parent.submitted=true; smtp__configuration.$valid && saveSMTPSettings(); smtp__configuration.$setUntouched()">Save</button>
+                <button type="button" class="btn btn-secondary" ng-disabled="dataService.isNotAdmin()"
+                ng-click="reset(); smtp__configuration.$setUntouched()">Reset</button>
+            </div>
+      </fieldset>
+    </form>
+  </div>
+</div>
diff -Naur a/app/configuration/controllers/smtp-controller.js b/app/configuration/controllers/smtp-controller.js
--- a/app/configuration/controllers/smtp-controller.js	1970-01-01 05:30:00.000000000 +0530
+++ b/app/configuration/controllers/smtp-controller.js	2021-05-22 01:19:00.127559803 +0530
@@ -0,0 +1,79 @@
+/**
+ * Controller for SMTP
+ *
+ * @module app/configuration
+ * @exports smtpController
+ * @name smtpController
+ */
+
+ window.angular && (function(angular) {
+    'use strict';
+  
+    angular.module('app.configuration').controller('smtpController', [
+      '$scope', 'APIUtils', '$route', 'toastService', 'dataService',
+      function($scope, APIUtils, $route, toastService, dataService) {
+          $scope.smtp_configs = {};
+          $scope.loading = true;
+
+          var getSMTPdata = APIUtils.getSMTPConfigurations().then(
+              function(response){
+                console.log('get SMTP', response.data);
+                var SMTPdata = response.data;
+                if(SMTPdata.data[0]){
+                    $scope.smtp_configs.smtp_enable = true;
+                }else{
+                    $scope.smtp_configs.smtp_enable = false;
+                }
+                $scope.smtp_configs.server_address = SMTPdata.data[1];
+                $scope.smtp_configs.port = SMTPdata.data[2];
+                $scope.smtp_configs.sender_email = SMTPdata.data[3];
+                $scope.smtp_configs.reciver_email = SMTPdata.data[4];
+
+                console.log("smtp config", $scope.smtp_configs);
+              },
+              function(error){
+                console.log('error', error);
+              }
+          );
+          getSMTPdata.finally(function() {
+            $scope.loading = false;
+          });
+
+          $scope.reset = function(){
+            $route.reload();
+          }
+
+          $scope.func_smtp_enable = function(){
+              $scope.smtp_configs.smtp_enable = !$scope.smtp_configs.smtp_enable;
+          }
+
+          $scope.saveSMTPSettings = function(){
+              console.log("save smtp data", $scope.smtp_configs);
+              $scope.loading = true;
+
+              var data = [];
+              data.push($scope.smtp_configs.smtp_enable);
+              data.push($scope.smtp_configs.server_address);
+              data.push($scope.smtp_configs.port);
+              data.push($scope.smtp_configs.sender_email);
+              data.push($scope.smtp_configs.reciver_email);
+
+              console.log('data to send', data);
+
+              APIUtils.setSMTPConfigurations(data).then(
+                  function(response){
+                    toastService.success('SMTP settings have been saved.');
+                    $scope.loading = false;
+                    $scope.reset();
+                  },
+                  function(error){
+                    $scope.loading = false;
+                    toastService.error('Error in setting SMTP configurations.');
+                    console.log('error', error);
+                  }
+              )
+          }
+      }
+    ]);
+  })(angular);
+  
\ No newline at end of file
diff -Naur a/app/configuration/index.js b/app/configuration/index.js
--- a/app/configuration/index.js	2021-05-22 01:23:03.539128787 +0530
+++ b/app/configuration/index.js	2021-05-22 01:27:20.122721069 +0530
@@ -39,6 +39,21 @@
                 'template': require('./controllers/firmware-controller.html'),
                 'controller': 'firmwareController',
                 authenticated: true
+              })
+              .when('/configuration/smtp', {
+                'template': require('./controllers/smtp-controller.html'),
+                'controller': 'smtpController',
+                authenticated: true
+              })
+              .when('/PEF/alertpolicy', {
+                'template': require('./controllers/alert-policy-controller.html'),
+                'controller': 'alertpolicyController',
+                authenticated: true
+              })
+              .when('/PEF/eventfilter', {
+                'template': require('./controllers/event-filter-controller.html'),
+                'controller': 'eventfilterController',
+                authenticated: true
               });
         }
       ]);
diff -Naur a/app/configuration/styles/alert-policy.scss b/app/configuration/styles/alert-policy.scss
--- a/app/configuration/styles/alert-policy.scss	1970-01-01 05:30:00.000000000 +0530
+++ b/app/configuration/styles/alert-policy.scss	2021-05-22 01:19:00.127559803 +0530
@@ -0,0 +1,10 @@
+#configuration-alertpolicy{
+    .alertsavebtn{
+      margin-bottom: 20px;
+      float: right;
+    }
+  
+    .pad20{
+      padding: 20px;
+    }
+}
\ No newline at end of file
diff -Naur a/app/configuration/styles/index.scss b/app/configuration/styles/index.scss
--- a/app/configuration/styles/index.scss	2021-05-22 01:23:03.539128787 +0530
+++ b/app/configuration/styles/index.scss	2021-05-22 01:27:09.910736646 +0530
@@ -3,4 +3,5 @@
 @import "./date-time.scss";
 @import "./firmware.scss";
 @import "./card.scss";
+@import "./alert-policy.scss";
 
diff -Naur a/app/index.js b/app/index.js
--- a/app/index.js	2021-05-22 01:23:03.535128793 +0530
+++ b/app/index.js	2021-05-22 01:27:39.354691857 +0530
@@ -110,6 +110,9 @@
 import date_time_controller from './configuration/controllers/date-time-controller.js';
 import network_controller from './configuration/controllers/network-controller.js';
 import snmp_controller from './configuration/controllers/snmp-controller.js';
+import smtp_controller from './configuration/controllers/smtp-controller.js';
+import alertpolicy_controller from './configuration/controllers/alert-policy-controller.js';
+import eventfilter_controller from './configuration/controllers/event-filter-controller.js';
 import firmware_controller from './configuration/controllers/firmware-controller.js';
 import card from './configuration/components/card.js';
 
