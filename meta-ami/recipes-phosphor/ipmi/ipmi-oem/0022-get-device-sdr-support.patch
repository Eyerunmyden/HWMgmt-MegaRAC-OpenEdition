diff -Naur a/src/sensorcommands.cpp b/src/sensorcommands.cpp
--- a/src/sensorcommands.cpp	2020-11-10 15:15:15.327930925 +0530
+++ b/src/sensorcommands.cpp	2020-11-16 13:38:45.733954207 +0530
@@ -1176,6 +1176,57 @@
     return ipmi::responseSuccess(sensorEventStatus, assertions, deassertions);
 }
 
+/** @brief implements the get SDR Info command
+ *  @param count - Operation
+ *
+ *  @returns IPMI completion code plus response data
+ *   - sdrCount - sensor/SDR count
+ *   - lunsAndDynamicPopulation - static/Dynamic sensor population flag
+ */
+static ipmi::RspType<uint8_t, // respcount
+                     uint8_t, // static/dynamic population flags
+                     uint32_t // last time a sensor was added
+                     >
+    ipmiSensorGetDeviceSdrInfo(ipmi::Context::ptr ctx,
+                               std::optional<uint8_t> count)
+{
+    uint8_t sdrCount;
+    constexpr uint8_t lunsAndDynamicPopulation = 1;
+    constexpr uint8_t getSdrCount = 0x01;
+    constexpr uint8_t getSensorCount = 0x00;
+    sdrLastAdd = 0;
+    
+    if (sensorTree.empty() && !getSensorSubtree(sensorTree))
+	{
+        return ipmi::responseResponseError();
+    }
+
+    size_t fruCount = 0;
+    ipmi::Cc ret = ipmi::storage::getFruSdrCount(ctx, fruCount);
+    if (ret != ipmi::ccSuccess)
+    {
+        return ipmi::response(ret);
+    }
+
+    if (count.value_or(0) == getSdrCount)
+    {
+        // Get SDR count. This returns the total number of SDRs in the device.
+        sdrCount = (sensorTree.size() - 1) + fruCount + ipmi::storage::type12Count;
+    }
+    else if (count.value_or(0) == getSensorCount)
+    {
+        // Get Sensor count. This returns the number of sensors
+        sdrCount = (sensorTree.size() - 1);
+    }
+    else
+    {
+        return ipmi::responseInvalidFieldRequest();
+    }
+
+    return ipmi::responseSuccess(sdrCount, lunsAndDynamicPopulation,
+                                 sdrLastAdd);
+}
+
 /* end sensor commands */
 
 /* storage commands */
@@ -1203,7 +1254,7 @@
     }
 
     uint16_t recordCount =
-        sensorTree.size() + fruCount + ipmi::storage::type12Count;
+        (sensorTree.size() - 1) + fruCount + ipmi::storage::type12Count;
 
     uint8_t operationSupport = static_cast<uint8_t>(
         SdrRepositoryInfoOps::overflow); // write not supported
@@ -1913,6 +1964,11 @@
     // register all storage commands for both Sensor and Storage command
     // versions
 
+    // <Get Device SDR Info>
+    ipmi::registerHandler(ipmi::prioOpenBmcBase, ipmi::netFnSensor,
+                          ipmi::sensor_event::cmdGetDeviceSdrInfo,
+                          ipmi::Privilege::User, ipmiSensorGetDeviceSdrInfo);
+
     // <Get SDR Repository Info>
     ipmi::registerHandler(ipmi::prioOemBase, ipmi::netFnStorage,
                           ipmi::storage::cmdGetSdrRepositoryInfo,
