diff -Naur a/src/oemcommands.cpp b/src/oemcommands.cpp
--- a/src/oemcommands.cpp	2021-06-14 15:41:24.706435143 +0530
+++ b/src/oemcommands.cpp	2021-06-14 16:39:32.783298083 +0530
@@ -3828,7 +3828,7 @@
     std::string rec = std::get<4>(smtpcfg);
 
     
-    std::vector<uint8_t> resData;
+    std::vector<uint8_t> resData = {};
     switch (smtpSetting(parameter))
     {
 	 case smtpSetting::enable:
@@ -3846,16 +3846,19 @@
 	 case smtpSetting::ipAdd:
          {
 		std::vector<std::string> result;
-		boost::split(result, host, boost::is_any_of("."),boost::token_compress_on);
-		uint8_t ipByte1 = static_cast<uint8_t>(std::stoi(result[0].c_str()));
-		uint8_t ipByte2 = static_cast<uint8_t>(std::stoi(result[1].c_str()));
-		uint8_t ipByte3 = static_cast<uint8_t>(std::stoi(result[2].c_str()));
-		uint8_t ipByte4 = static_cast<uint8_t>(std::stoi(result[3].c_str()));
-		resData.push_back(ipByte1);
-		resData.push_back(ipByte2);
-		resData.push_back(ipByte3);
-		resData.push_back(ipByte4);
-                break;
+		if(!host.empty())
+		{
+			boost::split(result, host, boost::is_any_of("."),boost::token_compress_on);
+			uint8_t ipByte1 = static_cast<uint8_t>(std::stoi(result[0].c_str()));
+			uint8_t ipByte2 = static_cast<uint8_t>(std::stoi(result[1].c_str()));
+			uint8_t ipByte3 = static_cast<uint8_t>(std::stoi(result[2].c_str()));
+			uint8_t ipByte4 = static_cast<uint8_t>(std::stoi(result[3].c_str()));
+			resData.push_back(ipByte1);
+			resData.push_back(ipByte2);
+			resData.push_back(ipByte3);
+			resData.push_back(ipByte4);
+		}
+		break;	
          }
 	 case smtpSetting::port:
          {
diff -Naur a/src/sensorcommands.cpp b/src/sensorcommands.cpp
--- a/src/sensorcommands.cpp	2021-06-14 15:41:02.238568820 +0530
+++ b/src/sensorcommands.cpp	2021-06-14 15:46:04.252763717 +0530
@@ -2154,6 +2154,11 @@
                 return ipmi::responseInvalidFieldRequest();
         }
 	ParamSelector = ParamSelector & 0x7F;
+	if((ParamSelector == static_cast<uint8_t>(PEFConfParam::NumEventFilter)) ||
+                (ParamSelector == static_cast<uint8_t>(PEFConfParam::NumAlertPolicyTable)))
+        {
+                return ipmi::responseReadOnlyParameter();
+        }
 	switch (PEFConfParam(ParamSelector))
 	{
 		case PEFConfParam::SetInProgress:
