diff -Nuar a/dcmihandler.cpp b/dcmihandler.cpp
--- a/dcmihandler.cpp	2021-03-17 14:28:45.656062144 +0530
+++ b/dcmihandler.cpp	2021-03-17 14:42:23.336830428 +0530
@@ -1193,7 +1193,7 @@
         log<level::ERR>("Invalid Requested Packet size",
                         entry("PACKET SIZE=%d", *data_len));
         *data_len = 0;
-        return IPMI_CC_REQ_DATA_LEN_INVALID;
+        return IPMI_CC_INVALID_FIELD_REQUEST;
     }
 
     try
@@ -1394,11 +1394,18 @@
     // PowerReadingState readings need to be populated
     // after Telemetry changes.
 
+
+    if(*data_len != sizeof(dcmi::GetPowerReadingRequest))
+    {
+       log<level::ERR>("Invalid Request Length");
+       return IPMI_CC_REQ_DATA_LEN_INVALID;
+    }
+
     if((requestData->mode > dcmi::DCMIPowerReadingMode::MODE_ENHANCED_POWER_STATS) || (requestData->reserved2))
       {
 	*data_len = 0;
-        log<level::ERR>("Invalid data fields");
-        return IPMI_CC_INVALID;
+        log<level::ERR>("Invalid data fields - Invalid Mode");
+        return IPMI_CC_INVALID_FIELD_REQUEST;
       }
 
     sdbusplus::bus::bus bus{ipmid_get_sd_bus_connection()};
@@ -1411,8 +1418,8 @@
 	if(requestData->modeAttribute != 0)
 	  {
 	    *data_len = 0;
-	    log<level::ERR>("Invalid data fields");
-	    return IPMI_CC_INVALID;
+	    log<level::ERR>("Invalid data fields - modeAttribute ");
+	    return IPMI_CC_INVALID_FIELD_REQUEST;
 	  }
 
 
@@ -1432,7 +1439,28 @@
    case dcmi::DCMIPowerReadingMode::MODE_ENHANCED_POWER_STATS:
 
        // check if Rolling Average Time Period is allowed (only ones 
-       //   specified in DMCI Capability Parameter 5 are allowed)
+       //   specified in DMCI Capability Parameter 5 are allowed). 
+       //   Currently we support only Rolling Average Time Period = 0
+       if(requestData->modeAttribute != 0)
+       {
+          *data_len = 0;
+          log<level::ERR>("Invalid data fields - modeAttribute ");
+          return IPMI_CC_INVALID_FIELD_REQUEST;
+        }
+
+       // Get Time in milli seconds
+       try
+       {
+           power = getPowerReading(bus);
+       }
+       catch (InternalFailure& e)
+       {
+           log<level::ERR>("Error in reading power sensor value",
+                           entry("INTERFACE=%s", SENSOR_VALUE_INTF),
+                           entry("PROPERTY=%s", SENSOR_VALUE_PROP));
+           return IPMI_CC_UNSPECIFIED_ERROR;
+       }
+
 
 
        break;
